ASTree
|-- VarDecl, BaseType: const Int, line: 1
|   `-- DefNode
|       `-- Var: LeftValueExpr maxN
|       `-- Init: InitSingle
|           `-- Const Int: 1000
|-- VarDecl, BaseType: const Int, line: 2
|   `-- DefNode
|       `-- Var: LeftValueExpr space
|       `-- Init: InitSingle
|           `-- Const Int: 32
|-- VarDecl, BaseType: Int, line: 3
|   `-- DefNode
|       |-- Var: LeftValueExpr array[Dim0]
|       |   Var: `-- Dim0 = LeftValueExpr maxN
|       `-- Init: no initializer
|-- FuncDecl @Name: swap -> @RetType: Void, line: 5
|   |-- Params:
|   |   |-- Int i
|   |   `-- Int j
|   `-- Body:
|       `-- BlockStmt, line: 5
|           |-- VarDecl, BaseType: Int, line: 6
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr tmp
|           |       `-- Init: InitSingle
|           |           `-- LeftValueExpr array[Dim0]
|           |               `-- Dim0 = LeftValueExpr i
|           |-- ExprStmt line: 7
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr array[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr i
|           |       `-- LeftValueExpr array[Dim0]
|           |           `-- Dim0 = LeftValueExpr j
|           `-- ExprStmt line: 8
|               `-- BinaryExpr Assign
|                   |-- LeftValueExpr array[Dim0]
|                   |   `-- Dim0 = LeftValueExpr j
|                   `-- LeftValueExpr tmp
|-- FuncDecl @Name: findPivot -> @RetType: Int, line: 11
|   |-- Params:
|   |   |-- Int start
|   |   `-- Int end
|   `-- Body:
|       `-- BlockStmt, line: 11
|           |-- VarDecl, BaseType: Int, line: 12
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr pivot
|           |       `-- Init: InitSingle
|           |           `-- LeftValueExpr array[Dim0]
|           |               `-- Dim0 = LeftValueExpr end
|           |-- VarDecl, BaseType: Int, line: 14
|           |   |-- DefNode
|           |   |   `-- Var: LeftValueExpr pIndex
|           |   |   `-- Init: InitSingle
|           |   |       `-- LeftValueExpr start
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr i
|           |       `-- Init: InitSingle
|           |           `-- LeftValueExpr start
|           |-- WhileStmt, line: 15
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- LeftValueExpr end
|           |   `-- Body:
|           |       `-- BlockStmt, line: 15
|           |           |-- IfStmt, line: 16
|           |           |   |-- Condition:
|           |           |   |   `-- BinaryExpr Le
|           |           |   |       |-- LeftValueExpr array[Dim0]
|           |           |   |       |   `-- Dim0 = LeftValueExpr i
|           |           |   |       `-- LeftValueExpr pivot
|           |           |   |-- Thenbody:
|           |           |   |   `-- BlockStmt, line: 16
|           |           |   |       |-- ExprStmt line: 17
|           |           |   |       |   `-- FuncCallExpr swap
|           |           |   |       |       |-- Arg0 = LeftValueExpr i
|           |           |   |       |       `-- Arg1 = LeftValueExpr pIndex
|           |           |   |       `-- ExprStmt line: 18
|           |           |   |           `-- BinaryExpr Assign
|           |           |   |               |-- LeftValueExpr pIndex
|           |           |   |               `-- BinaryExpr Add
|           |           |   |                   |-- LeftValueExpr pIndex
|           |           |   |                   `-- Const Int: 1
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           `-- ExprStmt line: 20
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           |-- ExprStmt line: 22
|           |   `-- FuncCallExpr swap
|           |       |-- Arg0 = LeftValueExpr pIndex
|           |       `-- Arg1 = LeftValueExpr end
|           `-- ReturnStmt, line: 23
|               `-- LeftValueExpr pIndex
|-- FuncDecl @Name: findSmallest -> @RetType: Void, line: 26
|   |-- Params:
|   |   |-- Int low
|   |   |-- Int high
|   |   |-- Int k
|   |   `-- Int n
|   `-- Body:
|       `-- BlockStmt, line: 26
|           `-- IfStmt, line: 27
|               |-- Condition:
|               |   `-- BinaryExpr Eq
|               |       |-- LeftValueExpr low
|               |       `-- LeftValueExpr high
|               |-- Thenbody:
|               |   `-- ReturnStmt, line: 28
|               |       `-- No return value
|               `-- Elsebody:
|                   `-- BlockStmt, line: 29
|                       |-- VarDecl, BaseType: Int, line: 30
|                       |   `-- DefNode
|                       |       `-- Var: LeftValueExpr pIndex
|                       |       `-- Init: InitSingle
|                       |           `-- FuncCallExpr findPivot
|                       |               |-- Arg0 = LeftValueExpr low
|                       |               `-- Arg1 = LeftValueExpr high
|                       `-- IfStmt, line: 31
|                           |-- Condition:
|                           |   `-- BinaryExpr Eq
|                           |       |-- LeftValueExpr k
|                           |       `-- LeftValueExpr pIndex
|                           |-- Thenbody:
|                           |   `-- BlockStmt, line: 31
|                           |       |-- VarDecl, BaseType: Int, line: 32
|                           |       |   `-- DefNode
|                           |       |       `-- Var: LeftValueExpr i
|                           |       |       `-- Init: InitSingle
|                           |       |           `-- Const Int: 0
|                           |       `-- WhileStmt, line: 33
|                           |           |-- Cond:
|                           |           |   `-- BinaryExpr Lt
|                           |           |       |-- LeftValueExpr i
|                           |           |       `-- LeftValueExpr pIndex
|                           |           `-- Body:
|                           |               `-- BlockStmt, line: 33
|                           |                   |-- ExprStmt line: 34
|                           |                   |   `-- FuncCallExpr putint
|                           |                   |       `-- Arg0 = LeftValueExpr array[Dim0]
|                           |                   |           `-- Dim0 = LeftValueExpr i
|                           |                   |-- ExprStmt line: 35
|                           |                   |   `-- FuncCallExpr putch
|                           |                   |       `-- Arg0 = LeftValueExpr space
|                           |                   `-- ExprStmt line: 36
|                           |                       `-- BinaryExpr Assign
|                           |                           |-- LeftValueExpr i
|                           |                           `-- BinaryExpr Add
|                           |                               |-- LeftValueExpr i
|                           |                               `-- Const Int: 1
|                           `-- Elsebody:
|                               `-- IfStmt, line: 39
|                                   |-- Condition:
|                                   |   `-- BinaryExpr Lt
|                                   |       |-- LeftValueExpr k
|                                   |       `-- LeftValueExpr pIndex
|                                   |-- Thenbody:
|                                   |   `-- BlockStmt, line: 39
|                                   |       `-- ExprStmt line: 40
|                                   |           `-- FuncCallExpr findSmallest
|                                   |               |-- Arg0 = LeftValueExpr low
|                                   |               |-- Arg1 = BinaryExpr Sub
|                                   |               |   Arg1 = |-- LeftValueExpr pIndex
|                                   |               |   Arg1 = `-- Const Int: 1
|                                   |               |-- Arg2 = LeftValueExpr k
|                                   |               `-- Arg3 = LeftValueExpr n
|                                   `-- Elsebody:
|                                       `-- BlockStmt, line: 42
|                                           `-- ExprStmt line: 43
|                                               `-- FuncCallExpr findSmallest
|                                                   |-- Arg0 = BinaryExpr Add
|                                                   |   Arg0 = |-- LeftValueExpr pIndex
|                                                   |   Arg0 = `-- Const Int: 1
|                                                   |-- Arg1 = LeftValueExpr high
|                                                   |-- Arg2 = LeftValueExpr k
|                                                   `-- Arg3 = LeftValueExpr n
`-- FuncDecl @Name: main -> @RetType: Int, line: 48
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 48
            |-- VarDecl, BaseType: Int, line: 49
            |   |-- DefNode
            |   |   `-- Var: LeftValueExpr n
            |   |   `-- Init: InitSingle
            |   |       `-- FuncCallExpr getint
            |   |           `-- No args
            |   `-- DefNode
            |       `-- Var: LeftValueExpr k
            |       `-- Init: InitSingle
            |           `-- FuncCallExpr getint
            |               `-- No args
            |-- VarDecl, BaseType: Int, line: 50
            |   `-- DefNode
            |       `-- Var: LeftValueExpr i
            |       `-- Init: InitSingle
            |           `-- Const Int: 0
            |-- WhileStmt, line: 51
            |   |-- Cond:
            |   |   `-- BinaryExpr Lt
            |   |       |-- LeftValueExpr i
            |   |       `-- LeftValueExpr n
            |   `-- Body:
            |       `-- BlockStmt, line: 51
            |           |-- ExprStmt line: 52
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr array[Dim0]
            |           |       |   `-- Dim0 = LeftValueExpr i
            |           |       `-- FuncCallExpr getint
            |           |           `-- No args
            |           `-- ExprStmt line: 53
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr i
            |                   `-- BinaryExpr Add
            |                       |-- LeftValueExpr i
            |                       `-- Const Int: 1
            |-- VarDecl, BaseType: Int, line: 55
            |   |-- DefNode
            |   |   `-- Var: LeftValueExpr low
            |   |   `-- Init: InitSingle
            |   |       `-- Const Int: 0
            |   `-- DefNode
            |       `-- Var: LeftValueExpr high
            |       `-- Init: InitSingle
            |           `-- BinaryExpr Sub
            |               |-- LeftValueExpr n
            |               `-- Const Int: 1
            |-- ExprStmt line: 56
            |   `-- FuncCallExpr findSmallest
            |       |-- Arg0 = LeftValueExpr low
            |       |-- Arg1 = LeftValueExpr high
            |       |-- Arg2 = LeftValueExpr k
            |       `-- Arg3 = LeftValueExpr n
            `-- ReturnStmt, line: 57
                `-- Const Int: 0
