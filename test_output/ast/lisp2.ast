ASTree
|-- FuncDecl @Name: eq -> @RetType: Int, line: 5
|   |-- Params:
|   |   |-- Int a
|   |   `-- Int b
|   `-- Body:
|       `-- BlockStmt, line: 5
|           |-- IfStmt, line: 5
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr a
|           |   |       `-- LeftValueExpr b
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 5
|           |   |       `-- ReturnStmt, line: 5
|           |   |           `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 5
|               `-- Const Int: 0
|-- FuncDecl @Name: ne -> @RetType: Int, line: 6
|   |-- Params:
|   |   |-- Int a
|   |   `-- Int b
|   `-- Body:
|       `-- BlockStmt, line: 6
|           |-- IfStmt, line: 6
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Neq
|           |   |       |-- LeftValueExpr a
|           |   |       `-- LeftValueExpr b
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 6
|           |   |       `-- ReturnStmt, line: 6
|           |   |           `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 6
|               `-- Const Int: 0
|-- FuncDecl @Name: lt -> @RetType: Int, line: 7
|   |-- Params:
|   |   |-- Int a
|   |   `-- Int b
|   `-- Body:
|       `-- BlockStmt, line: 7
|           |-- IfStmt, line: 7
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr a
|           |   |       `-- LeftValueExpr b
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 7
|           |   |       `-- ReturnStmt, line: 7
|           |   |           `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 7
|               `-- Const Int: 0
|-- FuncDecl @Name: le -> @RetType: Int, line: 8
|   |-- Params:
|   |   |-- Int a
|   |   `-- Int b
|   `-- Body:
|       `-- BlockStmt, line: 8
|           |-- IfStmt, line: 8
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Le
|           |   |       |-- LeftValueExpr a
|           |   |       `-- LeftValueExpr b
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 8
|           |   |       `-- ReturnStmt, line: 8
|           |   |           `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 8
|               `-- Const Int: 0
|-- FuncDecl @Name: gt -> @RetType: Int, line: 9
|   |-- Params:
|   |   |-- Int a
|   |   `-- Int b
|   `-- Body:
|       `-- BlockStmt, line: 9
|           |-- IfStmt, line: 9
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Gt
|           |   |       |-- LeftValueExpr a
|           |   |       `-- LeftValueExpr b
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 9
|           |   |       `-- ReturnStmt, line: 9
|           |   |           `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 9
|               `-- Const Int: 0
|-- FuncDecl @Name: ge -> @RetType: Int, line: 10
|   |-- Params:
|   |   |-- Int a
|   |   `-- Int b
|   `-- Body:
|       `-- BlockStmt, line: 10
|           |-- IfStmt, line: 10
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Ge
|           |   |       |-- LeftValueExpr a
|           |   |       `-- LeftValueExpr b
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 10
|           |   |       `-- ReturnStmt, line: 10
|           |   |           `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 10
|               `-- Const Int: 0
|-- VarDecl, BaseType: const Int, line: 16
|   `-- DefNode
|       `-- Var: LeftValueExpr ERR_INVALID_DATA_TYPE
|       `-- Init: InitSingle
|           `-- Const Int: 0
|-- VarDecl, BaseType: const Int, line: 17
|   `-- DefNode
|       `-- Var: LeftValueExpr ERR_BUFFER_OVERFLOW
|       `-- Init: InitSingle
|           `-- Const Int: 1
|-- VarDecl, BaseType: const Int, line: 18
|   `-- DefNode
|       `-- Var: LeftValueExpr ERR_PARSE_ERROR
|       `-- Init: InitSingle
|           `-- Const Int: 2
|-- VarDecl, BaseType: const Int, line: 19
|   `-- DefNode
|       `-- Var: LeftValueExpr ERR_SYMBOL_NOT_FOUND
|       `-- Init: InitSingle
|           `-- Const Int: 3
|-- VarDecl, BaseType: const Int, line: 20
|   `-- DefNode
|       `-- Var: LeftValueExpr ERR_INVALID_LIST
|       `-- Init: InitSingle
|           `-- Const Int: 4
|-- VarDecl, BaseType: const Int, line: 21
|   `-- DefNode
|       `-- Var: LeftValueExpr ERR_INVALID_FUNC
|       `-- Init: InitSingle
|           `-- Const Int: 5
|-- VarDecl, BaseType: const Int, line: 22
|   `-- DefNode
|       `-- Var: LeftValueExpr ERR_INVALID_ARG_NUM
|       `-- Init: InitSingle
|           `-- Const Int: 6
|-- VarDecl, BaseType: const Int, line: 23
|   `-- DefNode
|       `-- Var: LeftValueExpr ERR_TYPE_MISMATCH
|       `-- Init: InitSingle
|           `-- Const Int: 7
|-- VarDecl, BaseType: const Int, line: 24
|   `-- DefNode
|       `-- Var: LeftValueExpr ERR_INVALID_SYMBOL
|       `-- Init: InitSingle
|           `-- Const Int: 8
|-- FuncDecl @Name: panic -> @RetType: Int, line: 27
|   |-- Params:
|   |   `-- Int code
|   `-- Body:
|       `-- BlockStmt, line: 27
|           |-- ExprStmt line: 28
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 112
|           |-- ExprStmt line: 29
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 97
|           |-- ExprStmt line: 30
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 110
|           |-- ExprStmt line: 31
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 105
|           |-- ExprStmt line: 32
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 99
|           |-- ExprStmt line: 33
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 32
|           |-- ExprStmt line: 34
|           |   `-- FuncCallExpr putint
|           |       `-- Arg0 = LeftValueExpr code
|           |-- ExprStmt line: 35
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 10
|           `-- ReturnStmt, line: 36
|               `-- LeftValueExpr code
|-- VarDecl, BaseType: const Int, line: 44
|   `-- DefNode
|       `-- Var: LeftValueExpr DATA_TYPE
|       `-- Init: InitSingle
|           `-- Const Int: 0
|-- VarDecl, BaseType: const Int, line: 45
|   `-- DefNode
|       `-- Var: LeftValueExpr DATA_VALUE
|       `-- Init: InitSingle
|           `-- Const Int: 1
|-- VarDecl, BaseType: const Int, line: 46
|   `-- DefNode
|       `-- Var: LeftValueExpr DATA_NEXT
|       `-- Init: InitSingle
|           `-- Const Int: 2
|-- VarDecl, BaseType: const Int, line: 47
|   `-- DefNode
|       `-- Var: LeftValueExpr DATA_REF_COUNT
|       `-- Init: InitSingle
|           `-- Const Int: 3
|-- VarDecl, BaseType: const Int, line: 48
|   `-- DefNode
|       `-- Var: LeftValueExpr DATA_FIELD_COUNT
|       `-- Init: InitSingle
|           `-- Const Int: 4
|-- VarDecl, BaseType: const Int, line: 51
|   `-- DefNode
|       `-- Var: LeftValueExpr MAX_DATA_LEN
|       `-- Init: InitSingle
|           `-- Const Int: 2048
|-- VarDecl, BaseType: Int, line: 52
|   `-- DefNode
|       |-- Var: LeftValueExpr data[Dim0][Dim1]
|       |   Var: |-- Dim0 = LeftValueExpr MAX_DATA_LEN
|       |   Var: `-- Dim1 = LeftValueExpr DATA_FIELD_COUNT
|       `-- Init: no initializer
|-- VarDecl, BaseType: Int, line: 53
|   `-- DefNode
|       `-- Var: LeftValueExpr free_data_ptr
|       `-- Init: InitSingle
|           `-- Const Int: 0
|-- VarDecl, BaseType: const Int, line: 59
|   `-- DefNode
|       `-- Var: LeftValueExpr DATA_TYPE_SYMBOL
|       `-- Init: InitSingle
|           `-- Const Int: 0
|-- VarDecl, BaseType: const Int, line: 62
|   `-- DefNode
|       `-- Var: LeftValueExpr DATA_TYPE_NUMBER
|       `-- Init: InitSingle
|           `-- Const Int: 1
|-- VarDecl, BaseType: const Int, line: 65
|   `-- DefNode
|       `-- Var: LeftValueExpr DATA_TYPE_LIST
|       `-- Init: InitSingle
|           `-- Const Int: 2
|-- VarDecl, BaseType: const Int, line: 69
|   `-- DefNode
|       `-- Var: LeftValueExpr DATA_TYPE_ENV
|       `-- Init: InitSingle
|           `-- Const Int: 3
|-- VarDecl, BaseType: const Int, line: 72
|   `-- DefNode
|       `-- Var: LeftValueExpr DATA_TYPE_FUNC
|       `-- Init: InitSingle
|           `-- Const Int: 4
|-- FuncDecl @Name: init_data -> @RetType: Void, line: 75
|   |-- Params:
|   |       None
|   `-- Body:
|       `-- BlockStmt, line: 75
|           |-- ExprStmt line: 76
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = Const Int: 0
|           |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |       `-- Const Int: 0
|           |-- VarDecl, BaseType: Int, line: 77
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr i
|           |       `-- Init: InitSingle
|           |           `-- Const Int: 1
|           |-- WhileStmt, line: 78
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- LeftValueExpr MAX_DATA_LEN
|           |   `-- Body:
|           |       `-- BlockStmt, line: 78
|           |           |-- ExprStmt line: 79
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |           |       |   |-- Dim0 = LeftValueExpr i
|           |           |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |           |       `-- BinaryExpr Sub
|           |           |           |-- LeftValueExpr i
|           |           |           `-- Const Int: 1
|           |           `-- ExprStmt line: 80
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           `-- ExprStmt line: 82
|               `-- BinaryExpr Assign
|                   |-- LeftValueExpr free_data_ptr
|                   `-- BinaryExpr Sub
|                       |-- LeftValueExpr MAX_DATA_LEN
|                       `-- Const Int: 1
|-- FuncDecl @Name: alloc_data -> @RetType: Int, line: 87
|   |-- Params:
|   |       None
|   `-- Body:
|       `-- BlockStmt, line: 87
|           |-- IfStmt, line: 88
|           |   |-- Condition:
|           |   |   `-- UnaryExpr Not
|           |   |       `-- LeftValueExpr free_data_ptr
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 88
|           |   |       `-- FuncCallExpr panic
|           |   |           `-- Arg0 = LeftValueExpr ERR_BUFFER_OVERFLOW
|           |   `-- Elsebody:
|           |       `-- None
|           |-- VarDecl, BaseType: Int, line: 89
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr i
|           |       `-- Init: InitSingle
|           |           `-- LeftValueExpr free_data_ptr
|           |-- ExprStmt line: 90
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr free_data_ptr
|           |       `-- LeftValueExpr data[Dim0][Dim1]
|           |           |-- Dim0 = LeftValueExpr i
|           |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |-- ExprStmt line: 91
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr i
|           |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |       `-- Const Int: 0
|           |-- ExprStmt line: 92
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr i
|           |       |   `-- Dim1 = LeftValueExpr DATA_REF_COUNT
|           |       `-- Const Int: 1
|           `-- ReturnStmt, line: 93
|               `-- LeftValueExpr i
|-- FuncDecl @Name: free_data -> @RetType: Void, line: 98
|   |-- Params:
|   |   `-- Int data_ptr
|   `-- Body:
|       `-- BlockStmt, line: 98
|           |-- IfStmt, line: 99
|           |   |-- Condition:
|           |   |   `-- UnaryExpr Not
|           |   |       `-- LeftValueExpr data_ptr
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 99
|           |   |       `-- No return value
|           |   `-- Elsebody:
|           |       `-- None
|           |-- VarDecl, BaseType: Int, line: 101
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr ref_count
|           |       `-- Init: InitSingle
|           |           `-- BinaryExpr Sub
|           |               |-- LeftValueExpr data[Dim0][Dim1]
|           |               |   |-- Dim0 = LeftValueExpr data_ptr
|           |               |   `-- Dim1 = LeftValueExpr DATA_REF_COUNT
|           |               `-- Const Int: 1
|           |-- ExprStmt line: 102
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_REF_COUNT
|           |       `-- LeftValueExpr ref_count
|           |-- IfStmt, line: 103
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Gt
|           |   |       |-- LeftValueExpr ref_count
|           |   |       `-- Const Int: 0
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 103
|           |   |       `-- No return value
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 105
|           |   |-- Condition:
|           |   |   `-- BinaryExpr And
|           |   |       |-- BinaryExpr Neq
|           |   |       |   |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |   |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       |   `-- LeftValueExpr DATA_TYPE_SYMBOL
|           |   |       `-- BinaryExpr Neq
|           |   |           |-- LeftValueExpr data[Dim0][Dim1]
|           |   |           |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |           |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |           `-- LeftValueExpr DATA_TYPE_NUMBER
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 106
|           |   |       `-- ExprStmt line: 107
|           |   |           `-- FuncCallExpr free_data
|           |   |               `-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|           |   |                   |-- Dim0 = LeftValueExpr data_ptr
|           |   |                   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   `-- Elsebody:
|           |       `-- None
|           |-- ExprStmt line: 109
|           |   `-- FuncCallExpr free_data
|           |       `-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|           |           |-- Dim0 = LeftValueExpr data_ptr
|           |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |-- ExprStmt line: 110
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |       `-- LeftValueExpr free_data_ptr
|           `-- ExprStmt line: 111
|               `-- BinaryExpr Assign
|                   |-- LeftValueExpr free_data_ptr
|                   `-- LeftValueExpr data_ptr
|-- FuncDecl @Name: copy_ptr -> @RetType: Int, line: 116
|   |-- Params:
|   |   `-- Int data_ptr
|   `-- Body:
|       `-- BlockStmt, line: 116
|           |-- IfStmt, line: 117
|           |   |-- Condition:
|           |   |   `-- UnaryExpr Not
|           |   |       `-- LeftValueExpr data_ptr
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 117
|           |   |       `-- Const Int: 0
|           |   `-- Elsebody:
|           |       `-- None
|           |-- ExprStmt line: 118
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_REF_COUNT
|           |       `-- BinaryExpr Add
|           |           |-- LeftValueExpr data[Dim0][Dim1]
|           |           |   |-- Dim0 = LeftValueExpr data_ptr
|           |           |   `-- Dim1 = LeftValueExpr DATA_REF_COUNT
|           |           `-- Const Int: 1
|           `-- ReturnStmt, line: 119
|               `-- LeftValueExpr data_ptr
|-- FuncDecl @Name: copy_data -> @RetType: Int, line: 124
|   |-- Params:
|   |   `-- Int data_ptr
|   `-- Body:
|       `-- BlockStmt, line: 124
|           |-- IfStmt, line: 125
|           |   |-- Condition:
|           |   |   `-- UnaryExpr Not
|           |   |       `-- LeftValueExpr data_ptr
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 125
|           |   |       `-- Const Int: 0
|           |   `-- Elsebody:
|           |       `-- None
|           |-- VarDecl, BaseType: Int, line: 126
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr new_data_ptr
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr alloc_data
|           |               `-- No args
|           |-- ExprStmt line: 127
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr new_data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |       `-- LeftValueExpr data[Dim0][Dim1]
|           |           |-- Dim0 = LeftValueExpr data_ptr
|           |           `-- Dim1 = LeftValueExpr DATA_TYPE
|           |-- VarDecl, BaseType: Int, line: 128
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr value_ptr
|           |       `-- Init: InitSingle
|           |           `-- LeftValueExpr data[Dim0][Dim1]
|           |               |-- Dim0 = LeftValueExpr data_ptr
|           |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |-- IfStmt, line: 129
|           |   |-- Condition:
|           |   |   `-- BinaryExpr And
|           |   |       |-- BinaryExpr Neq
|           |   |       |   |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |   |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       |   `-- LeftValueExpr DATA_TYPE_SYMBOL
|           |   |       `-- BinaryExpr Neq
|           |   |           |-- LeftValueExpr data[Dim0][Dim1]
|           |   |           |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |           |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |           `-- LeftValueExpr DATA_TYPE_NUMBER
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 130
|           |   |       `-- ExprStmt line: 131
|           |   |           `-- BinaryExpr Assign
|           |   |               |-- LeftValueExpr value_ptr
|           |   |               `-- FuncCallExpr copy_ptr
|           |   |                   `-- Arg0 = LeftValueExpr value_ptr
|           |   `-- Elsebody:
|           |       `-- None
|           |-- ExprStmt line: 133
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr new_data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |       `-- LeftValueExpr value_ptr
|           |-- ExprStmt line: 134
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr new_data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |       `-- Const Int: 0
|           `-- ReturnStmt, line: 135
|               `-- LeftValueExpr new_data_ptr
|-- FuncDecl @Name: make_symbol -> @RetType: Int, line: 139
|   |-- Params:
|   |   `-- Int sym_ptr
|   `-- Body:
|       `-- BlockStmt, line: 139
|           |-- VarDecl, BaseType: Int, line: 140
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr data_ptr
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr alloc_data
|           |               `-- No args
|           |-- ExprStmt line: 141
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |       `-- LeftValueExpr DATA_TYPE_SYMBOL
|           |-- ExprStmt line: 142
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |       `-- LeftValueExpr sym_ptr
|           `-- ReturnStmt, line: 143
|               `-- LeftValueExpr data_ptr
|-- FuncDecl @Name: make_number -> @RetType: Int, line: 147
|   |-- Params:
|   |   `-- Int num
|   `-- Body:
|       `-- BlockStmt, line: 147
|           |-- VarDecl, BaseType: Int, line: 148
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr data_ptr
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr alloc_data
|           |               `-- No args
|           |-- ExprStmt line: 149
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |       `-- LeftValueExpr DATA_TYPE_NUMBER
|           |-- ExprStmt line: 150
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |       `-- LeftValueExpr num
|           `-- ReturnStmt, line: 151
|               `-- LeftValueExpr data_ptr
|-- FuncDecl @Name: make_list -> @RetType: Int, line: 155
|   |-- Params:
|   |   `-- Int head_ptr
|   `-- Body:
|       `-- BlockStmt, line: 155
|           |-- VarDecl, BaseType: Int, line: 156
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr data_ptr
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr alloc_data
|           |               `-- No args
|           |-- ExprStmt line: 157
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |       `-- LeftValueExpr DATA_TYPE_LIST
|           |-- ExprStmt line: 158
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |       `-- LeftValueExpr head_ptr
|           `-- ReturnStmt, line: 159
|               `-- LeftValueExpr data_ptr
|-- VarDecl, BaseType: const Int, line: 167
|   `-- DefNode
|       `-- Var: LeftValueExpr MAX_SYM_BUF_LEN
|       `-- Init: InitSingle
|           `-- Const Int: 4096
|-- VarDecl, BaseType: Int, line: 168
|   `-- DefNode
|       |-- Var: LeftValueExpr sym_buf[Dim0]
|       |   Var: `-- Dim0 = LeftValueExpr MAX_SYM_BUF_LEN
|       `-- Init: no initializer
|-- VarDecl, BaseType: Int, line: 169
|   `-- DefNode
|       `-- Var: LeftValueExpr next_sym
|       `-- Init: InitSingle
|           `-- Const Int: 0
|-- VarDecl, BaseType: const Int, line: 172
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_QUOTE
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 1
|-- VarDecl, BaseType: const Int, line: 173
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_ATOM
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 2
|-- VarDecl, BaseType: const Int, line: 174
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_NUMBER
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 3
|-- VarDecl, BaseType: const Int, line: 175
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_EQ
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 4
|-- VarDecl, BaseType: const Int, line: 176
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_CAR
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 5
|-- VarDecl, BaseType: const Int, line: 177
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_CDR
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 6
|-- VarDecl, BaseType: const Int, line: 178
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_CONS
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 7
|-- VarDecl, BaseType: const Int, line: 179
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_COND
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 8
|-- VarDecl, BaseType: const Int, line: 180
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_LAMBDA
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 9
|-- VarDecl, BaseType: const Int, line: 181
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_DEFINE
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 10
|-- VarDecl, BaseType: const Int, line: 182
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_T
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 11
|-- VarDecl, BaseType: const Int, line: 183
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_F
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 12
|-- VarDecl, BaseType: const Int, line: 184
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_LIST
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 13
|-- VarDecl, BaseType: const Int, line: 185
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_ADD
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 14
|-- VarDecl, BaseType: const Int, line: 186
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_SUB
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 15
|-- VarDecl, BaseType: const Int, line: 187
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_MUL
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 16
|-- VarDecl, BaseType: const Int, line: 188
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_DIV
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 17
|-- VarDecl, BaseType: const Int, line: 189
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_GT
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 18
|-- VarDecl, BaseType: const Int, line: 190
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_LT
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 19
|-- VarDecl, BaseType: const Int, line: 191
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_GE
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 20
|-- VarDecl, BaseType: const Int, line: 192
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_LE
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 21
|-- VarDecl, BaseType: const Int, line: 193
|   `-- DefNode
|       `-- Var: LeftValueExpr SYM_EQ_NUM
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- Const Int: 22
|-- VarDecl, BaseType: const Int, line: 194
|   `-- DefNode
|       `-- Var: LeftValueExpr PRE_SYM_COUNT
|       `-- Init: InitSingle
|           `-- UnaryExpr Sub
|               `-- LeftValueExpr SYM_EQ_NUM
|-- VarDecl, BaseType: const Int, line: 197
|   `-- DefNode
|       `-- Var: LeftValueExpr PREDEF_SYMS[Dim0][Dim1]
|           |-- Dim0 = LeftValueExpr PRE_SYM_COUNT
|           `-- Dim1 = Const Int: 8
|       `-- Init: InitMulti
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 113
|           |   |-- InitSingle
|           |   |   `-- Const Int: 117
|           |   |-- InitSingle
|           |   |   `-- Const Int: 111
|           |   |-- InitSingle
|           |   |   `-- Const Int: 116
|           |   `-- InitSingle
|           |       `-- Const Int: 101
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 97
|           |   |-- InitSingle
|           |   |   `-- Const Int: 116
|           |   |-- InitSingle
|           |   |   `-- Const Int: 111
|           |   |-- InitSingle
|           |   |   `-- Const Int: 109
|           |   `-- InitSingle
|           |       `-- Const Int: 63
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 110
|           |   |-- InitSingle
|           |   |   `-- Const Int: 117
|           |   |-- InitSingle
|           |   |   `-- Const Int: 109
|           |   |-- InitSingle
|           |   |   `-- Const Int: 98
|           |   |-- InitSingle
|           |   |   `-- Const Int: 101
|           |   |-- InitSingle
|           |   |   `-- Const Int: 114
|           |   `-- InitSingle
|           |       `-- Const Int: 63
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 101
|           |   |-- InitSingle
|           |   |   `-- Const Int: 113
|           |   `-- InitSingle
|           |       `-- Const Int: 63
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 99
|           |   |-- InitSingle
|           |   |   `-- Const Int: 97
|           |   `-- InitSingle
|           |       `-- Const Int: 114
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 99
|           |   |-- InitSingle
|           |   |   `-- Const Int: 100
|           |   `-- InitSingle
|           |       `-- Const Int: 114
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 99
|           |   |-- InitSingle
|           |   |   `-- Const Int: 111
|           |   |-- InitSingle
|           |   |   `-- Const Int: 110
|           |   `-- InitSingle
|           |       `-- Const Int: 115
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 99
|           |   |-- InitSingle
|           |   |   `-- Const Int: 111
|           |   |-- InitSingle
|           |   |   `-- Const Int: 110
|           |   `-- InitSingle
|           |       `-- Const Int: 100
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 108
|           |   |-- InitSingle
|           |   |   `-- Const Int: 97
|           |   |-- InitSingle
|           |   |   `-- Const Int: 109
|           |   |-- InitSingle
|           |   |   `-- Const Int: 98
|           |   |-- InitSingle
|           |   |   `-- Const Int: 100
|           |   `-- InitSingle
|           |       `-- Const Int: 97
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 100
|           |   |-- InitSingle
|           |   |   `-- Const Int: 101
|           |   |-- InitSingle
|           |   |   `-- Const Int: 102
|           |   |-- InitSingle
|           |   |   `-- Const Int: 105
|           |   |-- InitSingle
|           |   |   `-- Const Int: 110
|           |   `-- InitSingle
|           |       `-- Const Int: 101
|           |-- InitMulti
|           |   `-- InitSingle
|           |       `-- Const Int: 116
|           |-- InitMulti
|           |   `-- InitSingle
|           |       `-- Const Int: 102
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 108
|           |   |-- InitSingle
|           |   |   `-- Const Int: 105
|           |   |-- InitSingle
|           |   |   `-- Const Int: 115
|           |   `-- InitSingle
|           |       `-- Const Int: 116
|           |-- InitMulti
|           |   `-- InitSingle
|           |       `-- Const Int: 43
|           |-- InitMulti
|           |   `-- InitSingle
|           |       `-- Const Int: 45
|           |-- InitMulti
|           |   `-- InitSingle
|           |       `-- Const Int: 42
|           |-- InitMulti
|           |   `-- InitSingle
|           |       `-- Const Int: 47
|           |-- InitMulti
|           |   `-- InitSingle
|           |       `-- Const Int: 62
|           |-- InitMulti
|           |   `-- InitSingle
|           |       `-- Const Int: 60
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 62
|           |   `-- InitSingle
|           |       `-- Const Int: 61
|           |-- InitMulti
|           |   |-- InitSingle
|           |   |   `-- Const Int: 60
|           |   `-- InitSingle
|           |       `-- Const Int: 61
|           `-- InitMulti
|               `-- InitSingle
|                   `-- Const Int: 61
|-- FuncDecl @Name: is_predef_sym -> @RetType: Int, line: 226
|   |-- Params:
|   |   `-- Int sym_ptr
|   `-- Body:
|       `-- BlockStmt, line: 226
|           |-- VarDecl, BaseType: Int, line: 227
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr i
|           |       `-- Init: InitSingle
|           |           `-- Const Int: 0
|           |-- WhileStmt, line: 228
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- LeftValueExpr PRE_SYM_COUNT
|           |   `-- Body:
|           |       `-- BlockStmt, line: 228
|           |           |-- VarDecl, BaseType: Int, line: 229
|           |           |   |-- DefNode
|           |           |   |   `-- Var: LeftValueExpr j
|           |           |   |   `-- Init: InitSingle
|           |           |   |       `-- Const Int: 0
|           |           |   `-- DefNode
|           |           |       `-- Var: LeftValueExpr failed
|           |           |       `-- Init: InitSingle
|           |           |           `-- Const Int: 0
|           |           |-- WhileStmt, line: 230
|           |           |   |-- Cond:
|           |           |   |   `-- LeftValueExpr sym_buf[Dim0]
|           |           |   |       `-- Dim0 = BinaryExpr Add
|           |           |   |           |-- LeftValueExpr sym_ptr
|           |           |   |           `-- LeftValueExpr j
|           |           |   `-- Body:
|           |           |       `-- BlockStmt, line: 230
|           |           |           |-- IfStmt, line: 231
|           |           |           |   |-- Condition:
|           |           |           |   |   `-- BinaryExpr Neq
|           |           |           |   |       |-- LeftValueExpr sym_buf[Dim0]
|           |           |           |   |       |   `-- Dim0 = BinaryExpr Add
|           |           |           |   |       |       |-- LeftValueExpr sym_ptr
|           |           |           |   |       |       `-- LeftValueExpr j
|           |           |           |   |       `-- LeftValueExpr PREDEF_SYMS[Dim0][Dim1]
|           |           |           |   |           |-- Dim0 = LeftValueExpr i
|           |           |           |   |           `-- Dim1 = LeftValueExpr j
|           |           |           |   |-- Thenbody:
|           |           |           |   |   `-- BlockStmt, line: 231
|           |           |           |   |       |-- ExprStmt line: 232
|           |           |           |   |       |   `-- BinaryExpr Assign
|           |           |           |   |       |       |-- LeftValueExpr failed
|           |           |           |   |       |       `-- Const Int: 1
|           |           |           |   |       `-- BreakStmt, line: 233
|           |           |           |   `-- Elsebody:
|           |           |           |       `-- None
|           |           |           `-- ExprStmt line: 235
|           |           |               `-- BinaryExpr Assign
|           |           |                   |-- LeftValueExpr j
|           |           |                   `-- BinaryExpr Add
|           |           |                       |-- LeftValueExpr j
|           |           |                       `-- Const Int: 1
|           |           |-- IfStmt, line: 237
|           |           |   |-- Condition:
|           |           |   |   `-- BinaryExpr And
|           |           |   |       |-- UnaryExpr Not
|           |           |   |       |   `-- LeftValueExpr failed
|           |           |   |       `-- UnaryExpr Not
|           |           |   |           `-- LeftValueExpr PREDEF_SYMS[Dim0][Dim1]
|           |           |   |               |-- Dim0 = LeftValueExpr i
|           |           |   |               `-- Dim1 = LeftValueExpr j
|           |           |   |-- Thenbody:
|           |           |   |   `-- BlockStmt, line: 237
|           |           |   |       |-- ExprStmt line: 238
|           |           |   |       |   `-- BinaryExpr Assign
|           |           |   |       |       |-- LeftValueExpr next_sym
|           |           |   |       |       `-- LeftValueExpr sym_ptr
|           |           |   |       `-- ReturnStmt, line: 239
|           |           |   |           `-- BinaryExpr Sub
|           |           |   |               |-- UnaryExpr Sub
|           |           |   |               |   `-- LeftValueExpr i
|           |           |   |               `-- Const Int: 1
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           `-- ExprStmt line: 241
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           `-- ReturnStmt, line: 243
|               `-- LeftValueExpr sym_ptr
|-- FuncDecl @Name: is_eq_sym -> @RetType: Int, line: 247
|   |-- Params:
|   |   |-- Int sym1
|   |   `-- Int sym2
|   `-- Body:
|       `-- BlockStmt, line: 247
|           |-- IfStmt, line: 248
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr sym1
|           |   |       `-- LeftValueExpr sym2
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 248
|           |   |       `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 249
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Or
|           |   |       |-- BinaryExpr Lt
|           |   |       |   |-- LeftValueExpr sym1
|           |   |       |   `-- Const Int: 0
|           |   |       `-- BinaryExpr Lt
|           |   |           |-- LeftValueExpr sym2
|           |   |           `-- Const Int: 0
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 249
|           |   |       `-- Const Int: 0
|           |   `-- Elsebody:
|           |       `-- None
|           |-- VarDecl, BaseType: Int, line: 250
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr i
|           |       `-- Init: InitSingle
|           |           `-- Const Int: 0
|           |-- WhileStmt, line: 251
|           |   |-- Cond:
|           |   |   `-- LeftValueExpr sym_buf[Dim0]
|           |   |       `-- Dim0 = BinaryExpr Add
|           |   |           |-- LeftValueExpr sym1
|           |   |           `-- LeftValueExpr i
|           |   `-- Body:
|           |       `-- BlockStmt, line: 251
|           |           |-- IfStmt, line: 252
|           |           |   |-- Condition:
|           |           |   |   `-- BinaryExpr Neq
|           |           |   |       |-- LeftValueExpr sym_buf[Dim0]
|           |           |   |       |   `-- Dim0 = BinaryExpr Add
|           |           |   |       |       |-- LeftValueExpr sym1
|           |           |   |       |       `-- LeftValueExpr i
|           |           |   |       `-- LeftValueExpr sym_buf[Dim0]
|           |           |   |           `-- Dim0 = BinaryExpr Add
|           |           |   |               |-- LeftValueExpr sym2
|           |           |   |               `-- LeftValueExpr i
|           |           |   |-- Thenbody:
|           |           |   |   `-- ReturnStmt, line: 252
|           |           |   |       `-- Const Int: 0
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           `-- ExprStmt line: 253
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           `-- ReturnStmt, line: 255
|               `-- FuncCallExpr eq
|                   |-- Arg0 = LeftValueExpr sym_buf[Dim0]
|                   |   Arg0 = `-- Dim0 = BinaryExpr Add
|                   |   Arg0 =     |-- LeftValueExpr sym1
|                   |   Arg0 =     `-- LeftValueExpr i
|                   `-- Arg1 = LeftValueExpr sym_buf[Dim0]
|                       `-- Dim0 = BinaryExpr Add
|                           |-- LeftValueExpr sym2
|                           `-- LeftValueExpr i
|-- FuncDecl @Name: print_sym -> @RetType: Void, line: 259
|   |-- Params:
|   |   `-- Int sym_ptr
|   `-- Body:
|       `-- BlockStmt, line: 259
|           `-- IfStmt, line: 260
|               |-- Condition:
|               |   `-- BinaryExpr Lt
|               |       |-- LeftValueExpr sym_ptr
|               |       `-- Const Int: 0
|               |-- Thenbody:
|               |   `-- BlockStmt, line: 260
|               |       |-- VarDecl, BaseType: Int, line: 261
|               |       |   `-- DefNode
|               |       |       `-- Var: LeftValueExpr i
|               |       |       `-- Init: InitSingle
|               |       |           `-- Const Int: 0
|               |       `-- WhileStmt, line: 262
|               |           |-- Cond:
|               |           |   `-- LeftValueExpr PREDEF_SYMS[Dim0][Dim1]
|               |           |       |-- Dim0 = BinaryExpr Sub
|               |           |       |   Dim0 = |-- UnaryExpr Sub
|               |           |       |   Dim0 = |   `-- LeftValueExpr sym_ptr
|               |           |       |   Dim0 = `-- Const Int: 1
|               |           |       `-- Dim1 = LeftValueExpr i
|               |           `-- Body:
|               |               `-- BlockStmt, line: 262
|               |                   |-- ExprStmt line: 263
|               |                   |   `-- FuncCallExpr putch
|               |                   |       `-- Arg0 = LeftValueExpr PREDEF_SYMS[Dim0][Dim1]
|               |                   |           |-- Dim0 = BinaryExpr Sub
|               |                   |           |   Dim0 = |-- UnaryExpr Sub
|               |                   |           |   Dim0 = |   `-- LeftValueExpr sym_ptr
|               |                   |           |   Dim0 = `-- Const Int: 1
|               |                   |           `-- Dim1 = LeftValueExpr i
|               |                   `-- ExprStmt line: 264
|               |                       `-- BinaryExpr Assign
|               |                           |-- LeftValueExpr i
|               |                           `-- BinaryExpr Add
|               |                               |-- LeftValueExpr i
|               |                               `-- Const Int: 1
|               `-- Elsebody:
|                   `-- BlockStmt, line: 266
|                       |-- VarDecl, BaseType: Int, line: 267
|                       |   `-- DefNode
|                       |       `-- Var: LeftValueExpr i
|                       |       `-- Init: InitSingle
|                       |           `-- Const Int: 0
|                       `-- WhileStmt, line: 268
|                           |-- Cond:
|                           |   `-- LeftValueExpr sym_buf[Dim0]
|                           |       `-- Dim0 = BinaryExpr Add
|                           |           |-- LeftValueExpr sym_ptr
|                           |           `-- LeftValueExpr i
|                           `-- Body:
|                               `-- BlockStmt, line: 268
|                                   |-- ExprStmt line: 269
|                                   |   `-- FuncCallExpr putch
|                                   |       `-- Arg0 = LeftValueExpr sym_buf[Dim0]
|                                   |           `-- Dim0 = BinaryExpr Add
|                                   |               |-- LeftValueExpr sym_ptr
|                                   |               `-- LeftValueExpr i
|                                   `-- ExprStmt line: 270
|                                       `-- BinaryExpr Assign
|                                           |-- LeftValueExpr i
|                                           `-- BinaryExpr Add
|                                               |-- LeftValueExpr i
|                                               `-- Const Int: 1
|-- FuncDecl @Name: make_env -> @RetType: Int, line: 280
|   |-- Params:
|   |   `-- Int outer_ptr
|   `-- Body:
|       `-- BlockStmt, line: 280
|           |-- VarDecl, BaseType: Int, line: 281
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr data_ptr
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr alloc_data
|           |               `-- No args
|           |-- ExprStmt line: 282
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |       `-- LeftValueExpr DATA_TYPE_ENV
|           |-- ExprStmt line: 283
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |       `-- Const Int: 0
|           |-- ExprStmt line: 284
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |       `-- LeftValueExpr outer_ptr
|           `-- ReturnStmt, line: 285
|               `-- LeftValueExpr data_ptr
|-- FuncDecl @Name: env_add -> @RetType: Void, line: 289
|   |-- Params:
|   |   |-- Int env_ptr
|   |   |-- Int sym_ptr
|   |   `-- Int val_data_ptr
|   `-- Body:
|       `-- BlockStmt, line: 289
|           |-- VarDecl, BaseType: Int, line: 291
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr sym
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr make_symbol
|           |               `-- Arg0 = LeftValueExpr sym_ptr
|           |-- ExprStmt line: 292
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr sym
|           |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |       `-- LeftValueExpr val_data_ptr
|           |-- VarDecl, BaseType: Int, line: 293
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr pair
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr make_list
|           |               `-- Arg0 = LeftValueExpr sym
|           |-- ExprStmt line: 295
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr pair
|           |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |       `-- LeftValueExpr data[Dim0][Dim1]
|           |           |-- Dim0 = LeftValueExpr env_ptr
|           |           `-- Dim1 = LeftValueExpr DATA_VALUE
|           `-- ExprStmt line: 296
|               `-- BinaryExpr Assign
|                   |-- LeftValueExpr data[Dim0][Dim1]
|                   |   |-- Dim0 = LeftValueExpr env_ptr
|                   |   `-- Dim1 = LeftValueExpr DATA_VALUE
|                   `-- LeftValueExpr pair
|-- FuncDecl @Name: env_get -> @RetType: Int, line: 301
|   |-- Params:
|   |   |-- Int env_ptr
|   |   `-- Int sym_ptr
|   `-- Body:
|       `-- BlockStmt, line: 301
|           |-- VarDecl, BaseType: Int, line: 302
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr pair
|           |       `-- Init: InitSingle
|           |           `-- LeftValueExpr data[Dim0][Dim1]
|           |               |-- Dim0 = LeftValueExpr env_ptr
|           |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |-- WhileStmt, line: 303
|           |   |-- Cond:
|           |   |   `-- LeftValueExpr pair
|           |   `-- Body:
|           |       `-- BlockStmt, line: 303
|           |           |-- VarDecl, BaseType: Int, line: 304
|           |           |   `-- DefNode
|           |           |       `-- Var: LeftValueExpr sym
|           |           |       `-- Init: InitSingle
|           |           |           `-- LeftValueExpr data[Dim0][Dim1]
|           |           |               |-- Dim0 = LeftValueExpr pair
|           |           |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |           |-- IfStmt, line: 305
|           |           |   |-- Condition:
|           |           |   |   `-- FuncCallExpr is_eq_sym
|           |           |   |       |-- Arg0 = LeftValueExpr sym_ptr
|           |           |   |       `-- Arg1 = LeftValueExpr data[Dim0][Dim1]
|           |           |   |           |-- Dim0 = LeftValueExpr sym
|           |           |   |           `-- Dim1 = LeftValueExpr DATA_VALUE
|           |           |   |-- Thenbody:
|           |           |   |   `-- ReturnStmt, line: 305
|           |           |   |       `-- LeftValueExpr pair
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           `-- ExprStmt line: 306
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr pair
|           |                   `-- LeftValueExpr data[Dim0][Dim1]
|           |                       |-- Dim0 = LeftValueExpr pair
|           |                       `-- Dim1 = LeftValueExpr DATA_NEXT
|           `-- ReturnStmt, line: 308
|               `-- Const Int: 0
|-- FuncDecl @Name: env_set -> @RetType: Void, line: 313
|   |-- Params:
|   |   |-- Int env_ptr
|   |   |-- Int sym_ptr
|   |   `-- Int val_data_ptr
|   `-- Body:
|       `-- BlockStmt, line: 313
|           |-- VarDecl, BaseType: Int, line: 314
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr pair
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr env_get
|           |               |-- Arg0 = LeftValueExpr env_ptr
|           |               `-- Arg1 = LeftValueExpr sym_ptr
|           `-- IfStmt, line: 315
|               |-- Condition:
|               |   `-- LeftValueExpr pair
|               |-- Thenbody:
|               |   `-- BlockStmt, line: 315
|               |       |-- VarDecl, BaseType: Int, line: 316
|               |       |   `-- DefNode
|               |       |       `-- Var: LeftValueExpr sym
|               |       |       `-- Init: InitSingle
|               |       |           `-- LeftValueExpr data[Dim0][Dim1]
|               |       |               |-- Dim0 = LeftValueExpr pair
|               |       |               `-- Dim1 = LeftValueExpr DATA_VALUE
|               |       |-- ExprStmt line: 317
|               |       |   `-- FuncCallExpr free_data
|               |       |       `-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|               |       |           |-- Dim0 = LeftValueExpr sym
|               |       |           `-- Dim1 = LeftValueExpr DATA_NEXT
|               |       `-- ExprStmt line: 318
|               |           `-- BinaryExpr Assign
|               |               |-- LeftValueExpr data[Dim0][Dim1]
|               |               |   |-- Dim0 = LeftValueExpr sym
|               |               |   `-- Dim1 = LeftValueExpr DATA_NEXT
|               |               `-- LeftValueExpr val_data_ptr
|               `-- Elsebody:
|                   `-- BlockStmt, line: 319
|                       `-- ExprStmt line: 320
|                           `-- FuncCallExpr env_add
|                               |-- Arg0 = LeftValueExpr env_ptr
|                               |-- Arg1 = LeftValueExpr sym_ptr
|                               `-- Arg2 = LeftValueExpr val_data_ptr
|-- FuncDecl @Name: env_find -> @RetType: Int, line: 326
|   |-- Params:
|   |   |-- Int env_ptr
|   |   `-- Int sym_ptr
|   `-- Body:
|       `-- BlockStmt, line: 326
|           |-- IfStmt, line: 327
|           |   |-- Condition:
|           |   |   `-- UnaryExpr Not
|           |   |       `-- LeftValueExpr env_ptr
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 327
|           |   |       `-- Const Int: 0
|           |   `-- Elsebody:
|           |       `-- None
|           |-- VarDecl, BaseType: Int, line: 328
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr pair
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr env_get
|           |               |-- Arg0 = LeftValueExpr env_ptr
|           |               `-- Arg1 = LeftValueExpr sym_ptr
|           |-- IfStmt, line: 329
|           |   |-- Condition:
|           |   |   `-- LeftValueExpr pair
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 329
|           |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |           |-- Dim0 = LeftValueExpr data[Dim0][Dim1]
|           |   |           |   Dim0 = |-- Dim0 = LeftValueExpr pair
|           |   |           |   Dim0 = `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 330
|               `-- FuncCallExpr env_find
|                   |-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|                   |   Arg0 = |-- Dim0 = LeftValueExpr env_ptr
|                   |   Arg0 = `-- Dim1 = LeftValueExpr DATA_NEXT
|                   `-- Arg1 = LeftValueExpr sym_ptr
|-- FuncDecl @Name: make_func -> @RetType: Int, line: 338
|   |-- Params:
|   |   |-- Int param_list_ptr
|   |   |-- Int body_ptr
|   |   `-- Int env_ptr
|   `-- Body:
|       `-- BlockStmt, line: 338
|           |-- VarDecl, BaseType: Int, line: 339
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr data_ptr
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr alloc_data
|           |               `-- No args
|           |-- ExprStmt line: 340
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |       `-- LeftValueExpr DATA_TYPE_FUNC
|           |-- ExprStmt line: 341
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |       `-- LeftValueExpr param_list_ptr
|           |-- ExprStmt line: 342
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr param_list_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |       `-- LeftValueExpr body_ptr
|           |-- ExprStmt line: 343
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr body_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |       `-- LeftValueExpr env_ptr
|           `-- ReturnStmt, line: 344
|               `-- LeftValueExpr data_ptr
|-- VarDecl, BaseType: Int, line: 352
|   `-- DefNode
|       `-- Var: LeftValueExpr last_char
|       `-- Init: InitSingle
|           `-- Const Int: 32
|-- VarDecl, BaseType: const Int, line: 355
|   `-- DefNode
|       `-- Var: LeftValueExpr TOKEN_EOF
|       `-- Init: InitSingle
|           `-- Const Int: 0
|-- VarDecl, BaseType: const Int, line: 356
|   `-- DefNode
|       `-- Var: LeftValueExpr TOKEN_SYMBOL
|       `-- Init: InitSingle
|           `-- Const Int: 1
|-- VarDecl, BaseType: const Int, line: 357
|   `-- DefNode
|       `-- Var: LeftValueExpr TOKEN_NUMBER
|       `-- Init: InitSingle
|           `-- Const Int: 2
|-- VarDecl, BaseType: const Int, line: 358
|   `-- DefNode
|       `-- Var: LeftValueExpr TOKEN_QUOTE
|       `-- Init: InitSingle
|           `-- Const Int: 3
|-- VarDecl, BaseType: const Int, line: 359
|   `-- DefNode
|       `-- Var: LeftValueExpr TOKEN_LPAREN
|       `-- Init: InitSingle
|           `-- Const Int: 4
|-- VarDecl, BaseType: const Int, line: 360
|   `-- DefNode
|       `-- Var: LeftValueExpr TOKEN_RPAREN
|       `-- Init: InitSingle
|           `-- Const Int: 5
|-- VarDecl, BaseType: Int, line: 364
|   `-- DefNode
|       `-- Var: LeftValueExpr last_token
|       `-- Init: InitSingle
|           `-- Const Int: 0
|-- FuncDecl @Name: is_space -> @RetType: Int, line: 367
|   |-- Params:
|   |   `-- Int c
|   `-- Body:
|       `-- BlockStmt, line: 367
|           |-- IfStmt, line: 367
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Or
|           |   |       |-- BinaryExpr Or
|           |   |       |   |-- BinaryExpr Or
|           |   |       |   |   |-- BinaryExpr Eq
|           |   |       |   |   |   |-- LeftValueExpr c
|           |   |       |   |   |   `-- Const Int: 32
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr c
|           |   |       |   |       `-- Const Int: 9
|           |   |       |   `-- BinaryExpr Eq
|           |   |       |       |-- LeftValueExpr c
|           |   |       |       `-- Const Int: 10
|           |   |       `-- BinaryExpr Eq
|           |   |           |-- LeftValueExpr c
|           |   |           `-- Const Int: 13
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 367
|           |   |       `-- ReturnStmt, line: 367
|           |   |           `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 367
|               `-- Const Int: 0
|-- FuncDecl @Name: is_digit -> @RetType: Int, line: 370
|   |-- Params:
|   |   `-- Int c
|   `-- Body:
|       `-- BlockStmt, line: 370
|           |-- IfStmt, line: 370
|           |   |-- Condition:
|           |   |   `-- BinaryExpr And
|           |   |       |-- BinaryExpr Ge
|           |   |       |   |-- LeftValueExpr c
|           |   |       |   `-- Const Int: 48
|           |   |       `-- BinaryExpr Le
|           |   |           |-- LeftValueExpr c
|           |   |           `-- Const Int: 57
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 370
|           |   |       `-- ReturnStmt, line: 370
|           |   |           `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 370
|               `-- Const Int: 0
|-- FuncDecl @Name: next_token -> @RetType: Int, line: 374
|   |-- Params:
|   |       None
|   `-- Body:
|       `-- BlockStmt, line: 374
|           |-- WhileStmt, line: 376
|           |   |-- Cond:
|           |   |   `-- FuncCallExpr is_space
|           |   |       `-- Arg0 = LeftValueExpr last_char
|           |   `-- Body:
|           |       `-- ExprStmt line: 376
|           |           `-- BinaryExpr Assign
|           |               |-- LeftValueExpr last_char
|           |               `-- FuncCallExpr getch
|           |                   `-- No args
|           |-- IfStmt, line: 378
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr last_char
|           |   |       `-- Const Int: 64
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 378
|           |   |       `-- LeftValueExpr TOKEN_EOF
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 380
|           |   |-- Condition:
|           |   |   `-- BinaryExpr And
|           |   |       |-- BinaryExpr Ge
|           |   |       |   |-- LeftValueExpr last_char
|           |   |       |   `-- Const Int: 39
|           |   |       `-- BinaryExpr Le
|           |   |           |-- LeftValueExpr last_char
|           |   |           `-- Const Int: 41
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 380
|           |   |       |-- VarDecl, BaseType: Int, line: 381
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr c
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- LeftValueExpr last_char
|           |   |       |-- ExprStmt line: 382
|           |   |       |   `-- BinaryExpr Assign
|           |   |       |       |-- LeftValueExpr last_char
|           |   |       |       `-- FuncCallExpr getch
|           |   |       |           `-- No args
|           |   |       `-- ReturnStmt, line: 383
|           |   |           `-- BinaryExpr Sub
|           |   |               |-- BinaryExpr Add
|           |   |               |   |-- LeftValueExpr TOKEN_QUOTE
|           |   |               |   `-- LeftValueExpr c
|           |   |               `-- Const Int: 39
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 386
|           |   |-- Condition:
|           |   |   `-- FuncCallExpr is_digit
|           |   |       `-- Arg0 = LeftValueExpr last_char
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 386
|           |   |       |-- VarDecl, BaseType: Int, line: 387
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr num
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- Const Int: 0
|           |   |       |-- WhileStmt, line: 388
|           |   |       |   |-- Cond:
|           |   |       |   |   `-- FuncCallExpr is_digit
|           |   |       |   |       `-- Arg0 = LeftValueExpr last_char
|           |   |       |   `-- Body:
|           |   |       |       `-- BlockStmt, line: 388
|           |   |       |           |-- ExprStmt line: 389
|           |   |       |           |   `-- BinaryExpr Assign
|           |   |       |           |       |-- LeftValueExpr num
|           |   |       |           |       `-- BinaryExpr Sub
|           |   |       |           |           |-- BinaryExpr Add
|           |   |       |           |           |   |-- BinaryExpr Mul
|           |   |       |           |           |   |   |-- LeftValueExpr num
|           |   |       |           |           |   |   `-- Const Int: 10
|           |   |       |           |           |   `-- LeftValueExpr last_char
|           |   |       |           |           `-- Const Int: 48
|           |   |       |           `-- ExprStmt line: 390
|           |   |       |               `-- BinaryExpr Assign
|           |   |       |                   |-- LeftValueExpr last_char
|           |   |       |                   `-- FuncCallExpr getch
|           |   |       |                       `-- No args
|           |   |       |-- ExprStmt line: 392
|           |   |       |   `-- BinaryExpr Assign
|           |   |       |       |-- LeftValueExpr last_token
|           |   |       |       `-- LeftValueExpr num
|           |   |       `-- ReturnStmt, line: 393
|           |   |           `-- LeftValueExpr TOKEN_NUMBER
|           |   `-- Elsebody:
|           |       `-- None
|           |-- VarDecl, BaseType: Int, line: 396
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr sym_ptr
|           |       `-- Init: InitSingle
|           |           `-- LeftValueExpr next_sym
|           |-- WhileStmt, line: 397
|           |   |-- Cond:
|           |   |   `-- Const Int: 1
|           |   `-- Body:
|           |       `-- BlockStmt, line: 397
|           |           |-- IfStmt, line: 398
|           |           |   |-- Condition:
|           |           |   |   `-- BinaryExpr Eq
|           |           |   |       |-- LeftValueExpr last_char
|           |           |   |       `-- UnaryExpr Sub
|           |           |   |           `-- Const Int: 1
|           |           |   |-- Thenbody:
|           |           |   |   `-- BlockStmt, line: 398
|           |           |   |       `-- BreakStmt, line: 398
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           |-- IfStmt, line: 399
|           |           |   |-- Condition:
|           |           |   |   `-- BinaryExpr And
|           |           |   |       |-- BinaryExpr Ge
|           |           |   |       |   |-- LeftValueExpr last_char
|           |           |   |       |   `-- Const Int: 39
|           |           |   |       `-- BinaryExpr Le
|           |           |   |           |-- LeftValueExpr last_char
|           |           |   |           `-- Const Int: 41
|           |           |   |-- Thenbody:
|           |           |   |   `-- BlockStmt, line: 399
|           |           |   |       `-- BreakStmt, line: 399
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           |-- IfStmt, line: 400
|           |           |   |-- Condition:
|           |           |   |   `-- FuncCallExpr is_space
|           |           |   |       `-- Arg0 = LeftValueExpr last_char
|           |           |   |-- Thenbody:
|           |           |   |   `-- BlockStmt, line: 400
|           |           |   |       `-- BreakStmt, line: 400
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           |-- ExprStmt line: 401
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr sym_buf[Dim0]
|           |           |       |   `-- Dim0 = LeftValueExpr next_sym
|           |           |       `-- LeftValueExpr last_char
|           |           |-- ExprStmt line: 402
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr next_sym
|           |           |       `-- BinaryExpr Add
|           |           |           |-- LeftValueExpr next_sym
|           |           |           `-- Const Int: 1
|           |           `-- ExprStmt line: 403
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr last_char
|           |                   `-- FuncCallExpr getch
|           |                       `-- No args
|           |-- ExprStmt line: 405
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr sym_buf[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr next_sym
|           |       `-- Const Int: 0
|           |-- ExprStmt line: 406
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr next_sym
|           |       `-- BinaryExpr Add
|           |           |-- LeftValueExpr next_sym
|           |           `-- Const Int: 1
|           |-- IfStmt, line: 407
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Ge
|           |   |       |-- LeftValueExpr next_sym
|           |   |       `-- LeftValueExpr MAX_SYM_BUF_LEN
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 407
|           |   |       `-- FuncCallExpr panic
|           |   |           `-- Arg0 = LeftValueExpr ERR_BUFFER_OVERFLOW
|           |   `-- Elsebody:
|           |       `-- None
|           |-- ExprStmt line: 408
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr last_token
|           |       `-- FuncCallExpr is_predef_sym
|           |           `-- Arg0 = LeftValueExpr sym_ptr
|           `-- ReturnStmt, line: 409
|               `-- LeftValueExpr TOKEN_SYMBOL
|-- VarDecl, BaseType: Int, line: 417
|   `-- DefNode
|       `-- Var: LeftValueExpr last_token_type
|       `-- Init: InitSingle
|           `-- LeftValueExpr TOKEN_EOF
|-- FuncDecl @Name: parse -> @RetType: Int, line: 422
|   |-- Params:
|   |       None
|   `-- Body:
|       `-- BlockStmt, line: 422
|           |-- IfStmt, line: 423
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr last_token_type
|           |   |       `-- LeftValueExpr TOKEN_EOF
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 423
|           |   |       `-- Const Int: 0
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 424
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr last_token_type
|           |   |       `-- LeftValueExpr TOKEN_SYMBOL
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 424
|           |   |       |-- VarDecl, BaseType: Int, line: 425
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr data_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- FuncCallExpr make_symbol
|           |   |       |               `-- Arg0 = LeftValueExpr last_token
|           |   |       |-- ExprStmt line: 426
|           |   |       |   `-- BinaryExpr Assign
|           |   |       |       |-- LeftValueExpr last_token_type
|           |   |       |       `-- FuncCallExpr next_token
|           |   |       |           `-- No args
|           |   |       `-- ReturnStmt, line: 427
|           |   |           `-- LeftValueExpr data_ptr
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 429
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr last_token_type
|           |   |       `-- LeftValueExpr TOKEN_NUMBER
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 429
|           |   |       |-- VarDecl, BaseType: Int, line: 430
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr data_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- FuncCallExpr make_number
|           |   |       |               `-- Arg0 = LeftValueExpr last_token
|           |   |       |-- ExprStmt line: 431
|           |   |       |   `-- BinaryExpr Assign
|           |   |       |       |-- LeftValueExpr last_token_type
|           |   |       |       `-- FuncCallExpr next_token
|           |   |       |           `-- No args
|           |   |       `-- ReturnStmt, line: 432
|           |   |           `-- LeftValueExpr data_ptr
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 434
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr last_token_type
|           |   |       `-- LeftValueExpr TOKEN_QUOTE
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 434
|           |   |       |-- ExprStmt line: 435
|           |   |       |   `-- BinaryExpr Assign
|           |   |       |       |-- LeftValueExpr last_token_type
|           |   |       |       `-- FuncCallExpr next_token
|           |   |       |           `-- No args
|           |   |       |-- VarDecl, BaseType: Int, line: 436
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr elem_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- FuncCallExpr parse
|           |   |       |               `-- No args
|           |   |       |-- VarDecl, BaseType: Int, line: 437
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr quote_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- FuncCallExpr make_symbol
|           |   |       |               `-- Arg0 = LeftValueExpr SYM_QUOTE
|           |   |       |-- ExprStmt line: 438
|           |   |       |   `-- BinaryExpr Assign
|           |   |       |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |       |   |-- Dim0 = LeftValueExpr quote_ptr
|           |   |       |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |       `-- LeftValueExpr elem_ptr
|           |   |       |-- VarDecl, BaseType: Int, line: 439
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr list_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- FuncCallExpr make_list
|           |   |       |               `-- Arg0 = LeftValueExpr quote_ptr
|           |   |       `-- ReturnStmt, line: 440
|           |   |           `-- LeftValueExpr list_ptr
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 442
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr last_token_type
|           |   |       `-- LeftValueExpr TOKEN_LPAREN
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 442
|           |   |       |-- ExprStmt line: 443
|           |   |       |   `-- BinaryExpr Assign
|           |   |       |       |-- LeftValueExpr last_token_type
|           |   |       |       `-- FuncCallExpr next_token
|           |   |       |           `-- No args
|           |   |       |-- VarDecl, BaseType: Int, line: 444
|           |   |       |   |-- DefNode
|           |   |       |   |   `-- Var: LeftValueExpr list_ptr
|           |   |       |   |   `-- Init: InitSingle
|           |   |       |   |       `-- FuncCallExpr make_list
|           |   |       |   |           `-- Arg0 = Const Int: 0
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr cur_elem
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- Const Int: 0
|           |   |       |-- WhileStmt, line: 445
|           |   |       |   |-- Cond:
|           |   |       |   |   `-- BinaryExpr Neq
|           |   |       |   |       |-- LeftValueExpr last_token_type
|           |   |       |   |       `-- LeftValueExpr TOKEN_RPAREN
|           |   |       |   `-- Body:
|           |   |       |       `-- BlockStmt, line: 445
|           |   |       |           |-- VarDecl, BaseType: Int, line: 446
|           |   |       |           |   `-- DefNode
|           |   |       |           |       `-- Var: LeftValueExpr elem_ptr
|           |   |       |           |       `-- Init: InitSingle
|           |   |       |           |           `-- FuncCallExpr parse
|           |   |       |           |               `-- No args
|           |   |       |           |-- IfStmt, line: 447
|           |   |       |           |   |-- Condition:
|           |   |       |           |   |   `-- LeftValueExpr cur_elem
|           |   |       |           |   |-- Thenbody:
|           |   |       |           |   |   `-- BlockStmt, line: 447
|           |   |       |           |   |       `-- ExprStmt line: 448
|           |   |       |           |   |           `-- BinaryExpr Assign
|           |   |       |           |   |               |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |           |   |               |   |-- Dim0 = LeftValueExpr cur_elem
|           |   |       |           |   |               |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |           |   |               `-- LeftValueExpr elem_ptr
|           |   |       |           |   `-- Elsebody:
|           |   |       |           |       `-- BlockStmt, line: 449
|           |   |       |           |           `-- ExprStmt line: 450
|           |   |       |           |               `-- BinaryExpr Assign
|           |   |       |           |                   |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |           |                   |   |-- Dim0 = LeftValueExpr list_ptr
|           |   |       |           |                   |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |           |                   `-- LeftValueExpr elem_ptr
|           |   |       |           `-- ExprStmt line: 452
|           |   |       |               `-- BinaryExpr Assign
|           |   |       |                   |-- LeftValueExpr cur_elem
|           |   |       |                   `-- LeftValueExpr elem_ptr
|           |   |       |-- ExprStmt line: 454
|           |   |       |   `-- BinaryExpr Assign
|           |   |       |       |-- LeftValueExpr last_token_type
|           |   |       |       `-- FuncCallExpr next_token
|           |   |       |           `-- No args
|           |   |       `-- ReturnStmt, line: 455
|           |   |           `-- LeftValueExpr list_ptr
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 457
|               `-- FuncCallExpr panic
|                   `-- Arg0 = LeftValueExpr ERR_PARSE_ERROR
|-- FuncDecl @Name: make_bool -> @RetType: Int, line: 465
|   |-- Params:
|   |   `-- Int value
|   `-- Body:
|       `-- BlockStmt, line: 465
|           |-- VarDecl, BaseType: Int, line: 466
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr data_ptr
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr alloc_data
|           |               `-- No args
|           |-- ExprStmt line: 467
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr data[Dim0][Dim1]
|           |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |       `-- LeftValueExpr DATA_TYPE_SYMBOL
|           |-- IfStmt, line: 468
|           |   |-- Condition:
|           |   |   `-- LeftValueExpr value
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 468
|           |   |       `-- ExprStmt line: 469
|           |   |           `-- BinaryExpr Assign
|           |   |               |-- LeftValueExpr data[Dim0][Dim1]
|           |   |               |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |               |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |               `-- LeftValueExpr SYM_T
|           |   `-- Elsebody:
|           |       `-- BlockStmt, line: 470
|           |           `-- ExprStmt line: 471
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr data[Dim0][Dim1]
|           |                   |   |-- Dim0 = LeftValueExpr data_ptr
|           |                   |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |                   `-- LeftValueExpr SYM_F
|           `-- ReturnStmt, line: 473
|               `-- LeftValueExpr data_ptr
|-- FuncDecl @Name: is_true -> @RetType: Int, line: 477
|   |-- Params:
|   |   `-- Int bool_ptr
|   `-- Body:
|       `-- BlockStmt, line: 477
|           |-- IfStmt, line: 478
|           |   |-- Condition:
|           |   |   `-- UnaryExpr Not
|           |   |       `-- LeftValueExpr bool_ptr
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 478
|           |   |       `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 479
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Neq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr bool_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_SYMBOL
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 479
|           |   |       `-- FuncCallExpr panic
|           |   |           `-- Arg0 = LeftValueExpr ERR_TYPE_MISMATCH
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 480
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr bool_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       `-- LeftValueExpr SYM_T
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 480
|           |   |       `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 481
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr bool_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       `-- LeftValueExpr SYM_F
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 481
|           |   |       `-- Const Int: 0
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 482
|               `-- FuncCallExpr panic
|                   `-- Arg0 = LeftValueExpr ERR_TYPE_MISMATCH
|-- FuncDecl @Name: is_equal -> @RetType: Int, line: 486
|   |-- Params:
|   |   |-- Int val1
|   |   `-- Int val2
|   `-- Body:
|       `-- BlockStmt, line: 486
|           |-- IfStmt, line: 487
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr val1
|           |   |       `-- LeftValueExpr val2
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 487
|           |   |       `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 488
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Or
|           |   |       |-- UnaryExpr Not
|           |   |       |   `-- LeftValueExpr val1
|           |   |       `-- UnaryExpr Not
|           |   |           `-- LeftValueExpr val2
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 488
|           |   |       `-- Const Int: 0
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 489
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Neq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr val1
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |           |-- Dim0 = LeftValueExpr val2
|           |   |           `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 489
|           |   |       `-- Const Int: 0
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 490
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr val1
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_SYMBOL
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 490
|           |   |       `-- ReturnStmt, line: 491
|           |   |           `-- FuncCallExpr is_eq_sym
|           |   |               |-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|           |   |               |   Arg0 = |-- Dim0 = LeftValueExpr val1
|           |   |               |   Arg0 = `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |               `-- Arg1 = LeftValueExpr data[Dim0][Dim1]
|           |   |                   |-- Dim0 = LeftValueExpr val2
|           |   |                   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 493
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr val1
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_NUMBER
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 493
|           |   |       `-- ReturnStmt, line: 494
|           |   |           `-- FuncCallExpr eq
|           |   |               |-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|           |   |               |   Arg0 = |-- Dim0 = LeftValueExpr val1
|           |   |               |   Arg0 = `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |               `-- Arg1 = LeftValueExpr data[Dim0][Dim1]
|           |   |                   |-- Dim0 = LeftValueExpr val2
|           |   |                   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 496
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr val1
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_LIST
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 496
|           |   |       |-- VarDecl, BaseType: Int, line: 497
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr list1
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |               |-- Dim0 = LeftValueExpr val1
|           |   |       |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |-- VarDecl, BaseType: Int, line: 498
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr list2
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |               |-- Dim0 = LeftValueExpr val2
|           |   |       |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |-- WhileStmt, line: 499
|           |   |       |   |-- Cond:
|           |   |       |   |   `-- BinaryExpr And
|           |   |       |   |       |-- LeftValueExpr list1
|           |   |       |   |       `-- LeftValueExpr list2
|           |   |       |   `-- Body:
|           |   |       |       `-- BlockStmt, line: 499
|           |   |       |           |-- IfStmt, line: 500
|           |   |       |           |   |-- Condition:
|           |   |       |           |   |   `-- UnaryExpr Not
|           |   |       |           |   |       `-- FuncCallExpr is_equal
|           |   |       |           |   |           |-- Arg0 = LeftValueExpr list1
|           |   |       |           |   |           `-- Arg1 = LeftValueExpr list2
|           |   |       |           |   |-- Thenbody:
|           |   |       |           |   |   `-- ReturnStmt, line: 500
|           |   |       |           |   |       `-- Const Int: 0
|           |   |       |           |   `-- Elsebody:
|           |   |       |           |       `-- None
|           |   |       |           |-- ExprStmt line: 501
|           |   |       |           |   `-- BinaryExpr Assign
|           |   |       |           |       |-- LeftValueExpr list1
|           |   |       |           |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |           |           |-- Dim0 = LeftValueExpr list1
|           |   |       |           |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |           `-- ExprStmt line: 502
|           |   |       |               `-- BinaryExpr Assign
|           |   |       |                   |-- LeftValueExpr list2
|           |   |       |                   `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |                       |-- Dim0 = LeftValueExpr list2
|           |   |       |                       `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |-- IfStmt, line: 504
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |-- LeftValueExpr list1
|           |   |       |   |       `-- LeftValueExpr list2
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- ReturnStmt, line: 504
|           |   |       |   |       `-- Const Int: 0
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       `-- ReturnStmt, line: 505
|           |   |           `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 507
|               `-- FuncCallExpr panic
|                   `-- Arg0 = LeftValueExpr ERR_TYPE_MISMATCH
|-- FuncDecl @Name: unwrap_list -> @RetType: Int, line: 512
|   |-- Params:
|   |   `-- Int list_ptr
|   `-- Body:
|       `-- BlockStmt, line: 512
|           |-- IfStmt, line: 513
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Neq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr list_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_LIST
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 513
|           |   |       `-- FuncCallExpr panic
|           |   |           `-- Arg0 = LeftValueExpr ERR_TYPE_MISMATCH
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 514
|               `-- LeftValueExpr data[Dim0][Dim1]
|                   |-- Dim0 = LeftValueExpr list_ptr
|                   `-- Dim1 = LeftValueExpr DATA_VALUE
|-- FuncDecl @Name: unwrap_symbol -> @RetType: Int, line: 519
|   |-- Params:
|   |   `-- Int sym_ptr
|   `-- Body:
|       `-- BlockStmt, line: 519
|           |-- IfStmt, line: 520
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Neq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr sym_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_SYMBOL
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 520
|           |   |       `-- FuncCallExpr panic
|           |   |           `-- Arg0 = LeftValueExpr ERR_TYPE_MISMATCH
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 521
|               `-- LeftValueExpr data[Dim0][Dim1]
|                   |-- Dim0 = LeftValueExpr sym_ptr
|                   `-- Dim1 = LeftValueExpr DATA_VALUE
|-- FuncDecl @Name: unwrap_number -> @RetType: Int, line: 526
|   |-- Params:
|   |   `-- Int num_ptr
|   `-- Body:
|       `-- BlockStmt, line: 526
|           |-- IfStmt, line: 527
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Neq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr num_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_NUMBER
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 527
|           |   |       `-- FuncCallExpr panic
|           |   |           `-- Arg0 = LeftValueExpr ERR_TYPE_MISMATCH
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 528
|               `-- LeftValueExpr data[Dim0][Dim1]
|                   |-- Dim0 = LeftValueExpr num_ptr
|                   `-- Dim1 = LeftValueExpr DATA_VALUE
|-- FuncDecl @Name: eval -> @RetType: Int, line: 534
|   |-- Params:
|   |   |-- Int data_ptr
|   |   `-- Int env_ptr
|   `-- Body:
|       `-- BlockStmt, line: 534
|           |-- IfStmt, line: 536
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_SYMBOL
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 536
|           |   |       |-- VarDecl, BaseType: Int, line: 537
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr val_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- FuncCallExpr env_find
|           |   |       |               |-- Arg0 = LeftValueExpr env_ptr
|           |   |       |               `-- Arg1 = LeftValueExpr data[Dim0][Dim1]
|           |   |       |                   |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |                   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |-- IfStmt, line: 538
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- UnaryExpr Not
|           |   |       |   |       `-- LeftValueExpr val_ptr
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- ExprStmt line: 538
|           |   |       |   |       `-- FuncCallExpr panic
|           |   |       |   |           `-- Arg0 = LeftValueExpr ERR_SYMBOL_NOT_FOUND
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       `-- ReturnStmt, line: 539
|           |   |           `-- FuncCallExpr copy_ptr
|           |   |               `-- Arg0 = LeftValueExpr val_ptr
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 542
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_NUMBER
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 542
|           |   |       `-- FuncCallExpr copy_ptr
|           |   |           `-- Arg0 = LeftValueExpr data_ptr
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 544
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_LIST
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 544
|           |   |       |-- VarDecl, BaseType: Int, line: 546
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr head_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |               |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |-- IfStmt, line: 547
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- UnaryExpr Not
|           |   |       |   |       `-- LeftValueExpr head_ptr
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- ExprStmt line: 547
|           |   |       |   |       `-- FuncCallExpr panic
|           |   |       |   |           `-- Arg0 = LeftValueExpr ERR_INVALID_LIST
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- VarDecl, BaseType: Int, line: 548
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr arg_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |               |-- Dim0 = LeftValueExpr head_ptr
|           |   |       |               `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |-- IfStmt, line: 550
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |-- BinaryExpr Neq
|           |   |       |   |       |   |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |   |-- Dim0 = LeftValueExpr head_ptr
|           |   |       |   |       |   |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       |   |       |   `-- LeftValueExpr DATA_TYPE_SYMBOL
|           |   |       |   |       `-- FuncCallExpr env_find
|           |   |       |   |           |-- Arg0 = LeftValueExpr env_ptr
|           |   |       |   |           `-- Arg1 = LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |               |-- Dim0 = LeftValueExpr head_ptr
|           |   |       |   |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 551
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 553
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr func_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr head_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |-- IfStmt, line: 554
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- UnaryExpr Not
|           |   |       |   |       |   |       |   `-- LeftValueExpr func_ptr
|           |   |       |   |       |   |       `-- BinaryExpr Neq
|           |   |       |   |       |   |           |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |           |   |-- Dim0 = LeftValueExpr func_ptr
|           |   |       |   |       |   |           |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       |   |       |   |           `-- LeftValueExpr DATA_TYPE_FUNC
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- BlockStmt, line: 554
|           |   |       |   |       |   |       `-- ExprStmt line: 555
|           |   |       |   |       |   |           `-- FuncCallExpr panic
|           |   |       |   |       |   |               `-- Arg0 = LeftValueExpr ERR_INVALID_FUNC
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 558
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr param_list_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |               |-- Dim0 = LeftValueExpr func_ptr
|           |   |       |   |       |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 559
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr body_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |               |-- Dim0 = LeftValueExpr param_list_ptr
|           |   |       |   |       |               `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 560
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr outer_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |               |-- Dim0 = LeftValueExpr body_ptr
|           |   |       |   |       |               `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 562
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr func_env_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr make_env
|           |   |       |   |       |               `-- Arg0 = FuncCallExpr copy_ptr
|           |   |       |   |       |                   `-- Arg0 = LeftValueExpr outer_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 564
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr cur_param_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |               |-- Dim0 = LeftValueExpr param_list_ptr
|           |   |       |   |       |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 565
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr cur_arg_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- LeftValueExpr arg_ptr
|           |   |       |   |       |-- WhileStmt, line: 566
|           |   |       |   |       |   |-- Cond:
|           |   |       |   |       |   |   `-- BinaryExpr And
|           |   |       |   |       |   |       |-- LeftValueExpr cur_param_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr cur_arg_ptr
|           |   |       |   |       |   `-- Body:
|           |   |       |   |       |       `-- BlockStmt, line: 566
|           |   |       |   |       |           |-- VarDecl, BaseType: Int, line: 567
|           |   |       |   |       |           |   `-- DefNode
|           |   |       |   |       |           |       `-- Var: LeftValueExpr param_sym_ptr
|           |   |       |   |       |           |       `-- Init: InitSingle
|           |   |       |   |       |           |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |           |               |-- Dim0 = LeftValueExpr cur_param_ptr
|           |   |       |   |       |           |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |   |       |           |-- VarDecl, BaseType: Int, line: 568
|           |   |       |   |       |           |   `-- DefNode
|           |   |       |   |       |           |       `-- Var: LeftValueExpr arg_ptr
|           |   |       |   |       |           |       `-- Init: InitSingle
|           |   |       |   |       |           |           `-- FuncCallExpr eval
|           |   |       |   |       |           |               |-- Arg0 = LeftValueExpr cur_arg_ptr
|           |   |       |   |       |           |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |           |-- ExprStmt line: 569
|           |   |       |   |       |           |   `-- FuncCallExpr env_add
|           |   |       |   |       |           |       |-- Arg0 = LeftValueExpr func_env_ptr
|           |   |       |   |       |           |       |-- Arg1 = LeftValueExpr param_sym_ptr
|           |   |       |   |       |           |       `-- Arg2 = LeftValueExpr arg_ptr
|           |   |       |   |       |           |-- ExprStmt line: 570
|           |   |       |   |       |           |   `-- BinaryExpr Assign
|           |   |       |   |       |           |       |-- LeftValueExpr cur_param_ptr
|           |   |       |   |       |           |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |           |           |-- Dim0 = LeftValueExpr cur_param_ptr
|           |   |       |   |       |           |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |           `-- ExprStmt line: 571
|           |   |       |   |       |               `-- BinaryExpr Assign
|           |   |       |   |       |                   |-- LeftValueExpr cur_arg_ptr
|           |   |       |   |       |                   `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |                       |-- Dim0 = LeftValueExpr cur_arg_ptr
|           |   |       |   |       |                       `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |-- IfStmt, line: 573
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- LeftValueExpr cur_param_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr cur_arg_ptr
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- ExprStmt line: 573
|           |   |       |   |       |   |       `-- FuncCallExpr panic
|           |   |       |   |       |   |           `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 575
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr result_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr body_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr func_env_ptr
|           |   |       |   |       |-- ExprStmt line: 577
|           |   |       |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |       `-- Arg0 = LeftValueExpr func_env_ptr
|           |   |       |   |       |-- ExprStmt line: 578
|           |   |       |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |       `-- Arg0 = LeftValueExpr func_ptr
|           |   |       |   |       `-- ReturnStmt, line: 579
|           |   |       |   |           `-- LeftValueExpr result_ptr
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- VarDecl, BaseType: Int, line: 582
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr sym_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |               |-- Dim0 = LeftValueExpr head_ptr
|           |   |       |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |-- IfStmt, line: 584
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_QUOTE
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 584
|           |   |       |   |       |-- IfStmt, line: 585
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- UnaryExpr Not
|           |   |       |   |       |   |       |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |           |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |   |       |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- ExprStmt line: 585
|           |   |       |   |       |   |       `-- FuncCallExpr panic
|           |   |       |   |       |   |           `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       `-- ReturnStmt, line: 586
|           |   |       |   |           `-- FuncCallExpr copy_ptr
|           |   |       |   |               `-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- IfStmt, line: 589
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_ATOM
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 589
|           |   |       |   |       |-- IfStmt, line: 590
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- UnaryExpr Not
|           |   |       |   |       |   |       |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |           |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |   |       |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- ExprStmt line: 590
|           |   |       |   |       |   |       `-- FuncCallExpr panic
|           |   |       |   |       |   |           `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 591
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr value_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 592
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr result_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr make_bool
|           |   |       |   |       |               `-- Arg0 = FuncCallExpr ne
|           |   |       |   |       |                   |-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |                   |   Arg0 = |-- Dim0 = LeftValueExpr value_ptr
|           |   |       |   |       |                   |   Arg0 = `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       |   |       |                   `-- Arg1 = LeftValueExpr DATA_TYPE_LIST
|           |   |       |   |       |-- ExprStmt line: 593
|           |   |       |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |       `-- Arg0 = LeftValueExpr value_ptr
|           |   |       |   |       `-- ReturnStmt, line: 594
|           |   |       |   |           `-- LeftValueExpr result_ptr
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- IfStmt, line: 597
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_NUMBER
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 597
|           |   |       |   |       |-- IfStmt, line: 598
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- UnaryExpr Not
|           |   |       |   |       |   |       |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |           |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |   |       |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- ExprStmt line: 598
|           |   |       |   |       |   |       `-- FuncCallExpr panic
|           |   |       |   |       |   |           `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 599
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr value_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 600
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr result_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr make_bool
|           |   |       |   |       |               `-- Arg0 = FuncCallExpr eq
|           |   |       |   |       |                   |-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |                   |   Arg0 = |-- Dim0 = LeftValueExpr value_ptr
|           |   |       |   |       |                   |   Arg0 = `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       |   |       |                   `-- Arg1 = LeftValueExpr DATA_TYPE_NUMBER
|           |   |       |   |       |-- ExprStmt line: 602
|           |   |       |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |       `-- Arg0 = LeftValueExpr value_ptr
|           |   |       |   |       `-- ReturnStmt, line: 603
|           |   |       |   |           `-- LeftValueExpr result_ptr
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- IfStmt, line: 606
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_EQ
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 606
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 607
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr arg2_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |               |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |-- IfStmt, line: 608
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- BinaryExpr Or
|           |   |       |   |       |   |       |   |-- UnaryExpr Not
|           |   |       |   |       |   |       |   |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   |       |   `-- UnaryExpr Not
|           |   |       |   |       |   |       |       `-- LeftValueExpr arg2_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |           |-- Dim0 = LeftValueExpr arg2_ptr
|           |   |       |   |       |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- BlockStmt, line: 608
|           |   |       |   |       |   |       `-- ExprStmt line: 609
|           |   |       |   |       |   |           `-- FuncCallExpr panic
|           |   |       |   |       |   |               `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 611
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr value1_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 612
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr value2_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr arg2_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 613
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr result_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr make_bool
|           |   |       |   |       |               `-- Arg0 = FuncCallExpr is_equal
|           |   |       |   |       |                   |-- Arg0 = LeftValueExpr value1_ptr
|           |   |       |   |       |                   `-- Arg1 = LeftValueExpr value2_ptr
|           |   |       |   |       |-- ExprStmt line: 614
|           |   |       |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |       `-- Arg0 = LeftValueExpr value1_ptr
|           |   |       |   |       |-- ExprStmt line: 615
|           |   |       |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |       `-- Arg0 = LeftValueExpr value2_ptr
|           |   |       |   |       `-- ReturnStmt, line: 616
|           |   |       |   |           `-- LeftValueExpr result_ptr
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- IfStmt, line: 619
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_CAR
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 619
|           |   |       |   |       |-- IfStmt, line: 620
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- UnaryExpr Not
|           |   |       |   |       |   |       |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |           |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |   |       |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- ExprStmt line: 620
|           |   |       |   |       |   |       `-- FuncCallExpr panic
|           |   |       |   |       |   |           `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 621
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr value_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 622
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr result_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr copy_ptr
|           |   |       |   |       |               `-- Arg0 = FuncCallExpr unwrap_list
|           |   |       |   |       |                   `-- Arg0 = LeftValueExpr value_ptr
|           |   |       |   |       |-- IfStmt, line: 623
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- UnaryExpr Not
|           |   |       |   |       |   |       `-- LeftValueExpr result_ptr
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- ExprStmt line: 623
|           |   |       |   |       |   |       `-- FuncCallExpr panic
|           |   |       |   |       |   |           `-- Arg0 = LeftValueExpr ERR_INVALID_LIST
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- ExprStmt line: 624
|           |   |       |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |       `-- Arg0 = LeftValueExpr value_ptr
|           |   |       |   |       `-- ReturnStmt, line: 625
|           |   |       |   |           `-- LeftValueExpr result_ptr
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- IfStmt, line: 628
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_CDR
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 628
|           |   |       |   |       |-- IfStmt, line: 629
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- UnaryExpr Not
|           |   |       |   |       |   |       |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |           |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |   |       |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- ExprStmt line: 629
|           |   |       |   |       |   |       `-- FuncCallExpr panic
|           |   |       |   |       |   |           `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 630
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr value_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 631
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr head_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr unwrap_list
|           |   |       |   |       |               `-- Arg0 = LeftValueExpr value_ptr
|           |   |       |   |       |-- IfStmt, line: 632
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- UnaryExpr Not
|           |   |       |   |       |   |       `-- LeftValueExpr head_ptr
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- ExprStmt line: 632
|           |   |       |   |       |   |       `-- FuncCallExpr panic
|           |   |       |   |       |   |           `-- Arg0 = LeftValueExpr ERR_INVALID_LIST
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 633
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr result_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr make_list
|           |   |       |   |       |               `-- Arg0 = FuncCallExpr copy_ptr
|           |   |       |   |       |                   `-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |                       |-- Dim0 = LeftValueExpr head_ptr
|           |   |       |   |       |                       `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |-- ExprStmt line: 634
|           |   |       |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |       `-- Arg0 = LeftValueExpr value_ptr
|           |   |       |   |       `-- ReturnStmt, line: 635
|           |   |       |   |           `-- LeftValueExpr result_ptr
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- IfStmt, line: 638
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_CONS
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 638
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 639
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr arg2_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |               |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |-- IfStmt, line: 640
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- BinaryExpr Or
|           |   |       |   |       |   |       |   |-- UnaryExpr Not
|           |   |       |   |       |   |       |   |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   |       |   `-- UnaryExpr Not
|           |   |       |   |       |   |       |       `-- LeftValueExpr arg2_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |           |-- Dim0 = LeftValueExpr arg2_ptr
|           |   |       |   |       |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- BlockStmt, line: 640
|           |   |       |   |       |   |       `-- ExprStmt line: 641
|           |   |       |   |       |   |           `-- FuncCallExpr panic
|           |   |       |   |       |   |               `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 643
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr value1_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 644
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr value2_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr arg2_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 645
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr head_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr copy_data
|           |   |       |   |       |               `-- Arg0 = LeftValueExpr value1_ptr
|           |   |       |   |       |-- ExprStmt line: 646
|           |   |       |   |       |   `-- BinaryExpr Assign
|           |   |       |   |       |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |       |   |-- Dim0 = LeftValueExpr head_ptr
|           |   |       |   |       |       |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |       `-- FuncCallExpr copy_ptr
|           |   |       |   |       |           `-- Arg0 = FuncCallExpr unwrap_list
|           |   |       |   |       |               `-- Arg0 = LeftValueExpr value2_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 647
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr result_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr make_list
|           |   |       |   |       |               `-- Arg0 = LeftValueExpr head_ptr
|           |   |       |   |       |-- ExprStmt line: 648
|           |   |       |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |       `-- Arg0 = LeftValueExpr value1_ptr
|           |   |       |   |       |-- ExprStmt line: 649
|           |   |       |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |       `-- Arg0 = LeftValueExpr value2_ptr
|           |   |       |   |       `-- ReturnStmt, line: 650
|           |   |       |   |           `-- LeftValueExpr result_ptr
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- IfStmt, line: 653
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_COND
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 653
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 654
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr cur_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- LeftValueExpr arg_ptr
|           |   |       |   |       |-- WhileStmt, line: 655
|           |   |       |   |       |   |-- Cond:
|           |   |       |   |       |   |   `-- LeftValueExpr cur_ptr
|           |   |       |   |       |   `-- Body:
|           |   |       |   |       |       `-- BlockStmt, line: 655
|           |   |       |   |       |           |-- VarDecl, BaseType: Int, line: 656
|           |   |       |   |       |           |   `-- DefNode
|           |   |       |   |       |           |       `-- Var: LeftValueExpr test_ptr
|           |   |       |   |       |           |       `-- Init: InitSingle
|           |   |       |   |       |           |           `-- FuncCallExpr unwrap_list
|           |   |       |   |       |           |               `-- Arg0 = LeftValueExpr cur_ptr
|           |   |       |   |       |           |-- VarDecl, BaseType: Int, line: 657
|           |   |       |   |       |           |   `-- DefNode
|           |   |       |   |       |           |       `-- Var: LeftValueExpr result_ptr
|           |   |       |   |       |           |       `-- Init: InitSingle
|           |   |       |   |       |           |           `-- FuncCallExpr eval
|           |   |       |   |       |           |               |-- Arg0 = LeftValueExpr test_ptr
|           |   |       |   |       |           |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |           |-- IfStmt, line: 658
|           |   |       |   |       |           |   |-- Condition:
|           |   |       |   |       |           |   |   `-- FuncCallExpr is_true
|           |   |       |   |       |           |   |       `-- Arg0 = LeftValueExpr result_ptr
|           |   |       |   |       |           |   |-- Thenbody:
|           |   |       |   |       |           |   |   `-- BlockStmt, line: 658
|           |   |       |   |       |           |   |       |-- VarDecl, BaseType: Int, line: 659
|           |   |       |   |       |           |   |       |   `-- DefNode
|           |   |       |   |       |           |   |       |       `-- Var: LeftValueExpr body_ptr
|           |   |       |   |       |           |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |           |   |       |               |-- Dim0 = LeftValueExpr test_ptr
|           |   |       |   |       |           |   |       |               `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |           |   |       |-- VarDecl, BaseType: Int, line: 660
|           |   |       |   |       |           |   |       |   `-- DefNode
|           |   |       |   |       |           |   |       |       `-- Var: LeftValueExpr body_result_ptr
|           |   |       |   |       |           |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |           |   |       |               |-- Arg0 = LeftValueExpr body_ptr
|           |   |       |   |       |           |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |           |   |       |-- ExprStmt line: 661
|           |   |       |   |       |           |   |       |   `-- FuncCallExpr free_data
|           |   |       |   |       |           |   |       |       `-- Arg0 = LeftValueExpr result_ptr
|           |   |       |   |       |           |   |       `-- ReturnStmt, line: 662
|           |   |       |   |       |           |   |           `-- LeftValueExpr body_result_ptr
|           |   |       |   |       |           |   `-- Elsebody:
|           |   |       |   |       |           |       `-- None
|           |   |       |   |       |           |-- ExprStmt line: 664
|           |   |       |   |       |           |   `-- FuncCallExpr free_data
|           |   |       |   |       |           |       `-- Arg0 = LeftValueExpr result_ptr
|           |   |       |   |       |           `-- ExprStmt line: 665
|           |   |       |   |       |               `-- BinaryExpr Assign
|           |   |       |   |       |                   |-- LeftValueExpr cur_ptr
|           |   |       |   |       |                   `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |                       |-- Dim0 = LeftValueExpr cur_ptr
|           |   |       |   |       |                       `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       `-- ReturnStmt, line: 667
|           |   |       |   |           `-- Const Int: 0
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- IfStmt, line: 670
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_LAMBDA
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 670
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 671
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr arg2_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |               |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |-- IfStmt, line: 672
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- BinaryExpr Or
|           |   |       |   |       |   |       |   |-- UnaryExpr Not
|           |   |       |   |       |   |       |   |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   |       |   `-- UnaryExpr Not
|           |   |       |   |       |   |       |       `-- LeftValueExpr arg2_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |           |-- Dim0 = LeftValueExpr arg2_ptr
|           |   |       |   |       |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- BlockStmt, line: 672
|           |   |       |   |       |   |       `-- ExprStmt line: 673
|           |   |       |   |       |   |           `-- FuncCallExpr panic
|           |   |       |   |       |   |               `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 675
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr result_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr make_func
|           |   |       |   |       |               |-- Arg0 = FuncCallExpr copy_data
|           |   |       |   |       |               |   Arg0 = `-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               |-- Arg1 = FuncCallExpr copy_data
|           |   |       |   |       |               |   Arg1 = `-- Arg0 = LeftValueExpr arg2_ptr
|           |   |       |   |       |               `-- Arg2 = FuncCallExpr copy_ptr
|           |   |       |   |       |                   `-- Arg0 = LeftValueExpr env_ptr
|           |   |       |   |       `-- ReturnStmt, line: 677
|           |   |       |   |           `-- LeftValueExpr result_ptr
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- IfStmt, line: 680
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_DEFINE
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 680
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 681
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr arg2_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |               |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |   |       |               `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |-- IfStmt, line: 682
|           |   |       |   |       |   |-- Condition:
|           |   |       |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |   |       |-- BinaryExpr Or
|           |   |       |   |       |   |       |   |-- UnaryExpr Not
|           |   |       |   |       |   |       |   |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   |       |   `-- UnaryExpr Not
|           |   |       |   |       |   |       |       `-- LeftValueExpr arg2_ptr
|           |   |       |   |       |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |   |           |-- Dim0 = LeftValueExpr arg2_ptr
|           |   |       |   |       |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |   |-- Thenbody:
|           |   |       |   |       |   |   `-- BlockStmt, line: 682
|           |   |       |   |       |   |       `-- ExprStmt line: 683
|           |   |       |   |       |   |           `-- FuncCallExpr panic
|           |   |       |   |       |   |               `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   |       |   `-- Elsebody:
|           |   |       |   |       |       `-- None
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 685
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr sym_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr unwrap_symbol
|           |   |       |   |       |               `-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 686
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr value_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- FuncCallExpr eval
|           |   |       |   |       |               |-- Arg0 = LeftValueExpr arg2_ptr
|           |   |       |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |-- ExprStmt line: 687
|           |   |       |   |       |   `-- FuncCallExpr env_set
|           |   |       |   |       |       |-- Arg0 = LeftValueExpr env_ptr
|           |   |       |   |       |       |-- Arg1 = LeftValueExpr sym_ptr
|           |   |       |   |       |       `-- Arg2 = LeftValueExpr value_ptr
|           |   |       |   |       `-- ReturnStmt, line: 688
|           |   |       |   |           `-- Const Int: 0
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- IfStmt, line: 691
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_LIST
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 691
|           |   |       |   |       |-- VarDecl, BaseType: Int, line: 692
|           |   |       |   |       |   |-- DefNode
|           |   |       |   |       |   |   `-- Var: LeftValueExpr result_ptr
|           |   |       |   |       |   |   `-- Init: InitSingle
|           |   |       |   |       |   |       `-- FuncCallExpr make_list
|           |   |       |   |       |   |           `-- Arg0 = Const Int: 0
|           |   |       |   |       |   `-- DefNode
|           |   |       |   |       |       `-- Var: LeftValueExpr cur_ptr
|           |   |       |   |       |       `-- Init: InitSingle
|           |   |       |   |       |           `-- Const Int: 0
|           |   |       |   |       |-- WhileStmt, line: 693
|           |   |       |   |       |   |-- Cond:
|           |   |       |   |       |   |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   `-- Body:
|           |   |       |   |       |       `-- BlockStmt, line: 693
|           |   |       |   |       |           |-- VarDecl, BaseType: Int, line: 694
|           |   |       |   |       |           |   `-- DefNode
|           |   |       |   |       |           |       `-- Var: LeftValueExpr value_ptr
|           |   |       |   |       |           |       `-- Init: InitSingle
|           |   |       |   |       |           |           `-- FuncCallExpr eval
|           |   |       |   |       |           |               |-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |   |       |           |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |   |       |           |-- VarDecl, BaseType: Int, line: 695
|           |   |       |   |       |           |   `-- DefNode
|           |   |       |   |       |           |       `-- Var: LeftValueExpr elem_ptr
|           |   |       |   |       |           |       `-- Init: InitSingle
|           |   |       |   |       |           |           `-- FuncCallExpr copy_data
|           |   |       |   |       |           |               `-- Arg0 = LeftValueExpr value_ptr
|           |   |       |   |       |           |-- ExprStmt line: 696
|           |   |       |   |       |           |   `-- FuncCallExpr free_data
|           |   |       |   |       |           |       `-- Arg0 = LeftValueExpr value_ptr
|           |   |       |   |       |           |-- IfStmt, line: 697
|           |   |       |   |       |           |   |-- Condition:
|           |   |       |   |       |           |   |   `-- LeftValueExpr cur_ptr
|           |   |       |   |       |           |   |-- Thenbody:
|           |   |       |   |       |           |   |   `-- BlockStmt, line: 697
|           |   |       |   |       |           |   |       `-- ExprStmt line: 698
|           |   |       |   |       |           |   |           `-- BinaryExpr Assign
|           |   |       |   |       |           |   |               |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |           |   |               |   |-- Dim0 = LeftValueExpr cur_ptr
|           |   |       |   |       |           |   |               |   `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       |           |   |               `-- LeftValueExpr elem_ptr
|           |   |       |   |       |           |   `-- Elsebody:
|           |   |       |   |       |           |       `-- BlockStmt, line: 699
|           |   |       |   |       |           |           `-- ExprStmt line: 700
|           |   |       |   |       |           |               `-- BinaryExpr Assign
|           |   |       |   |       |           |                   |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |           |                   |   |-- Dim0 = LeftValueExpr result_ptr
|           |   |       |   |       |           |                   |   `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |   |       |           |                   `-- LeftValueExpr elem_ptr
|           |   |       |   |       |           |-- ExprStmt line: 702
|           |   |       |   |       |           |   `-- BinaryExpr Assign
|           |   |       |   |       |           |       |-- LeftValueExpr cur_ptr
|           |   |       |   |       |           |       `-- LeftValueExpr elem_ptr
|           |   |       |   |       |           `-- ExprStmt line: 703
|           |   |       |   |       |               `-- BinaryExpr Assign
|           |   |       |   |       |                   |-- LeftValueExpr arg_ptr
|           |   |       |   |       |                   `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |       |                       |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |   |       |                       `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |       `-- ReturnStmt, line: 705
|           |   |       |   |           `-- LeftValueExpr result_ptr
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- VarDecl, BaseType: Int, line: 708
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr arg2_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |               |-- Dim0 = LeftValueExpr arg_ptr
|           |   |       |               `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |-- IfStmt, line: 709
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Or
|           |   |       |   |       |-- BinaryExpr Or
|           |   |       |   |       |   |-- UnaryExpr Not
|           |   |       |   |       |   |   `-- LeftValueExpr arg_ptr
|           |   |       |   |       |   `-- UnaryExpr Not
|           |   |       |   |       |       `-- LeftValueExpr arg2_ptr
|           |   |       |   |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |           |-- Dim0 = LeftValueExpr arg2_ptr
|           |   |       |   |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 709
|           |   |       |   |       `-- ExprStmt line: 710
|           |   |       |   |           `-- FuncCallExpr panic
|           |   |       |   |               `-- Arg0 = LeftValueExpr ERR_INVALID_ARG_NUM
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- None
|           |   |       |-- VarDecl, BaseType: Int, line: 712
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr value1_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- FuncCallExpr eval
|           |   |       |               |-- Arg0 = LeftValueExpr arg_ptr
|           |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |-- VarDecl, BaseType: Int, line: 713
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr value2_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- FuncCallExpr eval
|           |   |       |               |-- Arg0 = LeftValueExpr arg2_ptr
|           |   |       |               `-- Arg1 = LeftValueExpr env_ptr
|           |   |       |-- VarDecl, BaseType: Int, line: 714
|           |   |       |   |-- DefNode
|           |   |       |   |   `-- Var: LeftValueExpr lhs
|           |   |       |   |   `-- Init: InitSingle
|           |   |       |   |       `-- FuncCallExpr unwrap_number
|           |   |       |   |           `-- Arg0 = LeftValueExpr value1_ptr
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr rhs
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- FuncCallExpr unwrap_number
|           |   |       |               `-- Arg0 = LeftValueExpr value2_ptr
|           |   |       |-- VarDecl, BaseType: Int, line: 715
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr result_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- Const Int: 0
|           |   |       |-- IfStmt, line: 716
|           |   |       |   |-- Condition:
|           |   |       |   |   `-- BinaryExpr Eq
|           |   |       |   |       |-- LeftValueExpr sym_ptr
|           |   |       |   |       `-- LeftValueExpr SYM_ADD
|           |   |       |   |-- Thenbody:
|           |   |       |   |   `-- BlockStmt, line: 716
|           |   |       |   |       `-- ExprStmt line: 717
|           |   |       |   |           `-- BinaryExpr Assign
|           |   |       |   |               |-- LeftValueExpr result_ptr
|           |   |       |   |               `-- FuncCallExpr make_number
|           |   |       |   |                   `-- Arg0 = BinaryExpr Add
|           |   |       |   |                       |-- LeftValueExpr lhs
|           |   |       |   |                       `-- LeftValueExpr rhs
|           |   |       |   `-- Elsebody:
|           |   |       |       `-- IfStmt, line: 718
|           |   |       |           |-- Condition:
|           |   |       |           |   `-- BinaryExpr Eq
|           |   |       |           |       |-- LeftValueExpr sym_ptr
|           |   |       |           |       `-- LeftValueExpr SYM_SUB
|           |   |       |           |-- Thenbody:
|           |   |       |           |   `-- BlockStmt, line: 718
|           |   |       |           |       `-- ExprStmt line: 719
|           |   |       |           |           `-- BinaryExpr Assign
|           |   |       |           |               |-- LeftValueExpr result_ptr
|           |   |       |           |               `-- FuncCallExpr make_number
|           |   |       |           |                   `-- Arg0 = BinaryExpr Sub
|           |   |       |           |                       |-- LeftValueExpr lhs
|           |   |       |           |                       `-- LeftValueExpr rhs
|           |   |       |           `-- Elsebody:
|           |   |       |               `-- IfStmt, line: 720
|           |   |       |                   |-- Condition:
|           |   |       |                   |   `-- BinaryExpr Eq
|           |   |       |                   |       |-- LeftValueExpr sym_ptr
|           |   |       |                   |       `-- LeftValueExpr SYM_MUL
|           |   |       |                   |-- Thenbody:
|           |   |       |                   |   `-- BlockStmt, line: 720
|           |   |       |                   |       `-- ExprStmt line: 721
|           |   |       |                   |           `-- BinaryExpr Assign
|           |   |       |                   |               |-- LeftValueExpr result_ptr
|           |   |       |                   |               `-- FuncCallExpr make_number
|           |   |       |                   |                   `-- Arg0 = BinaryExpr Mul
|           |   |       |                   |                       |-- LeftValueExpr lhs
|           |   |       |                   |                       `-- LeftValueExpr rhs
|           |   |       |                   `-- Elsebody:
|           |   |       |                       `-- IfStmt, line: 722
|           |   |       |                           |-- Condition:
|           |   |       |                           |   `-- BinaryExpr Eq
|           |   |       |                           |       |-- LeftValueExpr sym_ptr
|           |   |       |                           |       `-- LeftValueExpr SYM_DIV
|           |   |       |                           |-- Thenbody:
|           |   |       |                           |   `-- BlockStmt, line: 722
|           |   |       |                           |       `-- ExprStmt line: 723
|           |   |       |                           |           `-- BinaryExpr Assign
|           |   |       |                           |               |-- LeftValueExpr result_ptr
|           |   |       |                           |               `-- FuncCallExpr make_number
|           |   |       |                           |                   `-- Arg0 = BinaryExpr Div
|           |   |       |                           |                       |-- LeftValueExpr lhs
|           |   |       |                           |                       `-- LeftValueExpr rhs
|           |   |       |                           `-- Elsebody:
|           |   |       |                               `-- IfStmt, line: 724
|           |   |       |                                   |-- Condition:
|           |   |       |                                   |   `-- BinaryExpr Eq
|           |   |       |                                   |       |-- LeftValueExpr sym_ptr
|           |   |       |                                   |       `-- LeftValueExpr SYM_LT
|           |   |       |                                   |-- Thenbody:
|           |   |       |                                   |   `-- BlockStmt, line: 724
|           |   |       |                                   |       `-- ExprStmt line: 725
|           |   |       |                                   |           `-- BinaryExpr Assign
|           |   |       |                                   |               |-- LeftValueExpr result_ptr
|           |   |       |                                   |               `-- FuncCallExpr make_bool
|           |   |       |                                   |                   `-- Arg0 = FuncCallExpr lt
|           |   |       |                                   |                       |-- Arg0 = LeftValueExpr lhs
|           |   |       |                                   |                       `-- Arg1 = LeftValueExpr rhs
|           |   |       |                                   `-- Elsebody:
|           |   |       |                                       `-- IfStmt, line: 726
|           |   |       |                                           |-- Condition:
|           |   |       |                                           |   `-- BinaryExpr Eq
|           |   |       |                                           |       |-- LeftValueExpr sym_ptr
|           |   |       |                                           |       `-- LeftValueExpr SYM_LE
|           |   |       |                                           |-- Thenbody:
|           |   |       |                                           |   `-- BlockStmt, line: 726
|           |   |       |                                           |       `-- ExprStmt line: 727
|           |   |       |                                           |           `-- BinaryExpr Assign
|           |   |       |                                           |               |-- LeftValueExpr result_ptr
|           |   |       |                                           |               `-- FuncCallExpr make_bool
|           |   |       |                                           |                   `-- Arg0 = FuncCallExpr le
|           |   |       |                                           |                       |-- Arg0 = LeftValueExpr lhs
|           |   |       |                                           |                       `-- Arg1 = LeftValueExpr rhs
|           |   |       |                                           `-- Elsebody:
|           |   |       |                                               `-- IfStmt, line: 728
|           |   |       |                                                   |-- Condition:
|           |   |       |                                                   |   `-- BinaryExpr Eq
|           |   |       |                                                   |       |-- LeftValueExpr sym_ptr
|           |   |       |                                                   |       `-- LeftValueExpr SYM_GT
|           |   |       |                                                   |-- Thenbody:
|           |   |       |                                                   |   `-- BlockStmt, line: 728
|           |   |       |                                                   |       `-- ExprStmt line: 729
|           |   |       |                                                   |           `-- BinaryExpr Assign
|           |   |       |                                                   |               |-- LeftValueExpr result_ptr
|           |   |       |                                                   |               `-- FuncCallExpr make_bool
|           |   |       |                                                   |                   `-- Arg0 = FuncCallExpr gt
|           |   |       |                                                   |                       |-- Arg0 = LeftValueExpr lhs
|           |   |       |                                                   |                       `-- Arg1 = LeftValueExpr rhs
|           |   |       |                                                   `-- Elsebody:
|           |   |       |                                                       `-- IfStmt, line: 730
|           |   |       |                                                           |-- Condition:
|           |   |       |                                                           |   `-- BinaryExpr Eq
|           |   |       |                                                           |       |-- LeftValueExpr sym_ptr
|           |   |       |                                                           |       `-- LeftValueExpr SYM_GE
|           |   |       |                                                           |-- Thenbody:
|           |   |       |                                                           |   `-- BlockStmt, line: 730
|           |   |       |                                                           |       `-- ExprStmt line: 731
|           |   |       |                                                           |           `-- BinaryExpr Assign
|           |   |       |                                                           |               |-- LeftValueExpr result_ptr
|           |   |       |                                                           |               `-- FuncCallExpr make_bool
|           |   |       |                                                           |                   `-- Arg0 = FuncCallExpr ge
|           |   |       |                                                           |                       |-- Arg0 = LeftValueExpr lhs
|           |   |       |                                                           |                       `-- Arg1 = LeftValueExpr rhs
|           |   |       |                                                           `-- Elsebody:
|           |   |       |                                                               `-- IfStmt, line: 732
|           |   |       |                                                                   |-- Condition:
|           |   |       |                                                                   |   `-- BinaryExpr Eq
|           |   |       |                                                                   |       |-- LeftValueExpr sym_ptr
|           |   |       |                                                                   |       `-- LeftValueExpr SYM_EQ_NUM
|           |   |       |                                                                   |-- Thenbody:
|           |   |       |                                                                   |   `-- BlockStmt, line: 732
|           |   |       |                                                                   |       `-- ExprStmt line: 733
|           |   |       |                                                                   |           `-- BinaryExpr Assign
|           |   |       |                                                                   |               |-- LeftValueExpr result_ptr
|           |   |       |                                                                   |               `-- FuncCallExpr make_bool
|           |   |       |                                                                   |                   `-- Arg0 = FuncCallExpr eq
|           |   |       |                                                                   |                       |-- Arg0 = LeftValueExpr lhs
|           |   |       |                                                                   |                       `-- Arg1 = LeftValueExpr rhs
|           |   |       |                                                                   `-- Elsebody:
|           |   |       |                                                                       `-- BlockStmt, line: 734
|           |   |       |                                                                           `-- ExprStmt line: 735
|           |   |       |                                                                               `-- FuncCallExpr panic
|           |   |       |                                                                                   `-- Arg0 = LeftValueExpr ERR_INVALID_SYMBOL
|           |   |       |-- ExprStmt line: 737
|           |   |       |   `-- FuncCallExpr free_data
|           |   |       |       `-- Arg0 = LeftValueExpr value1_ptr
|           |   |       |-- ExprStmt line: 738
|           |   |       |   `-- FuncCallExpr free_data
|           |   |       |       `-- Arg0 = LeftValueExpr value2_ptr
|           |   |       `-- ReturnStmt, line: 739
|           |   |           `-- LeftValueExpr result_ptr
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 741
|               `-- FuncCallExpr panic
|                   `-- Arg0 = LeftValueExpr ERR_INVALID_DATA_TYPE
|-- FuncDecl @Name: print -> @RetType: Void, line: 749
|   |-- Params:
|   |   `-- Int data_ptr
|   `-- Body:
|       `-- BlockStmt, line: 749
|           |-- IfStmt, line: 750
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_SYMBOL
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 750
|           |   |       |-- ExprStmt line: 751
|           |   |       |   `-- FuncCallExpr print_sym
|           |   |       |       `-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|           |   |       |           |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |           `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       `-- ReturnStmt, line: 752
|           |   |           `-- No return value
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 754
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_NUMBER
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 754
|           |   |       |-- ExprStmt line: 755
|           |   |       |   `-- FuncCallExpr putint
|           |   |       |       `-- Arg0 = LeftValueExpr data[Dim0][Dim1]
|           |   |       |           |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |           `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       `-- ReturnStmt, line: 756
|           |   |           `-- No return value
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 758
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_LIST
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 758
|           |   |       |-- ExprStmt line: 759
|           |   |       |   `-- FuncCallExpr putch
|           |   |       |       `-- Arg0 = Const Int: 40
|           |   |       |-- VarDecl, BaseType: Int, line: 760
|           |   |       |   `-- DefNode
|           |   |       |       `-- Var: LeftValueExpr list_ptr
|           |   |       |       `-- Init: InitSingle
|           |   |       |           `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |               |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |               `-- Dim1 = LeftValueExpr DATA_VALUE
|           |   |       |-- WhileStmt, line: 761
|           |   |       |   |-- Cond:
|           |   |       |   |   `-- LeftValueExpr list_ptr
|           |   |       |   `-- Body:
|           |   |       |       `-- BlockStmt, line: 761
|           |   |       |           |-- ExprStmt line: 762
|           |   |       |           |   `-- FuncCallExpr print
|           |   |       |           |       `-- Arg0 = LeftValueExpr list_ptr
|           |   |       |           |-- ExprStmt line: 763
|           |   |       |           |   `-- BinaryExpr Assign
|           |   |       |           |       |-- LeftValueExpr list_ptr
|           |   |       |           |       `-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |           |           |-- Dim0 = LeftValueExpr list_ptr
|           |   |       |           |           `-- Dim1 = LeftValueExpr DATA_NEXT
|           |   |       |           `-- IfStmt, line: 764
|           |   |       |               |-- Condition:
|           |   |       |               |   `-- LeftValueExpr list_ptr
|           |   |       |               |-- Thenbody:
|           |   |       |               |   `-- ExprStmt line: 764
|           |   |       |               |       `-- FuncCallExpr putch
|           |   |       |               |           `-- Arg0 = Const Int: 32
|           |   |       |               `-- Elsebody:
|           |   |       |                   `-- None
|           |   |       |-- ExprStmt line: 766
|           |   |       |   `-- FuncCallExpr putch
|           |   |       |       `-- Arg0 = Const Int: 41
|           |   |       `-- ReturnStmt, line: 767
|           |   |           `-- No return value
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 769
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr data[Dim0][Dim1]
|           |   |       |   |-- Dim0 = LeftValueExpr data_ptr
|           |   |       |   `-- Dim1 = LeftValueExpr DATA_TYPE
|           |   |       `-- LeftValueExpr DATA_TYPE_FUNC
|           |   |-- Thenbody:
|           |   |   `-- BlockStmt, line: 769
|           |   |       |-- ExprStmt line: 770
|           |   |       |   `-- FuncCallExpr putch
|           |   |       |       `-- Arg0 = Const Int: 35
|           |   |       |-- ExprStmt line: 771
|           |   |       |   `-- FuncCallExpr putch
|           |   |       |       `-- Arg0 = Const Int: 60
|           |   |       |-- ExprStmt line: 772
|           |   |       |   `-- FuncCallExpr putch
|           |   |       |       `-- Arg0 = Const Int: 102
|           |   |       |-- ExprStmt line: 773
|           |   |       |   `-- FuncCallExpr putch
|           |   |       |       `-- Arg0 = Const Int: 117
|           |   |       |-- ExprStmt line: 774
|           |   |       |   `-- FuncCallExpr putch
|           |   |       |       `-- Arg0 = Const Int: 110
|           |   |       |-- ExprStmt line: 775
|           |   |       |   `-- FuncCallExpr putch
|           |   |       |       `-- Arg0 = Const Int: 99
|           |   |       |-- ExprStmt line: 776
|           |   |       |   `-- FuncCallExpr putch
|           |   |       |       `-- Arg0 = Const Int: 32
|           |   |       |-- ExprStmt line: 777
|           |   |       |   `-- FuncCallExpr putint
|           |   |       |       `-- Arg0 = LeftValueExpr data_ptr
|           |   |       |-- ExprStmt line: 778
|           |   |       |   `-- FuncCallExpr putch
|           |   |       |       `-- Arg0 = Const Int: 62
|           |   |       `-- ReturnStmt, line: 779
|           |   |           `-- No return value
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ExprStmt line: 781
|               `-- FuncCallExpr panic
|                   `-- Arg0 = LeftValueExpr ERR_INVALID_DATA_TYPE
`-- FuncDecl @Name: main -> @RetType: Int, line: 788
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 788
            |-- ExprStmt line: 790
            |   `-- FuncCallExpr init_data
            |       `-- No args
            |-- VarDecl, BaseType: Int, line: 792
            |   `-- DefNode
            |       `-- Var: LeftValueExpr global_env_ptr
            |       `-- Init: InitSingle
            |           `-- FuncCallExpr make_env
            |               `-- Arg0 = Const Int: 0
            |-- ExprStmt line: 794
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr last_token_type
            |       `-- FuncCallExpr next_token
            |           `-- No args
            |-- WhileStmt, line: 796
            |   |-- Cond:
            |   |   `-- Const Int: 1
            |   `-- Body:
            |       `-- BlockStmt, line: 796
            |           |-- VarDecl, BaseType: Int, line: 798
            |           |   `-- DefNode
            |           |       `-- Var: LeftValueExpr data_ptr
            |           |       `-- Init: InitSingle
            |           |           `-- FuncCallExpr parse
            |           |               `-- No args
            |           |-- IfStmt, line: 799
            |           |   |-- Condition:
            |           |   |   `-- BinaryExpr Eq
            |           |   |       |-- LeftValueExpr data_ptr
            |           |   |       `-- Const Int: 0
            |           |   |-- Thenbody:
            |           |   |   `-- BreakStmt, line: 799
            |           |   `-- Elsebody:
            |           |       `-- None
            |           |-- VarDecl, BaseType: Int, line: 801
            |           |   `-- DefNode
            |           |       `-- Var: LeftValueExpr result_ptr
            |           |       `-- Init: InitSingle
            |           |           `-- FuncCallExpr eval
            |           |               |-- Arg0 = LeftValueExpr data_ptr
            |           |               `-- Arg1 = LeftValueExpr global_env_ptr
            |           |-- IfStmt, line: 803
            |           |   |-- Condition:
            |           |   |   `-- LeftValueExpr result_ptr
            |           |   |-- Thenbody:
            |           |   |   `-- BlockStmt, line: 803
            |           |   |       |-- ExprStmt line: 804
            |           |   |       |   `-- FuncCallExpr print
            |           |   |       |       `-- Arg0 = LeftValueExpr result_ptr
            |           |   |       `-- ExprStmt line: 805
            |           |   |           `-- FuncCallExpr putch
            |           |   |               `-- Arg0 = Const Int: 10
            |           |   `-- Elsebody:
            |           |       `-- None
            |           |-- ExprStmt line: 808
            |           |   `-- FuncCallExpr free_data
            |           |       `-- Arg0 = LeftValueExpr data_ptr
            |           `-- ExprStmt line: 809
            |               `-- FuncCallExpr free_data
            |                   `-- Arg0 = LeftValueExpr result_ptr
            `-- ReturnStmt, line: 811
                `-- Const Int: 0
