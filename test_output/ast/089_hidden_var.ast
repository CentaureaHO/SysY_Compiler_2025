ASTree
|-- VarDecl, BaseType: Int, line: 2
|   `-- DefNode
|       `-- Var: LeftValueExpr b
|       `-- Init: InitSingle
|           `-- Const Int: 5
|-- VarDecl, BaseType: Int, line: 3
|   `-- DefNode
|       `-- Var: LeftValueExpr c[Dim0]
|           `-- Dim0 = Const Int: 4
|       `-- Init: InitMulti
|           |-- InitSingle
|           |   `-- Const Int: 6
|           |-- InitSingle
|           |   `-- Const Int: 7
|           |-- InitSingle
|           |   `-- Const Int: 8
|           `-- InitSingle
|               `-- Const Int: 9
`-- FuncDecl @Name: main -> @RetType: Int, line: 5
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 6
            |-- VarDecl, BaseType: Int, line: 7
            |   `-- DefNode
            |       |-- Var: LeftValueExpr a
            |       `-- Init: no initializer
            |-- ExprStmt line: 8
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a
            |       `-- Const Int: 1
            |-- BlockStmt, line: 9
            |   |-- VarDecl, BaseType: Int, line: 10
            |   |   `-- DefNode
            |   |       |-- Var: LeftValueExpr a
            |   |       `-- Init: no initializer
            |   |-- ExprStmt line: 11
            |   |   `-- BinaryExpr Assign
            |   |       |-- LeftValueExpr a
            |   |       `-- Const Int: 2
            |   |-- BlockStmt, line: 12
            |   |   |-- ExprStmt line: 13
            |   |   |   `-- BinaryExpr Assign
            |   |   |       |-- LeftValueExpr a
            |   |   |       `-- Const Int: 3
            |   |   `-- ExprStmt line: 14
            |   |       `-- FuncCallExpr putint
            |   |           `-- Arg0 = LeftValueExpr a
            |   `-- ExprStmt line: 16
            |       `-- FuncCallExpr putint
            |           `-- Arg0 = LeftValueExpr a
            |-- ExprStmt line: 18
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr a
            |-- ExprStmt line: 18
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            |-- WhileStmt, line: 20
            |   |-- Cond:
            |   |   `-- BinaryExpr Lt
            |   |       |-- LeftValueExpr a
            |   |       `-- Const Int: 5
            |   `-- Body:
            |       `-- BlockStmt, line: 20
            |           |-- VarDecl, BaseType: Int, line: 21
            |           |   `-- DefNode
            |           |       `-- Var: LeftValueExpr a
            |           |       `-- Init: InitSingle
            |           |           `-- Const Int: 0
            |           |-- ExprStmt line: 22
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr a
            |           |       `-- BinaryExpr Add
            |           |           |-- LeftValueExpr a
            |           |           `-- Const Int: 1
            |           `-- IfStmt, line: 23
            |               |-- Condition:
            |               |   `-- LeftValueExpr a
            |               |-- Thenbody:
            |               |   `-- BreakStmt, line: 24
            |               `-- Elsebody:
            |                   `-- None
            |-- ExprStmt line: 26
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr a
            |-- ExprStmt line: 26
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            |-- BlockStmt, line: 28
            |   `-- BlockStmt, line: 29
            |       |-- BlockStmt, line: 30
            |       |   `-- BlockStmt, line: 31
            |       |-- ExprStmt line: 33
            |       |   `-- BinaryExpr Assign
            |       |       |-- LeftValueExpr c[Dim0]
            |       |       |   `-- Dim0 = Const Int: 2
            |       |       `-- Const Int: 1
            |       `-- BlockStmt, line: 34
            |           `-- VarDecl, BaseType: Int, line: 35
            |               `-- DefNode
            |                   `-- Var: LeftValueExpr c[Dim0][Dim1]
            |                       |-- Dim0 = Const Int: 2
            |                       `-- Dim1 = Const Int: 8
            |                   `-- Init: InitMulti
            |                       |-- InitMulti
            |                       |   |-- InitSingle
            |                       |   |   `-- Const Int: 0
            |                       |   `-- InitSingle
            |                       |       `-- Const Int: 9
            |                       |-- InitSingle
            |                       |   `-- Const Int: 8
            |                       `-- InitSingle
            |                           `-- Const Int: 3
            |-- BlockStmt, line: 40
            |   |-- VarDecl, BaseType: Int, line: 41
            |   |   `-- DefNode
            |   |       `-- Var: LeftValueExpr b
            |   |       `-- Init: InitSingle
            |   |           `-- Const Int: 2
            |   `-- IfStmt, line: 42
            |       |-- Condition:
            |       |   `-- LeftValueExpr c[Dim0]
            |       |       `-- Dim0 = Const Int: 2
            |       |-- Thenbody:
            |       |   `-- BlockStmt, line: 42
            |       |       |-- VarDecl, BaseType: Int, line: 43
            |       |       |   `-- DefNode
            |       |       |       `-- Var: LeftValueExpr c[Dim0][Dim1][Dim2]
            |       |       |           |-- Dim0 = Const Int: 7
            |       |       |           |-- Dim1 = Const Int: 1
            |       |       |           `-- Dim2 = Const Int: 5
            |       |       |       `-- Init: InitMulti
            |       |       |           |-- InitMulti
            |       |       |           |-- InitMulti
            |       |       |           |-- InitMulti
            |       |       |           |   |-- InitSingle
            |       |       |           |   |   `-- Const Int: 2
            |       |       |           |   |-- InitSingle
            |       |       |           |   |   `-- Const Int: 1
            |       |       |           |   `-- InitSingle
            |       |       |           |       `-- Const Int: 8
            |       |       |           `-- InitMulti
            |       |       |               `-- InitMulti
            |       |       |-- ExprStmt line: 44
            |       |       |   `-- FuncCallExpr putint
            |       |       |       `-- Arg0 = LeftValueExpr c[Dim0][Dim1][Dim2]
            |       |       |           |-- Dim0 = LeftValueExpr b
            |       |       |           |-- Dim1 = Const Int: 0
            |       |       |           `-- Dim2 = Const Int: 0
            |       |       |-- ExprStmt line: 45
            |       |       |   `-- FuncCallExpr putint
            |       |       |       `-- Arg0 = LeftValueExpr c[Dim0][Dim1][Dim2]
            |       |       |           |-- Dim0 = LeftValueExpr b
            |       |       |           |-- Dim1 = Const Int: 0
            |       |       |           `-- Dim2 = Const Int: 1
            |       |       `-- ExprStmt line: 46
            |       |           `-- FuncCallExpr putint
            |       |               `-- Arg0 = LeftValueExpr c[Dim0][Dim1][Dim2]
            |       |                   |-- Dim0 = LeftValueExpr b
            |       |                   |-- Dim1 = Const Int: 0
            |       |                   `-- Dim2 = Const Int: 2
            |       `-- Elsebody:
            |           `-- None
            |-- ExprStmt line: 49
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            |-- ExprStmt line: 51
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr b
            |-- ExprStmt line: 51
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            |-- ExprStmt line: 52
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr c[Dim0]
            |           `-- Dim0 = Const Int: 0
            |-- ExprStmt line: 52
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr c[Dim0]
            |           `-- Dim0 = Const Int: 1
            |-- ExprStmt line: 52
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr c[Dim0]
            |           `-- Dim0 = Const Int: 2
            |-- ExprStmt line: 52
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr c[Dim0]
            |           `-- Dim0 = Const Int: 3
            |-- ExprStmt line: 52
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            `-- ReturnStmt, line: 53
                `-- Const Int: 0
