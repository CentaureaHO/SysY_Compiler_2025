ASTree
|-- VarDecl, BaseType: Int, line: 1
|   `-- DefNode
|       |-- Var: LeftValueExpr a
|       `-- Init: no initializer
|-- VarDecl, BaseType: Int, line: 2
|   `-- DefNode
|       |-- Var: LeftValueExpr b
|       `-- Init: no initializer
|-- VarDecl, BaseType: Int, line: 3
|   `-- DefNode
|       |-- Var: LeftValueExpr c
|       `-- Init: no initializer
|-- VarDecl, BaseType: Int, line: 4
|   `-- DefNode
|       |-- Var: LeftValueExpr d
|       `-- Init: no initializer
|-- VarDecl, BaseType: Int, line: 5
|   `-- DefNode
|       |-- Var: LeftValueExpr e
|       `-- Init: no initializer
`-- FuncDecl @Name: main -> @RetType: Int, line: 6
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 7
            |-- ExprStmt line: 8
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a
            |       `-- FuncCallExpr getint
            |           `-- No args
            |-- ExprStmt line: 9
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr b
            |       `-- FuncCallExpr getint
            |           `-- No args
            |-- ExprStmt line: 10
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr c
            |       `-- FuncCallExpr getint
            |           `-- No args
            |-- ExprStmt line: 11
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr d
            |       `-- FuncCallExpr getint
            |           `-- No args
            |-- ExprStmt line: 12
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr e
            |       `-- FuncCallExpr getint
            |           `-- No args
            |-- VarDecl, BaseType: Int, line: 13
            |   `-- DefNode
            |       `-- Var: LeftValueExpr flag
            |       `-- Init: InitSingle
            |           `-- Const Int: 0
            |-- IfStmt, line: 14
            |   |-- Condition:
            |   |   `-- BinaryExpr Or
            |   |       |-- BinaryExpr Or
            |   |       |   |-- BinaryExpr Neq
            |   |       |   |   |-- BinaryExpr Sub
            |   |       |   |   |   |-- LeftValueExpr a
            |   |       |   |   |   `-- BinaryExpr Mul
            |   |       |   |   |       |-- LeftValueExpr b
            |   |       |   |   |       `-- LeftValueExpr c
            |   |       |   |   `-- BinaryExpr Sub
            |   |       |   |       |-- LeftValueExpr d
            |   |       |   |       `-- BinaryExpr Div
            |   |       |   |           |-- LeftValueExpr a
            |   |       |   |           `-- LeftValueExpr c
            |   |       |   `-- BinaryExpr Eq
            |   |       |       |-- BinaryExpr Div
            |   |       |       |   |-- BinaryExpr Mul
            |   |       |       |   |   |-- LeftValueExpr a
            |   |       |       |   |   `-- LeftValueExpr b
            |   |       |       |   `-- LeftValueExpr c
            |   |       |       `-- BinaryExpr Add
            |   |       |           |-- LeftValueExpr e
            |   |       |           `-- LeftValueExpr d
            |   |       `-- BinaryExpr Eq
            |   |           |-- BinaryExpr Add
            |   |           |   |-- BinaryExpr Add
            |   |           |   |   |-- LeftValueExpr a
            |   |           |   |   `-- LeftValueExpr b
            |   |           |   `-- LeftValueExpr c
            |   |           `-- BinaryExpr Add
            |   |               |-- LeftValueExpr d
            |   |               `-- LeftValueExpr e
            |   |-- Thenbody:
            |   |   `-- BlockStmt, line: 15
            |   |       `-- ExprStmt line: 16
            |   |           `-- BinaryExpr Assign
            |   |               |-- LeftValueExpr flag
            |   |               `-- Const Int: 1
            |   `-- Elsebody:
            |       `-- None
            `-- ReturnStmt, line: 18
                `-- LeftValueExpr flag
