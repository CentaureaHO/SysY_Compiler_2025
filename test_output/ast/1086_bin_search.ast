ASTree
`-- FuncDecl @Name: main -> @RetType: Int, line: 2
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 3
            |-- VarDecl, BaseType: Int, line: 5
            |   `-- DefNode
            |       |-- Var: LeftValueExpr i
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 6
            |   `-- DefNode
            |       |-- Var: LeftValueExpr sum
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 7
            |   `-- DefNode
            |       |-- Var: LeftValueExpr a[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 10
            |       `-- Init: no initializer
            |-- ExprStmt line: 8
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr sum
            |       `-- Const Int: 0
            |-- ExprStmt line: 11
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr i
            |       `-- Const Int: 0
            |-- WhileStmt, line: 12
            |   |-- Cond:
            |   |   `-- BinaryExpr Lt
            |   |       |-- LeftValueExpr i
            |   |       `-- Const Int: 10
            |   `-- Body:
            |       `-- BlockStmt, line: 13
            |           |-- ExprStmt line: 14
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr a[Dim0]
            |           |       |   `-- Dim0 = LeftValueExpr i
            |           |       `-- BinaryExpr Add
            |           |           |-- LeftValueExpr i
            |           |           `-- Const Int: 1
            |           `-- ExprStmt line: 15
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr i
            |                   `-- BinaryExpr Add
            |                       |-- LeftValueExpr i
            |                       `-- Const Int: 1
            |-- VarDecl, BaseType: Int, line: 17
            |   `-- DefNode
            |       |-- Var: LeftValueExpr x
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 18
            |   `-- DefNode
            |       |-- Var: LeftValueExpr high
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 19
            |   `-- DefNode
            |       |-- Var: LeftValueExpr low
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 20
            |   `-- DefNode
            |       |-- Var: LeftValueExpr mid
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 21
            |   `-- DefNode
            |       |-- Var: LeftValueExpr n
            |       `-- Init: no initializer
            |-- ExprStmt line: 22
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr n
            |       `-- Const Int: 10
            |-- ExprStmt line: 23
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr x
            |       `-- FuncCallExpr getint
            |           `-- No args
            |-- ExprStmt line: 24
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr high
            |       `-- BinaryExpr Sub
            |           |-- LeftValueExpr n
            |           `-- Const Int: 1
            |-- ExprStmt line: 25
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr low
            |       `-- Const Int: 0
            |-- ExprStmt line: 26
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr mid
            |       `-- BinaryExpr Div
            |           |-- BinaryExpr Add
            |           |   |-- LeftValueExpr high
            |           |   `-- LeftValueExpr low
            |           `-- Const Int: 2
            |-- WhileStmt, line: 27
            |   |-- Cond:
            |   |   `-- BinaryExpr And
            |   |       |-- BinaryExpr Neq
            |   |       |   |-- LeftValueExpr a[Dim0]
            |   |       |   |   `-- Dim0 = LeftValueExpr mid
            |   |       |   `-- LeftValueExpr x
            |   |       `-- BinaryExpr Lt
            |   |           |-- LeftValueExpr low
            |   |           `-- LeftValueExpr high
            |   `-- Body:
            |       `-- BlockStmt, line: 28
            |           |-- ExprStmt line: 29
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr mid
            |           |       `-- BinaryExpr Div
            |           |           |-- BinaryExpr Add
            |           |           |   |-- LeftValueExpr high
            |           |           |   `-- LeftValueExpr low
            |           |           `-- Const Int: 2
            |           `-- IfStmt, line: 30
            |               |-- Condition:
            |               |   `-- BinaryExpr Lt
            |               |       |-- LeftValueExpr x
            |               |       `-- LeftValueExpr a[Dim0]
            |               |           `-- Dim0 = LeftValueExpr mid
            |               |-- Thenbody:
            |               |   `-- ExprStmt line: 31
            |               |       `-- BinaryExpr Assign
            |               |           |-- LeftValueExpr high
            |               |           `-- BinaryExpr Sub
            |               |               |-- LeftValueExpr mid
            |               |               `-- Const Int: 1
            |               `-- Elsebody:
            |                   `-- BlockStmt, line: 33
            |                       `-- ExprStmt line: 34
            |                           `-- BinaryExpr Assign
            |                               |-- LeftValueExpr low
            |                               `-- BinaryExpr Add
            |                                   |-- LeftValueExpr mid
            |                                   `-- Const Int: 1
            |-- IfStmt, line: 39
            |   |-- Condition:
            |   |   `-- BinaryExpr Eq
            |   |       |-- LeftValueExpr x
            |   |       `-- LeftValueExpr a[Dim0]
            |   |           `-- Dim0 = LeftValueExpr mid
            |   |-- Thenbody:
            |   |   `-- ExprStmt line: 40
            |   |       `-- FuncCallExpr putint
            |   |           `-- Arg0 = LeftValueExpr x
            |   `-- Elsebody:
            |       `-- BlockStmt, line: 42
            |           |-- ExprStmt line: 43
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr x
            |           |       `-- Const Int: 0
            |           `-- ExprStmt line: 44
            |               `-- FuncCallExpr putint
            |                   `-- Arg0 = LeftValueExpr x
            |-- ExprStmt line: 47
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr x
            |       `-- Const Int: 10
            |-- ExprStmt line: 48
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = LeftValueExpr x
            `-- ReturnStmt, line: 50
                `-- Const Int: 0
