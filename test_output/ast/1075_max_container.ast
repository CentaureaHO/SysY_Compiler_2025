ASTree
|-- FuncDecl @Name: maxArea -> @RetType: Int, line: 1
|   |-- Params:
|   |   |-- Int height[Dim0]
|   |   |   `-- Dim0 = Const Int: -1
|   |   `-- Int n
|   `-- Body:
|       `-- BlockStmt, line: 1
|           |-- VarDecl, BaseType: Int, line: 2
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr i
|           |       `-- Init: no initializer
|           |-- VarDecl, BaseType: Int, line: 3
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr j
|           |       `-- Init: no initializer
|           |-- ExprStmt line: 4
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr i
|           |       `-- Const Int: 0
|           |-- ExprStmt line: 5
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr j
|           |       `-- BinaryExpr Sub
|           |           |-- LeftValueExpr n
|           |           `-- Const Int: 1
|           |-- VarDecl, BaseType: Int, line: 6
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr max_val
|           |       `-- Init: no initializer
|           |-- ExprStmt line: 7
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr max_val
|           |       `-- UnaryExpr Sub
|           |           `-- Const Int: 1
|           |-- WhileStmt, line: 8
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- LeftValueExpr j
|           |   `-- Body:
|           |       `-- BlockStmt, line: 8
|           |           |-- VarDecl, BaseType: Int, line: 9
|           |           |   `-- DefNode
|           |           |       |-- Var: LeftValueExpr area
|           |           |       `-- Init: no initializer
|           |           |-- IfStmt, line: 10
|           |           |   |-- Condition:
|           |           |   |   `-- BinaryExpr Lt
|           |           |   |       |-- LeftValueExpr height[Dim0]
|           |           |   |       |   `-- Dim0 = LeftValueExpr i
|           |           |   |       `-- LeftValueExpr height[Dim0]
|           |           |   |           `-- Dim0 = LeftValueExpr j
|           |           |   |-- Thenbody:
|           |           |   |   `-- ExprStmt line: 11
|           |           |   |       `-- BinaryExpr Assign
|           |           |   |           |-- LeftValueExpr area
|           |           |   |           `-- BinaryExpr Mul
|           |           |   |               |-- BinaryExpr Sub
|           |           |   |               |   |-- LeftValueExpr j
|           |           |   |               |   `-- LeftValueExpr i
|           |           |   |               `-- LeftValueExpr height[Dim0]
|           |           |   |                   `-- Dim0 = LeftValueExpr i
|           |           |   `-- Elsebody:
|           |           |       `-- ExprStmt line: 13
|           |           |           `-- BinaryExpr Assign
|           |           |               |-- LeftValueExpr area
|           |           |               `-- BinaryExpr Mul
|           |           |                   |-- BinaryExpr Sub
|           |           |                   |   |-- LeftValueExpr j
|           |           |                   |   `-- LeftValueExpr i
|           |           |                   `-- LeftValueExpr height[Dim0]
|           |           |                       `-- Dim0 = LeftValueExpr j
|           |           |-- IfStmt, line: 14
|           |           |   |-- Condition:
|           |           |   |   `-- BinaryExpr Gt
|           |           |   |       |-- LeftValueExpr area
|           |           |   |       `-- LeftValueExpr max_val
|           |           |   |-- Thenbody:
|           |           |   |   `-- BlockStmt, line: 14
|           |           |   |       `-- ExprStmt line: 15
|           |           |   |           `-- BinaryExpr Assign
|           |           |   |               |-- LeftValueExpr max_val
|           |           |   |               `-- LeftValueExpr area
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           `-- IfStmt, line: 17
|           |               |-- Condition:
|           |               |   `-- BinaryExpr Gt
|           |               |       |-- LeftValueExpr height[Dim0]
|           |               |       |   `-- Dim0 = LeftValueExpr i
|           |               |       `-- LeftValueExpr height[Dim0]
|           |               |           `-- Dim0 = LeftValueExpr j
|           |               |-- Thenbody:
|           |               |   `-- ExprStmt line: 18
|           |               |       `-- BinaryExpr Assign
|           |               |           |-- LeftValueExpr j
|           |               |           `-- BinaryExpr Sub
|           |               |               |-- LeftValueExpr j
|           |               |               `-- Const Int: 1
|           |               `-- Elsebody:
|           |                   `-- ExprStmt line: 20
|           |                       `-- BinaryExpr Assign
|           |                           |-- LeftValueExpr i
|           |                           `-- BinaryExpr Add
|           |                               |-- LeftValueExpr i
|           |                               `-- Const Int: 1
|           `-- ReturnStmt, line: 22
|               `-- LeftValueExpr max_val
`-- FuncDecl @Name: main -> @RetType: Int, line: 25
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 25
            |-- VarDecl, BaseType: Int, line: 26
            |   `-- DefNode
            |       |-- Var: LeftValueExpr res
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 27
            |   `-- DefNode
            |       |-- Var: LeftValueExpr a[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 10
            |       `-- Init: no initializer
            |-- ExprStmt line: 28
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 0
            |       `-- Const Int: 3
            |-- ExprStmt line: 28
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 1
            |       `-- Const Int: 3
            |-- ExprStmt line: 28
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 2
            |       `-- Const Int: 9
            |-- ExprStmt line: 28
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 3
            |       `-- Const Int: 0
            |-- ExprStmt line: 28
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 4
            |       `-- Const Int: 0
            |-- ExprStmt line: 29
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 5
            |       `-- Const Int: 1
            |-- ExprStmt line: 29
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 6
            |       `-- Const Int: 1
            |-- ExprStmt line: 29
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 7
            |       `-- Const Int: 5
            |-- ExprStmt line: 29
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 8
            |       `-- Const Int: 7
            |-- ExprStmt line: 29
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 9
            |       `-- Const Int: 8
            |-- ExprStmt line: 30
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr res
            |       `-- Const Int: 10
            |-- ExprStmt line: 31
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr res
            |       `-- FuncCallExpr maxArea
            |           |-- Arg0 = LeftValueExpr a
            |           `-- Arg1 = LeftValueExpr res
            `-- ReturnStmt, line: 32
                `-- LeftValueExpr res
