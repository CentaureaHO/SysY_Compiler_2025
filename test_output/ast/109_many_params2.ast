ASTree
|-- FuncDecl @Name: func -> @RetType: Int, line: 2
|   |-- Params:
|   |   |-- Int a
|   |   |-- Int b[Dim0][Dim1]
|   |   |   |-- Dim0 = Const Int: -1
|   |   |   `-- Dim1 = Const Int: 59
|   |   |-- Int c
|   |   |-- Int d[Dim0]
|   |   |   `-- Dim0 = Const Int: -1
|   |   |-- Int e
|   |   |-- Int f
|   |   |-- Int g[Dim0]
|   |   |   `-- Dim0 = Const Int: -1
|   |   |-- Int h
|   |   `-- Int i
|   `-- Body:
|       `-- BlockStmt, line: 3
|           |-- VarDecl, BaseType: Int, line: 4
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr index
|           |       `-- Init: InitSingle
|           |           `-- Const Int: 0
|           |-- WhileStmt, line: 5
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr index
|           |   |       `-- Const Int: 10
|           |   `-- Body:
|           |       `-- BlockStmt, line: 5
|           |           |-- ExprStmt line: 6
|           |           |   `-- FuncCallExpr putint
|           |           |       `-- Arg0 = LeftValueExpr b[Dim0][Dim1]
|           |           |           |-- Dim0 = LeftValueExpr a
|           |           |           `-- Dim1 = LeftValueExpr index
|           |           `-- ExprStmt line: 7
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr index
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr index
|           |                       `-- Const Int: 1
|           |-- ExprStmt line: 9
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 10
|           |-- ExprStmt line: 11
|           |   `-- FuncCallExpr putint
|           |       `-- Arg0 = LeftValueExpr d[Dim0]
|           |           `-- Dim0 = LeftValueExpr c
|           |-- ExprStmt line: 12
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 10
|           |-- WhileStmt, line: 14
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- Const Int: 10
|           |   `-- Body:
|           |       `-- BlockStmt, line: 14
|           |           |-- ExprStmt line: 15
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr g[Dim0]
|           |           |       |   `-- Dim0 = LeftValueExpr i
|           |           |       `-- BinaryExpr Mod
|           |           |           |-- BinaryExpr Mul
|           |           |           |   |-- LeftValueExpr h
|           |           |           |   `-- Const Int: 128875
|           |           |           `-- Const Int: 3724
|           |           |-- ExprStmt line: 16
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr i
|           |           |       `-- BinaryExpr Add
|           |           |           |-- LeftValueExpr i
|           |           |           `-- Const Int: 1
|           |           `-- ExprStmt line: 17
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr h
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr h
|           |                       `-- Const Int: 7
|           `-- ReturnStmt, line: 20
|               `-- BinaryExpr Add
|                   |-- LeftValueExpr e
|                   `-- LeftValueExpr f
`-- FuncDecl @Name: main -> @RetType: Int, line: 23
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 24
            |-- VarDecl, BaseType: Int, line: 25
            |   `-- DefNode
            |       `-- Var: LeftValueExpr a[Dim0][Dim1]
            |           |-- Dim0 = Const Int: 61
            |           `-- Dim1 = Const Int: 67
            |       `-- Init: InitMulti
            |-- VarDecl, BaseType: Int, line: 26
            |   `-- DefNode
            |       `-- Var: LeftValueExpr b[Dim0][Dim1]
            |           |-- Dim0 = Const Int: 53
            |           `-- Dim1 = Const Int: 59
            |       `-- Init: InitMulti
            |-- ExprStmt line: 28
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0][Dim1]
            |       |   |-- Dim0 = Const Int: 17
            |       |   `-- Dim1 = Const Int: 1
            |       `-- Const Int: 6
            |-- ExprStmt line: 29
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0][Dim1]
            |       |   |-- Dim0 = Const Int: 17
            |       |   `-- Dim1 = Const Int: 3
            |       `-- Const Int: 7
            |-- ExprStmt line: 30
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0][Dim1]
            |       |   |-- Dim0 = Const Int: 17
            |       |   `-- Dim1 = Const Int: 4
            |       `-- Const Int: 4
            |-- ExprStmt line: 31
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0][Dim1]
            |       |   |-- Dim0 = Const Int: 17
            |       |   `-- Dim1 = Const Int: 7
            |       `-- Const Int: 9
            |-- ExprStmt line: 32
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0][Dim1]
            |       |   |-- Dim0 = Const Int: 17
            |       |   `-- Dim1 = Const Int: 11
            |       `-- Const Int: 11
            |-- ExprStmt line: 34
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr b[Dim0][Dim1]
            |       |   |-- Dim0 = Const Int: 6
            |       |   `-- Dim1 = Const Int: 1
            |       `-- Const Int: 1
            |-- ExprStmt line: 35
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr b[Dim0][Dim1]
            |       |   |-- Dim0 = Const Int: 6
            |       |   `-- Dim1 = Const Int: 2
            |       `-- Const Int: 2
            |-- ExprStmt line: 36
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr b[Dim0][Dim1]
            |       |   |-- Dim0 = Const Int: 6
            |       |   `-- Dim1 = Const Int: 3
            |       `-- Const Int: 3
            |-- ExprStmt line: 37
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr b[Dim0][Dim1]
            |       |   |-- Dim0 = Const Int: 6
            |       |   `-- Dim1 = Const Int: 9
            |       `-- Const Int: 9
            |-- VarDecl, BaseType: Int, line: 39
            |   `-- DefNode
            |       |-- Var: LeftValueExpr ret
            |       `-- Init: no initializer
            |-- ExprStmt line: 40
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr ret
            |       `-- BinaryExpr Mul
            |           |-- FuncCallExpr func
            |           |   |-- Arg0 = LeftValueExpr a[Dim0][Dim1]
            |           |   |   Arg0 = |-- Dim0 = Const Int: 17
            |           |   |   Arg0 = `-- Dim1 = Const Int: 1
            |           |   |-- Arg1 = LeftValueExpr b
            |           |   |-- Arg2 = LeftValueExpr a[Dim0][Dim1]
            |           |   |   Arg2 = |-- Dim0 = Const Int: 17
            |           |   |   Arg2 = `-- Dim1 = Const Int: 3
            |           |   |-- Arg3 = LeftValueExpr a[Dim0]
            |           |   |   Arg3 = `-- Dim0 = Const Int: 17
            |           |   |-- Arg4 = LeftValueExpr b[Dim0][Dim1]
            |           |   |   Arg4 = |-- Dim0 = Const Int: 6
            |           |   |   Arg4 = `-- Dim1 = Const Int: 3
            |           |   |-- Arg5 = LeftValueExpr b[Dim0][Dim1]
            |           |   |   Arg5 = |-- Dim0 = Const Int: 6
            |           |   |   Arg5 = `-- Dim1 = Const Int: 0
            |           |   |-- Arg6 = LeftValueExpr b[Dim0]
            |           |   |   Arg6 = `-- Dim0 = Const Int: 6
            |           |   |-- Arg7 = LeftValueExpr b[Dim0][Dim1]
            |           |   |   Arg7 = |-- Dim0 = Const Int: 34
            |           |   |   Arg7 = `-- Dim1 = Const Int: 4
            |           |   `-- Arg8 = LeftValueExpr b[Dim0][Dim1]
            |           |       |-- Dim0 = Const Int: 51
            |           |       `-- Dim1 = Const Int: 18
            |           `-- Const Int: 3
            |-- WhileStmt, line: 42
            |   |-- Cond:
            |   |   `-- BinaryExpr Ge
            |   |       |-- LeftValueExpr ret
            |   |       `-- Const Int: 0
            |   `-- Body:
            |       `-- BlockStmt, line: 42
            |           |-- ExprStmt line: 43
            |           |   `-- FuncCallExpr putint
            |           |       `-- Arg0 = LeftValueExpr b[Dim0][Dim1]
            |           |           |-- Dim0 = Const Int: 6
            |           |           `-- Dim1 = LeftValueExpr ret
            |           |-- ExprStmt line: 43
            |           |   `-- FuncCallExpr putch
            |           |       `-- Arg0 = Const Int: 32
            |           `-- ExprStmt line: 44
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr ret
            |                   `-- BinaryExpr Sub
            |                       |-- LeftValueExpr ret
            |                       `-- Const Int: 1
            |-- ExprStmt line: 46
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            `-- ReturnStmt, line: 47
                `-- Const Int: 0
