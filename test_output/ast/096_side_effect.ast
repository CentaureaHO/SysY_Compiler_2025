ASTree
|-- VarDecl, BaseType: Int, line: 2
|   |-- DefNode
|   |   `-- Var: LeftValueExpr a
|   |   `-- Init: InitSingle
|   |       `-- UnaryExpr Sub
|   |           `-- Const Int: 1
|   `-- DefNode
|       `-- Var: LeftValueExpr b
|       `-- Init: InitSingle
|           `-- Const Int: 1
|-- FuncDecl @Name: inc_a -> @RetType: Int, line: 4
|   |-- Params:
|   |       None
|   `-- Body:
|       `-- BlockStmt, line: 5
|           |-- VarDecl, BaseType: Int, line: 6
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr b
|           |       `-- Init: InitSingle
|           |           `-- LeftValueExpr a
|           |-- ExprStmt line: 7
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr b
|           |       `-- BinaryExpr Add
|           |           |-- LeftValueExpr b
|           |           `-- Const Int: 1
|           |-- ExprStmt line: 8
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr a
|           |       `-- LeftValueExpr b
|           `-- ReturnStmt, line: 9
|               `-- LeftValueExpr a
`-- FuncDecl @Name: main -> @RetType: Int, line: 12
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 13
            |-- VarDecl, BaseType: Int, line: 14
            |   `-- DefNode
            |       `-- Var: LeftValueExpr k
            |       `-- Init: InitSingle
            |           `-- Const Int: 5
            |-- WhileStmt, line: 15
            |   |-- Cond:
            |   |   `-- BinaryExpr Ge
            |   |       |-- LeftValueExpr k
            |   |       `-- Const Int: 0
            |   `-- Body:
            |       `-- BlockStmt, line: 15
            |           |-- IfStmt, line: 16
            |           |   |-- Condition:
            |           |   |   `-- BinaryExpr And
            |           |   |       |-- BinaryExpr And
            |           |   |       |   |-- FuncCallExpr inc_a
            |           |   |       |   |   `-- No args
            |           |   |       |   `-- FuncCallExpr inc_a
            |           |   |       |       `-- No args
            |           |   |       `-- FuncCallExpr inc_a
            |           |   |           `-- No args
            |           |   |-- Thenbody:
            |           |   |   `-- BlockStmt, line: 16
            |           |   |       |-- ExprStmt line: 17
            |           |   |       |   `-- FuncCallExpr putint
            |           |   |       |       `-- Arg0 = LeftValueExpr a
            |           |   |       |-- ExprStmt line: 17
            |           |   |       |   `-- FuncCallExpr putch
            |           |   |       |       `-- Arg0 = Const Int: 32
            |           |   |       |-- ExprStmt line: 17
            |           |   |       |   `-- FuncCallExpr putint
            |           |   |       |       `-- Arg0 = LeftValueExpr b
            |           |   |       `-- ExprStmt line: 17
            |           |   |           `-- FuncCallExpr putch
            |           |   |               `-- Arg0 = Const Int: 10
            |           |   `-- Elsebody:
            |           |       `-- None
            |           |-- IfStmt, line: 19
            |           |   |-- Condition:
            |           |   |   `-- BinaryExpr Or
            |           |   |       |-- BinaryExpr Lt
            |           |   |       |   |-- FuncCallExpr inc_a
            |           |   |       |   |   `-- No args
            |           |   |       |   `-- Const Int: 14
            |           |   |       `-- BinaryExpr And
            |           |   |           |-- FuncCallExpr inc_a
            |           |   |           |   `-- No args
            |           |   |           `-- BinaryExpr Add
            |           |   |               |-- BinaryExpr Sub
            |           |   |               |   |-- FuncCallExpr inc_a
            |           |   |               |   |   `-- No args
            |           |   |               |   `-- FuncCallExpr inc_a
            |           |   |               |       `-- No args
            |           |   |               `-- Const Int: 1
            |           |   |-- Thenbody:
            |           |   |   `-- BlockStmt, line: 19
            |           |   |       |-- ExprStmt line: 20
            |           |   |       |   `-- FuncCallExpr putint
            |           |   |       |       `-- Arg0 = LeftValueExpr a
            |           |   |       |-- ExprStmt line: 20
            |           |   |       |   `-- FuncCallExpr putch
            |           |   |       |       `-- Arg0 = Const Int: 10
            |           |   |       `-- ExprStmt line: 21
            |           |   |           `-- BinaryExpr Assign
            |           |   |               |-- LeftValueExpr b
            |           |   |               `-- BinaryExpr Mul
            |           |   |                   |-- LeftValueExpr b
            |           |   |                   `-- Const Int: 2
            |           |   `-- Elsebody:
            |           |       `-- BlockStmt, line: 22
            |           |           `-- ExprStmt line: 23
            |           |               `-- FuncCallExpr inc_a
            |           |                   `-- No args
            |           `-- ExprStmt line: 25
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr k
            |                   `-- BinaryExpr Sub
            |                       |-- LeftValueExpr k
            |                       `-- Const Int: 1
            |-- ExprStmt line: 27
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr a
            |-- ExprStmt line: 27
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 32
            |-- ExprStmt line: 27
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr b
            |-- ExprStmt line: 27
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            `-- ReturnStmt, line: 28
                `-- LeftValueExpr a
