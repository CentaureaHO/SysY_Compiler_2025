ASTree
`-- FuncDecl @Name: main -> @RetType: Int, line: 1
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 1
            |-- VarDecl, BaseType: const Int, line: 2
            |   `-- DefNode
            |       `-- Var: LeftValueExpr a[Dim0][Dim1]
            |           |-- Dim0 = Const Int: 4
            |           `-- Dim1 = Const Int: 2
            |       `-- Init: InitMulti
            |           |-- InitMulti
            |           |   |-- InitSingle
            |           |   |   `-- Const Int: 1
            |           |   `-- InitSingle
            |           |       `-- Const Int: 2
            |           |-- InitMulti
            |           |   |-- InitSingle
            |           |   |   `-- Const Int: 3
            |           |   `-- InitSingle
            |           |       `-- Const Int: 4
            |           |-- InitMulti
            |           `-- InitSingle
            |               `-- Const Int: 7
            |-- VarDecl, BaseType: const Int, line: 3
            |   `-- DefNode
            |       `-- Var: LeftValueExpr N
            |       `-- Init: InitSingle
            |           `-- Const Int: 3
            |-- VarDecl, BaseType: Int, line: 4
            |   `-- DefNode
            |       `-- Var: LeftValueExpr b[Dim0][Dim1]
            |           |-- Dim0 = Const Int: 4
            |           `-- Dim1 = Const Int: 2
            |       `-- Init: InitMulti
            |-- VarDecl, BaseType: Int, line: 5
            |   `-- DefNode
            |       `-- Var: LeftValueExpr c[Dim0][Dim1]
            |           |-- Dim0 = Const Int: 4
            |           `-- Dim1 = Const Int: 2
            |       `-- Init: InitMulti
            |           |-- InitSingle
            |           |   `-- Const Int: 1
            |           |-- InitSingle
            |           |   `-- Const Int: 2
            |           |-- InitSingle
            |           |   `-- Const Int: 3
            |           |-- InitSingle
            |           |   `-- Const Int: 4
            |           |-- InitSingle
            |           |   `-- Const Int: 5
            |           |-- InitSingle
            |           |   `-- Const Int: 6
            |           |-- InitSingle
            |           |   `-- Const Int: 7
            |           `-- InitSingle
            |               `-- Const Int: 8
            |-- VarDecl, BaseType: Int, line: 6
            |   `-- DefNode
            |       `-- Var: LeftValueExpr d[Dim0][Dim1]
            |           |-- Dim0 = BinaryExpr Add
            |           |   Dim0 = |-- LeftValueExpr N
            |           |   Dim0 = `-- Const Int: 1
            |           `-- Dim1 = Const Int: 2
            |       `-- Init: InitMulti
            |           |-- InitSingle
            |           |   `-- Const Int: 1
            |           |-- InitSingle
            |           |   `-- Const Int: 2
            |           |-- InitMulti
            |           |   `-- InitSingle
            |           |       `-- Const Int: 3
            |           |-- InitMulti
            |           |   `-- InitSingle
            |           |       `-- Const Int: 5
            |           |-- InitSingle
            |           |   `-- LeftValueExpr a[Dim0][Dim1]
            |           |       |-- Dim0 = Const Int: 3
            |           |       `-- Dim1 = Const Int: 0
            |           `-- InitSingle
            |               `-- Const Int: 8
            |-- VarDecl, BaseType: Int, line: 7
            |   `-- DefNode
            |       `-- Var: LeftValueExpr e[Dim0][Dim1][Dim2]
            |           |-- Dim0 = Const Int: 4
            |           |-- Dim1 = Const Int: 2
            |           `-- Dim2 = Const Int: 1
            |       `-- Init: InitMulti
            |           |-- InitMulti
            |           |   |-- InitSingle
            |           |   |   `-- LeftValueExpr d[Dim0][Dim1]
            |           |   |       |-- Dim0 = Const Int: 2
            |           |   |       `-- Dim1 = Const Int: 1
            |           |   `-- InitMulti
            |           |       `-- InitSingle
            |           |           `-- LeftValueExpr c[Dim0][Dim1]
            |           |               |-- Dim0 = Const Int: 2
            |           |               `-- Dim1 = Const Int: 1
            |           |-- InitMulti
            |           |   |-- InitSingle
            |           |   |   `-- Const Int: 3
            |           |   `-- InitSingle
            |           |       `-- Const Int: 4
            |           |-- InitMulti
            |           |   |-- InitSingle
            |           |   |   `-- Const Int: 5
            |           |   `-- InitSingle
            |           |       `-- Const Int: 6
            |           `-- InitMulti
            |               |-- InitSingle
            |               |   `-- Const Int: 7
            |               `-- InitSingle
            |                   `-- Const Int: 8
            `-- ReturnStmt, line: 8
                `-- BinaryExpr Add
                    |-- BinaryExpr Add
                    |   |-- BinaryExpr Add
                    |   |   |-- LeftValueExpr e[Dim0][Dim1][Dim2]
                    |   |   |   |-- Dim0 = Const Int: 3
                    |   |   |   |-- Dim1 = Const Int: 1
                    |   |   |   `-- Dim2 = Const Int: 0
                    |   |   `-- LeftValueExpr e[Dim0][Dim1][Dim2]
                    |   |       |-- Dim0 = Const Int: 0
                    |   |       |-- Dim1 = Const Int: 0
                    |   |       `-- Dim2 = Const Int: 0
                    |   `-- LeftValueExpr e[Dim0][Dim1][Dim2]
                    |       |-- Dim0 = Const Int: 0
                    |       |-- Dim1 = Const Int: 1
                    |       `-- Dim2 = Const Int: 0
                    `-- LeftValueExpr d[Dim0][Dim1]
                        |-- Dim0 = Const Int: 3
                        `-- Dim1 = Const Int: 0
