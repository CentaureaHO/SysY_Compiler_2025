ASTree
|-- FuncDecl @Name: concat -> @RetType: Int, line: 2
|   |-- Params:
|   |   |-- Int a0[Dim0]
|   |   |   `-- Dim0 = Const Int: -1
|   |   |-- Int b0[Dim0]
|   |   |   `-- Dim0 = Const Int: -1
|   |   `-- Int c0[Dim0]
|   |   |   `-- Dim0 = Const Int: -1
|   `-- Body:
|       `-- BlockStmt, line: 3
|           |-- VarDecl, BaseType: Int, line: 4
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr i
|           |       `-- Init: no initializer
|           |-- ExprStmt line: 5
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr i
|           |       `-- Const Int: 0
|           |-- WhileStmt, line: 6
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- Const Int: 3
|           |   `-- Body:
|           |       `-- BlockStmt, line: 7
|           |           |-- ExprStmt line: 8
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr c0[Dim0]
|           |           |       |   `-- Dim0 = LeftValueExpr i
|           |           |       `-- LeftValueExpr a0[Dim0]
|           |           |           `-- Dim0 = LeftValueExpr i
|           |           `-- ExprStmt line: 10
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           |-- VarDecl, BaseType: Int, line: 12
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr j
|           |       `-- Init: no initializer
|           |-- ExprStmt line: 13
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr j
|           |       `-- Const Int: 0
|           |-- WhileStmt, line: 14
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr j
|           |   |       `-- Const Int: 3
|           |   `-- Body:
|           |       `-- BlockStmt, line: 15
|           |           |-- ExprStmt line: 16
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr c0[Dim0]
|           |           |       |   `-- Dim0 = LeftValueExpr i
|           |           |       `-- LeftValueExpr b0[Dim0]
|           |           |           `-- Dim0 = LeftValueExpr j
|           |           |-- ExprStmt line: 17
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr i
|           |           |       `-- BinaryExpr Add
|           |           |           |-- LeftValueExpr i
|           |           |           `-- Const Int: 1
|           |           `-- ExprStmt line: 18
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr j
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr j
|           |                       `-- Const Int: 1
|           `-- ReturnStmt, line: 21
|               `-- Const Int: 0
`-- FuncDecl @Name: main -> @RetType: Int, line: 25
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 26
            |-- VarDecl, BaseType: Int, line: 27
            |   `-- DefNode
            |       |-- Var: LeftValueExpr a0[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 3
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 27
            |   `-- DefNode
            |       |-- Var: LeftValueExpr a1[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 3
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 27
            |   `-- DefNode
            |       |-- Var: LeftValueExpr a2[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 3
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 27
            |   `-- DefNode
            |       |-- Var: LeftValueExpr b0[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 3
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 27
            |   `-- DefNode
            |       |-- Var: LeftValueExpr b1[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 3
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 27
            |   `-- DefNode
            |       |-- Var: LeftValueExpr b2[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 3
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 27
            |   `-- DefNode
            |       |-- Var: LeftValueExpr c0[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 6
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 27
            |   `-- DefNode
            |       |-- Var: LeftValueExpr c1[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 3
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 27
            |   `-- DefNode
            |       |-- Var: LeftValueExpr c2[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 3
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 28
            |   `-- DefNode
            |       |-- Var: LeftValueExpr i
            |       `-- Init: no initializer
            |-- ExprStmt line: 29
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr i
            |       `-- Const Int: 0
            |-- WhileStmt, line: 30
            |   |-- Cond:
            |   |   `-- BinaryExpr Lt
            |   |       |-- LeftValueExpr i
            |   |       `-- Const Int: 3
            |   `-- Body:
            |       `-- BlockStmt, line: 31
            |           |-- ExprStmt line: 32
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr a0[Dim0]
            |           |       |   `-- Dim0 = LeftValueExpr i
            |           |       `-- LeftValueExpr i
            |           |-- ExprStmt line: 33
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr a1[Dim0]
            |           |       |   `-- Dim0 = LeftValueExpr i
            |           |       `-- LeftValueExpr i
            |           |-- ExprStmt line: 34
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr a2[Dim0]
            |           |       |   `-- Dim0 = LeftValueExpr i
            |           |       `-- LeftValueExpr i
            |           |-- ExprStmt line: 35
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr b0[Dim0]
            |           |       |   `-- Dim0 = LeftValueExpr i
            |           |       `-- LeftValueExpr i
            |           |-- ExprStmt line: 36
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr b1[Dim0]
            |           |       |   `-- Dim0 = LeftValueExpr i
            |           |       `-- LeftValueExpr i
            |           |-- ExprStmt line: 37
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr b2[Dim0]
            |           |       |   `-- Dim0 = LeftValueExpr i
            |           |       `-- LeftValueExpr i
            |           `-- ExprStmt line: 38
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr i
            |                   `-- BinaryExpr Add
            |                       |-- LeftValueExpr i
            |                       `-- Const Int: 1
            |-- ExprStmt line: 40
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr i
            |       `-- FuncCallExpr concat
            |           |-- Arg0 = LeftValueExpr a0
            |           |-- Arg1 = LeftValueExpr b0
            |           `-- Arg2 = LeftValueExpr c0
            |-- VarDecl, BaseType: Int, line: 41
            |   `-- DefNode
            |       |-- Var: LeftValueExpr x
            |       `-- Init: no initializer
            |-- WhileStmt, line: 42
            |   |-- Cond:
            |   |   `-- BinaryExpr Lt
            |   |       |-- LeftValueExpr i
            |   |       `-- Const Int: 6
            |   `-- Body:
            |       `-- BlockStmt, line: 43
            |           |-- ExprStmt line: 44
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr x
            |           |       `-- LeftValueExpr c0[Dim0]
            |           |           `-- Dim0 = LeftValueExpr i
            |           |-- ExprStmt line: 45
            |           |   `-- FuncCallExpr putint
            |           |       `-- Arg0 = LeftValueExpr x
            |           `-- ExprStmt line: 46
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr i
            |                   `-- BinaryExpr Add
            |                       |-- LeftValueExpr i
            |                       `-- Const Int: 1
            |-- ExprStmt line: 48
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr x
            |       `-- Const Int: 10
            |-- ExprStmt line: 49
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = LeftValueExpr x
            `-- ReturnStmt, line: 51
                `-- Const Int: 0
