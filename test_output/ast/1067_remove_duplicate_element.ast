ASTree
|-- FuncDecl @Name: removeElement -> @RetType: Int, line: 1
|   |-- Params:
|   |   |-- Int nums[Dim0]
|   |   |   `-- Dim0 = Const Int: -1
|   |   |-- Int n
|   |   `-- Int val
|   `-- Body:
|       `-- BlockStmt, line: 1
|           |-- VarDecl, BaseType: Int, line: 2
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr i
|           |       `-- Init: no initializer
|           |-- ExprStmt line: 3
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr i
|           |       `-- Const Int: 0
|           |-- WhileStmt, line: 4
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- LeftValueExpr n
|           |   `-- Body:
|           |       `-- BlockStmt, line: 4
|           |           `-- IfStmt, line: 5
|           |               |-- Condition:
|           |               |   `-- BinaryExpr Eq
|           |               |       |-- LeftValueExpr nums[Dim0]
|           |               |       |   `-- Dim0 = LeftValueExpr i
|           |               |       `-- LeftValueExpr val
|           |               |-- Thenbody:
|           |               |   `-- BlockStmt, line: 5
|           |               |       |-- ExprStmt line: 6
|           |               |       |   `-- BinaryExpr Assign
|           |               |       |       |-- LeftValueExpr nums[Dim0]
|           |               |       |       |   `-- Dim0 = LeftValueExpr i
|           |               |       |       `-- LeftValueExpr nums[Dim0]
|           |               |       |           `-- Dim0 = BinaryExpr Sub
|           |               |       |               |-- LeftValueExpr n
|           |               |       |               `-- Const Int: 1
|           |               |       `-- ExprStmt line: 7
|           |               |           `-- BinaryExpr Assign
|           |               |               |-- LeftValueExpr n
|           |               |               `-- BinaryExpr Sub
|           |               |                   |-- LeftValueExpr n
|           |               |                   `-- Const Int: 1
|           |               `-- Elsebody:
|           |                   `-- BlockStmt, line: 8
|           |                       `-- ExprStmt line: 9
|           |                           `-- BinaryExpr Assign
|           |                               |-- LeftValueExpr i
|           |                               `-- BinaryExpr Add
|           |                                   |-- LeftValueExpr i
|           |                                   `-- Const Int: 1
|           `-- ReturnStmt, line: 12
|               `-- LeftValueExpr n
`-- FuncDecl @Name: main -> @RetType: Int, line: 14
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 14
            |-- VarDecl, BaseType: Int, line: 15
            |   `-- DefNode
            |       |-- Var: LeftValueExpr res
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 16
            |   `-- DefNode
            |       |-- Var: LeftValueExpr a[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 10
            |       `-- Init: no initializer
            |-- ExprStmt line: 17
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 0
            |       `-- Const Int: 3
            |-- ExprStmt line: 17
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 1
            |       `-- Const Int: 3
            |-- ExprStmt line: 17
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 2
            |       `-- Const Int: 9
            |-- ExprStmt line: 17
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 3
            |       `-- Const Int: 0
            |-- ExprStmt line: 17
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 4
            |       `-- Const Int: 0
            |-- ExprStmt line: 18
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 5
            |       `-- Const Int: 1
            |-- ExprStmt line: 18
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 6
            |       `-- Const Int: 1
            |-- ExprStmt line: 18
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 7
            |       `-- Const Int: 5
            |-- ExprStmt line: 18
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 8
            |       `-- Const Int: 7
            |-- ExprStmt line: 18
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 9
            |       `-- Const Int: 8
            |-- ExprStmt line: 19
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr res
            |       `-- Const Int: 10
            |-- VarDecl, BaseType: Int, line: 20
            |   `-- DefNode
            |       |-- Var: LeftValueExpr val
            |       `-- Init: no initializer
            |-- ExprStmt line: 21
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr val
            |       `-- Const Int: 3
            |-- ExprStmt line: 22
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr res
            |       `-- FuncCallExpr removeElement
            |           |-- Arg0 = LeftValueExpr a
            |           |-- Arg1 = LeftValueExpr res
            |           `-- Arg2 = LeftValueExpr val
            `-- ReturnStmt, line: 23
                `-- LeftValueExpr res
