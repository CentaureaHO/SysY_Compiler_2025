ASTree
|-- FuncDecl @Name: uniquePaths -> @RetType: Int, line: 1
|   |-- Params:
|   |   |-- Int m
|   |   `-- Int n
|   `-- Body:
|       `-- BlockStmt, line: 1
|           |-- IfStmt, line: 2
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Or
|           |   |       |-- BinaryExpr Eq
|           |   |       |   |-- LeftValueExpr m
|           |   |       |   `-- Const Int: 1
|           |   |       `-- BinaryExpr Eq
|           |   |           |-- LeftValueExpr n
|           |   |           `-- Const Int: 1
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 3
|           |   |       `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           |-- VarDecl, BaseType: Int, line: 5
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr dp[Dim0]
|           |       |   Var: `-- Dim0 = Const Int: 9
|           |       `-- Init: no initializer
|           |-- VarDecl, BaseType: Int, line: 6
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr i
|           |       `-- Init: no initializer
|           |-- VarDecl, BaseType: Int, line: 7
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr j
|           |       `-- Init: no initializer
|           |-- ExprStmt line: 8
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr i
|           |       `-- Const Int: 0
|           |-- WhileStmt, line: 9
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- LeftValueExpr m
|           |   `-- Body:
|           |       `-- BlockStmt, line: 9
|           |           |-- ExprStmt line: 10
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr dp[Dim0]
|           |           |       |   `-- Dim0 = BinaryExpr Sub
|           |           |       |       |-- BinaryExpr Add
|           |           |       |       |   |-- BinaryExpr Mul
|           |           |       |       |   |   |-- LeftValueExpr i
|           |           |       |       |   |   `-- Const Int: 3
|           |           |       |       |   `-- LeftValueExpr n
|           |           |       |       `-- Const Int: 1
|           |           |       `-- Const Int: 1
|           |           `-- ExprStmt line: 11
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           |-- ExprStmt line: 13
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr i
|           |       `-- Const Int: 0
|           |-- WhileStmt, line: 14
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- LeftValueExpr n
|           |   `-- Body:
|           |       `-- BlockStmt, line: 14
|           |           |-- ExprStmt line: 15
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr dp[Dim0]
|           |           |       |   `-- Dim0 = BinaryExpr Add
|           |           |       |       |-- BinaryExpr Mul
|           |           |       |       |   |-- BinaryExpr Sub
|           |           |       |       |   |   |-- LeftValueExpr m
|           |           |       |       |   |   `-- Const Int: 1
|           |           |       |       |   `-- Const Int: 3
|           |           |       |       `-- LeftValueExpr i
|           |           |       `-- Const Int: 1
|           |           `-- ExprStmt line: 16
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           |-- ExprStmt line: 18
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr i
|           |       `-- BinaryExpr Sub
|           |           |-- LeftValueExpr m
|           |           `-- Const Int: 2
|           |-- WhileStmt, line: 19
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Gt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- UnaryExpr Sub
|           |   |           `-- Const Int: 1
|           |   `-- Body:
|           |       `-- BlockStmt, line: 19
|           |           |-- ExprStmt line: 20
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr j
|           |           |       `-- BinaryExpr Sub
|           |           |           |-- LeftValueExpr n
|           |           |           `-- Const Int: 2
|           |           |-- WhileStmt, line: 21
|           |           |   |-- Cond:
|           |           |   |   `-- BinaryExpr Gt
|           |           |   |       |-- LeftValueExpr j
|           |           |   |       `-- UnaryExpr Sub
|           |           |   |           `-- Const Int: 1
|           |           |   `-- Body:
|           |           |       `-- BlockStmt, line: 21
|           |           |           |-- ExprStmt line: 22
|           |           |           |   `-- BinaryExpr Assign
|           |           |           |       |-- LeftValueExpr dp[Dim0]
|           |           |           |       |   `-- Dim0 = BinaryExpr Add
|           |           |           |       |       |-- BinaryExpr Mul
|           |           |           |       |       |   |-- LeftValueExpr i
|           |           |           |       |       |   `-- Const Int: 3
|           |           |           |       |       `-- LeftValueExpr j
|           |           |           |       `-- BinaryExpr Add
|           |           |           |           |-- LeftValueExpr dp[Dim0]
|           |           |           |           |   `-- Dim0 = BinaryExpr Add
|           |           |           |           |       |-- BinaryExpr Mul
|           |           |           |           |       |   |-- BinaryExpr Add
|           |           |           |           |       |   |   |-- LeftValueExpr i
|           |           |           |           |       |   |   `-- Const Int: 1
|           |           |           |           |       |   `-- Const Int: 3
|           |           |           |           |       `-- LeftValueExpr j
|           |           |           |           `-- LeftValueExpr dp[Dim0]
|           |           |           |               `-- Dim0 = BinaryExpr Add
|           |           |           |                   |-- BinaryExpr Add
|           |           |           |                   |   |-- BinaryExpr Mul
|           |           |           |                   |   |   |-- LeftValueExpr i
|           |           |           |                   |   |   `-- Const Int: 3
|           |           |           |                   |   `-- LeftValueExpr j
|           |           |           |                   `-- Const Int: 1
|           |           |           `-- ExprStmt line: 23
|           |           |               `-- BinaryExpr Assign
|           |           |                   |-- LeftValueExpr j
|           |           |                   `-- BinaryExpr Sub
|           |           |                       |-- LeftValueExpr j
|           |           |                       `-- Const Int: 1
|           |           `-- ExprStmt line: 25
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Sub
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           `-- ReturnStmt, line: 27
|               `-- LeftValueExpr dp[Dim0]
|                   `-- Dim0 = Const Int: 0
`-- FuncDecl @Name: main -> @RetType: Int, line: 29
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 29
            |-- VarDecl, BaseType: Int, line: 30
            |   `-- DefNode
            |       |-- Var: LeftValueExpr res
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 31
            |   `-- DefNode
            |       |-- Var: LeftValueExpr n
            |       `-- Init: no initializer
            |-- ExprStmt line: 32
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr n
            |       `-- Const Int: 3
            |-- ExprStmt line: 33
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr res
            |       `-- FuncCallExpr uniquePaths
            |           |-- Arg0 = LeftValueExpr n
            |           `-- Arg1 = LeftValueExpr n
            `-- ReturnStmt, line: 34
                `-- LeftValueExpr res
