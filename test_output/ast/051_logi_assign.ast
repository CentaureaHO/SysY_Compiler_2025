ASTree
|-- VarDecl, BaseType: Int, line: 1
|   `-- DefNode
|       |-- Var: LeftValueExpr a
|       `-- Init: no initializer
|-- VarDecl, BaseType: Int, line: 2
|   `-- DefNode
|       |-- Var: LeftValueExpr b
|       `-- Init: no initializer
`-- FuncDecl @Name: main -> @RetType: Int, line: 3
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 4
            |-- ExprStmt line: 5
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a
            |       `-- FuncCallExpr getint
            |           `-- No args
            |-- ExprStmt line: 6
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr b
            |       `-- FuncCallExpr getint
            |           `-- No args
            |-- VarDecl, BaseType: Int, line: 7
            |   `-- DefNode
            |       |-- Var: LeftValueExpr c
            |       `-- Init: no initializer
            |-- IfStmt, line: 8
            |   |-- Condition:
            |   |   `-- BinaryExpr And
            |   |       |-- BinaryExpr Eq
            |   |       |   |-- LeftValueExpr a
            |   |       |   `-- LeftValueExpr b
            |   |       `-- BinaryExpr Neq
            |   |           |-- LeftValueExpr a
            |   |           `-- Const Int: 3
            |   |-- Thenbody:
            |   |   `-- BlockStmt, line: 8
            |   |       `-- ExprStmt line: 9
            |   |           `-- BinaryExpr Assign
            |   |               |-- LeftValueExpr c
            |   |               `-- Const Int: 1
            |   `-- Elsebody:
            |       `-- BlockStmt, line: 11
            |           `-- ExprStmt line: 12
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr c
            |                   `-- Const Int: 0
            `-- ReturnStmt, line: 14
                `-- LeftValueExpr c
