ASTree
`-- FuncDecl @Name: main -> @RetType: Int, line: 2
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 3
            |-- VarDecl, BaseType: Int, line: 5
            |   `-- DefNode
            |       |-- Var: LeftValueExpr i
            |       `-- Init: no initializer
            |-- VarDecl, BaseType: Int, line: 6
            |   `-- DefNode
            |       |-- Var: LeftValueExpr sum
            |       `-- Init: no initializer
            |-- ExprStmt line: 7
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr sum
            |       `-- Const Int: 0
            |-- ExprStmt line: 10
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr i
            |       `-- Const Int: 0
            |-- WhileStmt, line: 11
            |   |-- Cond:
            |   |   `-- BinaryExpr Lt
            |   |       |-- LeftValueExpr i
            |   |       `-- Const Int: 21
            |   `-- Body:
            |       `-- BlockStmt, line: 12
            |           |-- ExprStmt line: 13
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr sum
            |           |       `-- BinaryExpr Add
            |           |           |-- LeftValueExpr sum
            |           |           `-- LeftValueExpr i
            |           `-- ExprStmt line: 14
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr i
            |                   `-- BinaryExpr Add
            |                       |-- LeftValueExpr i
            |                       `-- Const Int: 1
            |-- ExprStmt line: 17
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr sum
            `-- ReturnStmt, line: 19
                `-- Const Int: 0
