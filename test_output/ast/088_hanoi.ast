ASTree
|-- FuncDecl @Name: move -> @RetType: Void, line: 2
|   |-- Params:
|   |   |-- Int x
|   |   `-- Int y
|   `-- Body:
|       `-- BlockStmt, line: 3
|           |-- ExprStmt line: 4
|           |   `-- FuncCallExpr putint
|           |       `-- Arg0 = LeftValueExpr x
|           |-- ExprStmt line: 4
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 32
|           |-- ExprStmt line: 4
|           |   `-- FuncCallExpr putint
|           |       `-- Arg0 = LeftValueExpr y
|           |-- ExprStmt line: 4
|           |   `-- FuncCallExpr putch
|           |       `-- Arg0 = Const Int: 44
|           `-- ExprStmt line: 4
|               `-- FuncCallExpr putch
|                   `-- Arg0 = Const Int: 32
|-- FuncDecl @Name: hanoi -> @RetType: Void, line: 7
|   |-- Params:
|   |   |-- Int n
|   |   |-- Int one
|   |   |-- Int two
|   |   `-- Int three
|   `-- Body:
|       `-- BlockStmt, line: 8
|           `-- IfStmt, line: 9
|               |-- Condition:
|               |   `-- BinaryExpr Eq
|               |       |-- LeftValueExpr n
|               |       `-- Const Int: 1
|               |-- Thenbody:
|               |   `-- ExprStmt line: 10
|               |       `-- FuncCallExpr move
|               |           |-- Arg0 = LeftValueExpr one
|               |           `-- Arg1 = LeftValueExpr three
|               `-- Elsebody:
|                   `-- BlockStmt, line: 11
|                       |-- ExprStmt line: 12
|                       |   `-- FuncCallExpr hanoi
|                       |       |-- Arg0 = BinaryExpr Sub
|                       |       |   Arg0 = |-- LeftValueExpr n
|                       |       |   Arg0 = `-- Const Int: 1
|                       |       |-- Arg1 = LeftValueExpr one
|                       |       |-- Arg2 = LeftValueExpr three
|                       |       `-- Arg3 = LeftValueExpr two
|                       |-- ExprStmt line: 13
|                       |   `-- FuncCallExpr move
|                       |       |-- Arg0 = LeftValueExpr one
|                       |       `-- Arg1 = LeftValueExpr three
|                       `-- ExprStmt line: 14
|                           `-- FuncCallExpr hanoi
|                               |-- Arg0 = BinaryExpr Sub
|                               |   Arg0 = |-- LeftValueExpr n
|                               |   Arg0 = `-- Const Int: 1
|                               |-- Arg1 = LeftValueExpr two
|                               |-- Arg2 = LeftValueExpr one
|                               `-- Arg3 = LeftValueExpr three
`-- FuncDecl @Name: main -> @RetType: Int, line: 18
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 19
            |-- VarDecl, BaseType: Int, line: 20
            |   `-- DefNode
            |       `-- Var: LeftValueExpr n
            |       `-- Init: InitSingle
            |           `-- FuncCallExpr getint
            |               `-- No args
            |-- WhileStmt, line: 21
            |   |-- Cond:
            |   |   `-- BinaryExpr Gt
            |   |       |-- LeftValueExpr n
            |   |       `-- Const Int: 0
            |   `-- Body:
            |       `-- BlockStmt, line: 21
            |           |-- ExprStmt line: 22
            |           |   `-- FuncCallExpr hanoi
            |           |       |-- Arg0 = FuncCallExpr getint
            |           |       |   Arg0 = `-- No args
            |           |       |-- Arg1 = Const Int: 1
            |           |       |-- Arg2 = Const Int: 2
            |           |       `-- Arg3 = Const Int: 3
            |           |-- ExprStmt line: 23
            |           |   `-- FuncCallExpr putch
            |           |       `-- Arg0 = Const Int: 10
            |           `-- ExprStmt line: 24
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr n
            |                   `-- BinaryExpr Sub
            |                       |-- LeftValueExpr n
            |                       `-- Const Int: 1
            `-- ReturnStmt, line: 26
                `-- Const Int: 0
