ASTree
|-- VarDecl, BaseType: const Int, line: 1
|   `-- DefNode
|       `-- Var: LeftValueExpr maxn
|       `-- Init: InitSingle
|           `-- Const Int: 18
|-- VarDecl, BaseType: const Int, line: 2
|   `-- DefNode
|       `-- Var: LeftValueExpr mod
|       `-- Init: InitSingle
|           `-- Const Int: 1000000007
|-- VarDecl, BaseType: Int, line: 3
|   `-- DefNode
|       |-- Var: LeftValueExpr dp[Dim0][Dim1][Dim2][Dim3][Dim4][Dim5]
|       |   Var: |-- Dim0 = LeftValueExpr maxn
|       |   Var: |-- Dim1 = LeftValueExpr maxn
|       |   Var: |-- Dim2 = LeftValueExpr maxn
|       |   Var: |-- Dim3 = LeftValueExpr maxn
|       |   Var: |-- Dim4 = LeftValueExpr maxn
|       |   Var: `-- Dim5 = Const Int: 7
|       `-- Init: no initializer
|-- VarDecl, BaseType: Int, line: 4
|   `-- DefNode
|       |-- Var: LeftValueExpr list[Dim0]
|       |   Var: `-- Dim0 = Const Int: 200
|       `-- Init: no initializer
|-- FuncDecl @Name: equal -> @RetType: Int, line: 6
|   |-- Params:
|   |   |-- Int a
|   |   `-- Int b
|   `-- Body:
|       `-- BlockStmt, line: 6
|           |-- IfStmt, line: 7
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- LeftValueExpr a
|           |   |       `-- LeftValueExpr b
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 8
|           |   |       `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           `-- ReturnStmt, line: 9
|               `-- Const Int: 0
|-- FuncDecl @Name: dfs -> @RetType: Int, line: 12
|   |-- Params:
|   |   |-- Int a
|   |   |-- Int b
|   |   |-- Int c
|   |   |-- Int d
|   |   |-- Int e
|   |   `-- Int last
|   `-- Body:
|       `-- BlockStmt, line: 12
|           |-- IfStmt, line: 13
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Neq
|           |   |       |-- LeftValueExpr dp[Dim0][Dim1][Dim2][Dim3][Dim4][Dim5]
|           |   |       |   |-- Dim0 = LeftValueExpr a
|           |   |       |   |-- Dim1 = LeftValueExpr b
|           |   |       |   |-- Dim2 = LeftValueExpr c
|           |   |       |   |-- Dim3 = LeftValueExpr d
|           |   |       |   |-- Dim4 = LeftValueExpr e
|           |   |       |   `-- Dim5 = LeftValueExpr last
|           |   |       `-- UnaryExpr Sub
|           |   |           `-- Const Int: 1
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 14
|           |   |       `-- LeftValueExpr dp[Dim0][Dim1][Dim2][Dim3][Dim4][Dim5]
|           |   |           |-- Dim0 = LeftValueExpr a
|           |   |           |-- Dim1 = LeftValueExpr b
|           |   |           |-- Dim2 = LeftValueExpr c
|           |   |           |-- Dim3 = LeftValueExpr d
|           |   |           |-- Dim4 = LeftValueExpr e
|           |   |           `-- Dim5 = LeftValueExpr last
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 15
|           |   |-- Condition:
|           |   |   `-- BinaryExpr Eq
|           |   |       |-- BinaryExpr Add
|           |   |       |   |-- BinaryExpr Add
|           |   |       |   |   |-- BinaryExpr Add
|           |   |       |   |   |   |-- BinaryExpr Add
|           |   |       |   |   |   |   |-- LeftValueExpr a
|           |   |       |   |   |   |   `-- LeftValueExpr b
|           |   |       |   |   |   `-- LeftValueExpr c
|           |   |       |   |   `-- LeftValueExpr d
|           |   |       |   `-- LeftValueExpr e
|           |   |       `-- Const Int: 0
|           |   |-- Thenbody:
|           |   |   `-- ReturnStmt, line: 16
|           |   |       `-- Const Int: 1
|           |   `-- Elsebody:
|           |       `-- None
|           |-- VarDecl, BaseType: Int, line: 17
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr ans
|           |       `-- Init: InitSingle
|           |           `-- Const Int: 0
|           |-- IfStmt, line: 18
|           |   |-- Condition:
|           |   |   `-- LeftValueExpr a
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 18
|           |   |       `-- BinaryExpr Assign
|           |   |           |-- LeftValueExpr ans
|           |   |           `-- BinaryExpr Mod
|           |   |               |-- BinaryExpr Add
|           |   |               |   |-- LeftValueExpr ans
|           |   |               |   `-- BinaryExpr Mul
|           |   |               |       |-- BinaryExpr Sub
|           |   |               |       |   |-- LeftValueExpr a
|           |   |               |       |   `-- FuncCallExpr equal
|           |   |               |       |       |-- Arg0 = LeftValueExpr last
|           |   |               |       |       `-- Arg1 = Const Int: 2
|           |   |               |       `-- FuncCallExpr dfs
|           |   |               |           |-- Arg0 = BinaryExpr Sub
|           |   |               |           |   Arg0 = |-- LeftValueExpr a
|           |   |               |           |   Arg0 = `-- Const Int: 1
|           |   |               |           |-- Arg1 = LeftValueExpr b
|           |   |               |           |-- Arg2 = LeftValueExpr c
|           |   |               |           |-- Arg3 = LeftValueExpr d
|           |   |               |           |-- Arg4 = LeftValueExpr e
|           |   |               |           `-- Arg5 = Const Int: 1
|           |   |               `-- LeftValueExpr mod
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 19
|           |   |-- Condition:
|           |   |   `-- LeftValueExpr b
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 19
|           |   |       `-- BinaryExpr Assign
|           |   |           |-- LeftValueExpr ans
|           |   |           `-- BinaryExpr Mod
|           |   |               |-- BinaryExpr Add
|           |   |               |   |-- LeftValueExpr ans
|           |   |               |   `-- BinaryExpr Mul
|           |   |               |       |-- BinaryExpr Sub
|           |   |               |       |   |-- LeftValueExpr b
|           |   |               |       |   `-- FuncCallExpr equal
|           |   |               |       |       |-- Arg0 = LeftValueExpr last
|           |   |               |       |       `-- Arg1 = Const Int: 3
|           |   |               |       `-- FuncCallExpr dfs
|           |   |               |           |-- Arg0 = BinaryExpr Add
|           |   |               |           |   Arg0 = |-- LeftValueExpr a
|           |   |               |           |   Arg0 = `-- Const Int: 1
|           |   |               |           |-- Arg1 = BinaryExpr Sub
|           |   |               |           |   Arg1 = |-- LeftValueExpr b
|           |   |               |           |   Arg1 = `-- Const Int: 1
|           |   |               |           |-- Arg2 = LeftValueExpr c
|           |   |               |           |-- Arg3 = LeftValueExpr d
|           |   |               |           |-- Arg4 = LeftValueExpr e
|           |   |               |           `-- Arg5 = Const Int: 2
|           |   |               `-- LeftValueExpr mod
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 20
|           |   |-- Condition:
|           |   |   `-- LeftValueExpr c
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 20
|           |   |       `-- BinaryExpr Assign
|           |   |           |-- LeftValueExpr ans
|           |   |           `-- BinaryExpr Mod
|           |   |               |-- BinaryExpr Add
|           |   |               |   |-- LeftValueExpr ans
|           |   |               |   `-- BinaryExpr Mul
|           |   |               |       |-- BinaryExpr Sub
|           |   |               |       |   |-- LeftValueExpr c
|           |   |               |       |   `-- FuncCallExpr equal
|           |   |               |       |       |-- Arg0 = LeftValueExpr last
|           |   |               |       |       `-- Arg1 = Const Int: 4
|           |   |               |       `-- FuncCallExpr dfs
|           |   |               |           |-- Arg0 = LeftValueExpr a
|           |   |               |           |-- Arg1 = BinaryExpr Add
|           |   |               |           |   Arg1 = |-- LeftValueExpr b
|           |   |               |           |   Arg1 = `-- Const Int: 1
|           |   |               |           |-- Arg2 = BinaryExpr Sub
|           |   |               |           |   Arg2 = |-- LeftValueExpr c
|           |   |               |           |   Arg2 = `-- Const Int: 1
|           |   |               |           |-- Arg3 = LeftValueExpr d
|           |   |               |           |-- Arg4 = LeftValueExpr e
|           |   |               |           `-- Arg5 = Const Int: 3
|           |   |               `-- LeftValueExpr mod
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 21
|           |   |-- Condition:
|           |   |   `-- LeftValueExpr d
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 21
|           |   |       `-- BinaryExpr Assign
|           |   |           |-- LeftValueExpr ans
|           |   |           `-- BinaryExpr Mod
|           |   |               |-- BinaryExpr Add
|           |   |               |   |-- LeftValueExpr ans
|           |   |               |   `-- BinaryExpr Mul
|           |   |               |       |-- BinaryExpr Sub
|           |   |               |       |   |-- LeftValueExpr d
|           |   |               |       |   `-- FuncCallExpr equal
|           |   |               |       |       |-- Arg0 = LeftValueExpr last
|           |   |               |       |       `-- Arg1 = Const Int: 5
|           |   |               |       `-- FuncCallExpr dfs
|           |   |               |           |-- Arg0 = LeftValueExpr a
|           |   |               |           |-- Arg1 = LeftValueExpr b
|           |   |               |           |-- Arg2 = BinaryExpr Add
|           |   |               |           |   Arg2 = |-- LeftValueExpr c
|           |   |               |           |   Arg2 = `-- Const Int: 1
|           |   |               |           |-- Arg3 = BinaryExpr Sub
|           |   |               |           |   Arg3 = |-- LeftValueExpr d
|           |   |               |           |   Arg3 = `-- Const Int: 1
|           |   |               |           |-- Arg4 = LeftValueExpr e
|           |   |               |           `-- Arg5 = Const Int: 4
|           |   |               `-- LeftValueExpr mod
|           |   `-- Elsebody:
|           |       `-- None
|           |-- IfStmt, line: 22
|           |   |-- Condition:
|           |   |   `-- LeftValueExpr e
|           |   |-- Thenbody:
|           |   |   `-- ExprStmt line: 22
|           |   |       `-- BinaryExpr Assign
|           |   |           |-- LeftValueExpr ans
|           |   |           `-- BinaryExpr Mod
|           |   |               |-- BinaryExpr Add
|           |   |               |   |-- LeftValueExpr ans
|           |   |               |   `-- BinaryExpr Mul
|           |   |               |       |-- LeftValueExpr e
|           |   |               |       `-- FuncCallExpr dfs
|           |   |               |           |-- Arg0 = LeftValueExpr a
|           |   |               |           |-- Arg1 = LeftValueExpr b
|           |   |               |           |-- Arg2 = LeftValueExpr c
|           |   |               |           |-- Arg3 = BinaryExpr Add
|           |   |               |           |   Arg3 = |-- LeftValueExpr d
|           |   |               |           |   Arg3 = `-- Const Int: 1
|           |   |               |           |-- Arg4 = BinaryExpr Sub
|           |   |               |           |   Arg4 = |-- LeftValueExpr e
|           |   |               |           |   Arg4 = `-- Const Int: 1
|           |   |               |           `-- Arg5 = Const Int: 5
|           |   |               `-- LeftValueExpr mod
|           |   `-- Elsebody:
|           |       `-- None
|           |-- ExprStmt line: 23
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr dp[Dim0][Dim1][Dim2][Dim3][Dim4][Dim5]
|           |       |   |-- Dim0 = LeftValueExpr a
|           |       |   |-- Dim1 = LeftValueExpr b
|           |       |   |-- Dim2 = LeftValueExpr c
|           |       |   |-- Dim3 = LeftValueExpr d
|           |       |   |-- Dim4 = LeftValueExpr e
|           |       |   `-- Dim5 = LeftValueExpr last
|           |       `-- BinaryExpr Mod
|           |           |-- LeftValueExpr ans
|           |           `-- LeftValueExpr mod
|           `-- ReturnStmt, line: 24
|               `-- LeftValueExpr dp[Dim0][Dim1][Dim2][Dim3][Dim4][Dim5]
|                   |-- Dim0 = LeftValueExpr a
|                   |-- Dim1 = LeftValueExpr b
|                   |-- Dim2 = LeftValueExpr c
|                   |-- Dim3 = LeftValueExpr d
|                   |-- Dim4 = LeftValueExpr e
|                   `-- Dim5 = LeftValueExpr last
|-- VarDecl, BaseType: Int, line: 27
|   `-- DefNode
|       |-- Var: LeftValueExpr cns[Dim0]
|       |   Var: `-- Dim0 = Const Int: 20
|       `-- Init: no initializer
`-- FuncDecl @Name: main -> @RetType: Int, line: 29
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 29
            |-- VarDecl, BaseType: Int, line: 30
            |   `-- DefNode
            |       `-- Var: LeftValueExpr n
            |       `-- Init: InitSingle
            |           `-- FuncCallExpr getint
            |               `-- No args
            |-- VarDecl, BaseType: Int, line: 31
            |   `-- DefNode
            |       `-- Var: LeftValueExpr i
            |       `-- Init: InitSingle
            |           `-- Const Int: 0
            |-- WhileStmt, line: 32
            |   |-- Cond:
            |   |   `-- BinaryExpr Lt
            |   |       |-- LeftValueExpr i
            |   |       `-- LeftValueExpr maxn
            |   `-- Body:
            |       `-- BlockStmt, line: 32
            |           |-- VarDecl, BaseType: Int, line: 33
            |           |   `-- DefNode
            |           |       `-- Var: LeftValueExpr j
            |           |       `-- Init: InitSingle
            |           |           `-- Const Int: 0
            |           |-- WhileStmt, line: 34
            |           |   |-- Cond:
            |           |   |   `-- BinaryExpr Lt
            |           |   |       |-- LeftValueExpr j
            |           |   |       `-- LeftValueExpr maxn
            |           |   `-- Body:
            |           |       `-- BlockStmt, line: 34
            |           |           |-- VarDecl, BaseType: Int, line: 35
            |           |           |   `-- DefNode
            |           |           |       `-- Var: LeftValueExpr k
            |           |           |       `-- Init: InitSingle
            |           |           |           `-- Const Int: 0
            |           |           |-- WhileStmt, line: 36
            |           |           |   |-- Cond:
            |           |           |   |   `-- BinaryExpr Lt
            |           |           |   |       |-- LeftValueExpr k
            |           |           |   |       `-- LeftValueExpr maxn
            |           |           |   `-- Body:
            |           |           |       `-- BlockStmt, line: 36
            |           |           |           |-- VarDecl, BaseType: Int, line: 37
            |           |           |           |   `-- DefNode
            |           |           |           |       `-- Var: LeftValueExpr l
            |           |           |           |       `-- Init: InitSingle
            |           |           |           |           `-- Const Int: 0
            |           |           |           |-- WhileStmt, line: 38
            |           |           |           |   |-- Cond:
            |           |           |           |   |   `-- BinaryExpr Lt
            |           |           |           |   |       |-- LeftValueExpr l
            |           |           |           |   |       `-- LeftValueExpr maxn
            |           |           |           |   `-- Body:
            |           |           |           |       `-- BlockStmt, line: 38
            |           |           |           |           |-- VarDecl, BaseType: Int, line: 39
            |           |           |           |           |   `-- DefNode
            |           |           |           |           |       `-- Var: LeftValueExpr m
            |           |           |           |           |       `-- Init: InitSingle
            |           |           |           |           |           `-- Const Int: 0
            |           |           |           |           |-- WhileStmt, line: 40
            |           |           |           |           |   |-- Cond:
            |           |           |           |           |   |   `-- BinaryExpr Lt
            |           |           |           |           |   |       |-- LeftValueExpr m
            |           |           |           |           |   |       `-- LeftValueExpr maxn
            |           |           |           |           |   `-- Body:
            |           |           |           |           |       `-- BlockStmt, line: 40
            |           |           |           |           |           |-- VarDecl, BaseType: Int, line: 41
            |           |           |           |           |           |   `-- DefNode
            |           |           |           |           |           |       `-- Var: LeftValueExpr h
            |           |           |           |           |           |       `-- Init: InitSingle
            |           |           |           |           |           |           `-- Const Int: 0
            |           |           |           |           |           |-- WhileStmt, line: 42
            |           |           |           |           |           |   |-- Cond:
            |           |           |           |           |           |   |   `-- BinaryExpr Lt
            |           |           |           |           |           |   |       |-- LeftValueExpr h
            |           |           |           |           |           |   |       `-- Const Int: 7
            |           |           |           |           |           |   `-- Body:
            |           |           |           |           |           |       `-- BlockStmt, line: 42
            |           |           |           |           |           |           |-- ExprStmt line: 43
            |           |           |           |           |           |           |   `-- BinaryExpr Assign
            |           |           |           |           |           |           |       |-- LeftValueExpr dp[Dim0][Dim1][Dim2][Dim3][Dim4][Dim5]
            |           |           |           |           |           |           |       |   |-- Dim0 = LeftValueExpr i
            |           |           |           |           |           |           |       |   |-- Dim1 = LeftValueExpr j
            |           |           |           |           |           |           |       |   |-- Dim2 = LeftValueExpr k
            |           |           |           |           |           |           |       |   |-- Dim3 = LeftValueExpr l
            |           |           |           |           |           |           |       |   |-- Dim4 = LeftValueExpr m
            |           |           |           |           |           |           |       |   `-- Dim5 = LeftValueExpr h
            |           |           |           |           |           |           |       `-- UnaryExpr Sub
            |           |           |           |           |           |           |           `-- Const Int: 1
            |           |           |           |           |           |           `-- ExprStmt line: 44
            |           |           |           |           |           |               `-- BinaryExpr Assign
            |           |           |           |           |           |                   |-- LeftValueExpr h
            |           |           |           |           |           |                   `-- BinaryExpr Add
            |           |           |           |           |           |                       |-- LeftValueExpr h
            |           |           |           |           |           |                       `-- Const Int: 1
            |           |           |           |           |           `-- ExprStmt line: 46
            |           |           |           |           |               `-- BinaryExpr Assign
            |           |           |           |           |                   |-- LeftValueExpr m
            |           |           |           |           |                   `-- BinaryExpr Add
            |           |           |           |           |                       |-- LeftValueExpr m
            |           |           |           |           |                       `-- Const Int: 1
            |           |           |           |           `-- ExprStmt line: 48
            |           |           |           |               `-- BinaryExpr Assign
            |           |           |           |                   |-- LeftValueExpr l
            |           |           |           |                   `-- BinaryExpr Add
            |           |           |           |                       |-- LeftValueExpr l
            |           |           |           |                       `-- Const Int: 1
            |           |           |           `-- ExprStmt line: 50
            |           |           |               `-- BinaryExpr Assign
            |           |           |                   |-- LeftValueExpr k
            |           |           |                   `-- BinaryExpr Add
            |           |           |                       |-- LeftValueExpr k
            |           |           |                       `-- Const Int: 1
            |           |           `-- ExprStmt line: 52
            |           |               `-- BinaryExpr Assign
            |           |                   |-- LeftValueExpr j
            |           |                   `-- BinaryExpr Add
            |           |                       |-- LeftValueExpr j
            |           |                       `-- Const Int: 1
            |           `-- ExprStmt line: 54
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr i
            |                   `-- BinaryExpr Add
            |                       |-- LeftValueExpr i
            |                       `-- Const Int: 1
            |-- ExprStmt line: 57
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr i
            |       `-- Const Int: 0
            |-- WhileStmt, line: 58
            |   |-- Cond:
            |   |   `-- BinaryExpr Lt
            |   |       |-- LeftValueExpr i
            |   |       `-- LeftValueExpr n
            |   `-- Body:
            |       `-- BlockStmt, line: 58
            |           |-- ExprStmt line: 59
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr list[Dim0]
            |           |       |   `-- Dim0 = LeftValueExpr i
            |           |       `-- FuncCallExpr getint
            |           |           `-- No args
            |           |-- ExprStmt line: 60
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr cns[Dim0]
            |           |       |   `-- Dim0 = LeftValueExpr list[Dim0]
            |           |       |       `-- Dim0 = LeftValueExpr i
            |           |       `-- BinaryExpr Add
            |           |           |-- LeftValueExpr cns[Dim0]
            |           |           |   `-- Dim0 = LeftValueExpr list[Dim0]
            |           |           |       `-- Dim0 = LeftValueExpr i
            |           |           `-- Const Int: 1
            |           `-- ExprStmt line: 61
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr i
            |                   `-- BinaryExpr Add
            |                       |-- LeftValueExpr i
            |                       `-- Const Int: 1
            |-- VarDecl, BaseType: Int, line: 64
            |   `-- DefNode
            |       `-- Var: LeftValueExpr ans
            |       `-- Init: InitSingle
            |           `-- FuncCallExpr dfs
            |               |-- Arg0 = LeftValueExpr cns[Dim0]
            |               |   Arg0 = `-- Dim0 = Const Int: 1
            |               |-- Arg1 = LeftValueExpr cns[Dim0]
            |               |   Arg1 = `-- Dim0 = Const Int: 2
            |               |-- Arg2 = LeftValueExpr cns[Dim0]
            |               |   Arg2 = `-- Dim0 = Const Int: 3
            |               |-- Arg3 = LeftValueExpr cns[Dim0]
            |               |   Arg3 = `-- Dim0 = Const Int: 4
            |               |-- Arg4 = LeftValueExpr cns[Dim0]
            |               |   Arg4 = `-- Dim0 = Const Int: 5
            |               `-- Arg5 = Const Int: 0
            |-- ExprStmt line: 66
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr ans
            `-- ReturnStmt, line: 68
                `-- LeftValueExpr ans
