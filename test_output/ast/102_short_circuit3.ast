ASTree
|-- VarDecl, BaseType: Int, line: 1
|   |-- DefNode
|   |   |-- Var: LeftValueExpr a
|   |   `-- Init: no initializer
|   |-- DefNode
|   |   |-- Var: LeftValueExpr b
|   |   `-- Init: no initializer
|   `-- DefNode
|       |-- Var: LeftValueExpr d
|       `-- Init: no initializer
|-- FuncDecl @Name: set_a -> @RetType: Int, line: 3
|   |-- Params:
|   |   `-- Int val
|   `-- Body:
|       `-- BlockStmt, line: 3
|           |-- ExprStmt line: 3
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr a
|           |       `-- LeftValueExpr val
|           `-- ReturnStmt, line: 3
|               `-- LeftValueExpr a
|-- FuncDecl @Name: set_b -> @RetType: Int, line: 4
|   |-- Params:
|   |   `-- Int val
|   `-- Body:
|       `-- BlockStmt, line: 4
|           |-- ExprStmt line: 4
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr b
|           |       `-- LeftValueExpr val
|           `-- ReturnStmt, line: 4
|               `-- LeftValueExpr b
|-- FuncDecl @Name: set_d -> @RetType: Int, line: 5
|   |-- Params:
|   |   `-- Int val
|   `-- Body:
|       `-- BlockStmt, line: 5
|           |-- ExprStmt line: 5
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr d
|           |       `-- LeftValueExpr val
|           `-- ReturnStmt, line: 5
|               `-- LeftValueExpr d
`-- FuncDecl @Name: main -> @RetType: Int, line: 7
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 8
            |-- ExprStmt line: 9
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a
            |       `-- Const Int: 2
            |-- ExprStmt line: 9
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr b
            |       `-- Const Int: 3
            |-- IfStmt, line: 10
            |   |-- Condition:
            |   |   `-- BinaryExpr And
            |   |       |-- FuncCallExpr set_a
            |   |       |   `-- Arg0 = Const Int: 0
            |   |       `-- FuncCallExpr set_b
            |   |           `-- Arg0 = Const Int: 1
            |   |-- Thenbody:
            |   |   `-- BlockStmt, line: 10
            |   `-- Elsebody:
            |       `-- None
            |-- ExprStmt line: 11
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr a
            |-- ExprStmt line: 11
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 32
            |-- ExprStmt line: 12
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr b
            |-- ExprStmt line: 12
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 32
            |-- ExprStmt line: 14
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a
            |       `-- Const Int: 2
            |-- ExprStmt line: 14
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr b
            |       `-- Const Int: 3
            |-- IfStmt, line: 15
            |   |-- Condition:
            |   |   `-- BinaryExpr And
            |   |       |-- FuncCallExpr set_a
            |   |       |   `-- Arg0 = Const Int: 0
            |   |       `-- FuncCallExpr set_b
            |   |           `-- Arg0 = Const Int: 1
            |   |-- Thenbody:
            |   `-- Elsebody:
            |       `-- None
            |-- ExprStmt line: 16
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr a
            |-- ExprStmt line: 16
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 32
            |-- ExprStmt line: 17
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr b
            |-- ExprStmt line: 17
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            |-- VarDecl, BaseType: const Int, line: 19
            |   `-- DefNode
            |       `-- Var: LeftValueExpr c
            |       `-- Init: InitSingle
            |           `-- Const Int: 1
            |-- ExprStmt line: 20
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr d
            |       `-- Const Int: 2
            |-- IfStmt, line: 21
            |   |-- Condition:
            |   |   `-- BinaryExpr And
            |   |       |-- BinaryExpr Ge
            |   |       |   |-- LeftValueExpr c
            |   |       |   `-- Const Int: 1
            |   |       `-- FuncCallExpr set_d
            |   |           `-- Arg0 = Const Int: 3
            |   |-- Thenbody:
            |   `-- Elsebody:
            |       `-- None
            |-- ExprStmt line: 22
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr d
            |-- ExprStmt line: 22
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 32
            |-- IfStmt, line: 23
            |   |-- Condition:
            |   |   `-- BinaryExpr Or
            |   |       |-- BinaryExpr Le
            |   |       |   |-- LeftValueExpr c
            |   |       |   `-- Const Int: 1
            |   |       `-- FuncCallExpr set_d
            |   |           `-- Arg0 = Const Int: 4
            |   |-- Thenbody:
            |   |   `-- BlockStmt, line: 23
            |   `-- Elsebody:
            |       `-- None
            |-- ExprStmt line: 24
            |   `-- FuncCallExpr putint
            |       `-- Arg0 = LeftValueExpr d
            |-- ExprStmt line: 24
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            |-- IfStmt, line: 26
            |   |-- Condition:
            |   |   `-- BinaryExpr Ge
            |   |       |-- Const Int: 16
            |   |       `-- BinaryExpr Sub
            |   |           |-- Const Int: 3
            |   |           `-- BinaryExpr Add
            |   |               |-- Const Int: 2
            |   |               `-- Const Int: 1
            |   |-- Thenbody:
            |   |   `-- BlockStmt, line: 26
            |   |       `-- ExprStmt line: 26
            |   |           `-- FuncCallExpr putch
            |   |               `-- Arg0 = Const Int: 65
            |   `-- Elsebody:
            |       `-- None
            |-- IfStmt, line: 27
            |   |-- Condition:
            |   |   `-- BinaryExpr Neq
            |   |       |-- BinaryExpr Sub
            |   |       |   |-- Const Int: 25
            |   |       |   `-- Const Int: 7
            |   |       `-- BinaryExpr Sub
            |   |           |-- Const Int: 36
            |   |           `-- BinaryExpr Mul
            |   |               |-- Const Int: 6
            |   |               `-- Const Int: 3
            |   |-- Thenbody:
            |   |   `-- ExprStmt line: 27
            |   |       `-- FuncCallExpr putch
            |   |           `-- Arg0 = Const Int: 66
            |   `-- Elsebody:
            |       `-- None
            |-- IfStmt, line: 28
            |   |-- Condition:
            |   |   `-- BinaryExpr Neq
            |   |       |-- BinaryExpr Lt
            |   |       |   |-- Const Int: 1
            |   |       |   `-- Const Int: 8
            |   |       `-- BinaryExpr Mod
            |   |           |-- Const Int: 7
            |   |           `-- Const Int: 2
            |   |-- Thenbody:
            |   |   `-- BlockStmt, line: 28
            |   |       `-- ExprStmt line: 28
            |   |           `-- FuncCallExpr putch
            |   |               `-- Arg0 = Const Int: 67
            |   `-- Elsebody:
            |       `-- None
            |-- IfStmt, line: 29
            |   |-- Condition:
            |   |   `-- BinaryExpr Eq
            |   |       |-- BinaryExpr Gt
            |   |       |   |-- Const Int: 3
            |   |       |   `-- Const Int: 4
            |   |       `-- Const Int: 0
            |   |-- Thenbody:
            |   |   `-- BlockStmt, line: 29
            |   |       `-- ExprStmt line: 29
            |   |           `-- FuncCallExpr putch
            |   |               `-- Arg0 = Const Int: 68
            |   `-- Elsebody:
            |       `-- None
            |-- IfStmt, line: 30
            |   |-- Condition:
            |   |   `-- BinaryExpr Eq
            |   |       |-- Const Int: 1
            |   |       `-- BinaryExpr Le
            |   |           |-- Const Int: 102
            |   |           `-- Const Int: 63
            |   |-- Thenbody:
            |   |   `-- ExprStmt line: 30
            |   |       `-- FuncCallExpr putch
            |   |           `-- Arg0 = Const Int: 69
            |   `-- Elsebody:
            |       `-- None
            |-- IfStmt, line: 31
            |   |-- Condition:
            |   |   `-- BinaryExpr Eq
            |   |       |-- BinaryExpr Sub
            |   |       |   |-- Const Int: 5
            |   |       |   `-- Const Int: 6
            |   |       `-- UnaryExpr Sub
            |   |           `-- UnaryExpr Not
            |   |               `-- Const Int: 0
            |   |-- Thenbody:
            |   |   `-- ExprStmt line: 31
            |   |       `-- FuncCallExpr putch
            |   |           `-- Arg0 = Const Int: 70
            |   `-- Elsebody:
            |       `-- None
            |-- ExprStmt line: 32
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            |-- VarDecl, BaseType: Int, line: 34
            |   |-- DefNode
            |   |   `-- Var: LeftValueExpr i0
            |   |   `-- Init: InitSingle
            |   |       `-- Const Int: 0
            |   |-- DefNode
            |   |   `-- Var: LeftValueExpr i1
            |   |   `-- Init: InitSingle
            |   |       `-- Const Int: 1
            |   |-- DefNode
            |   |   `-- Var: LeftValueExpr i2
            |   |   `-- Init: InitSingle
            |   |       `-- Const Int: 2
            |   |-- DefNode
            |   |   `-- Var: LeftValueExpr i3
            |   |   `-- Init: InitSingle
            |   |       `-- Const Int: 3
            |   `-- DefNode
            |       `-- Var: LeftValueExpr i4
            |       `-- Init: InitSingle
            |           `-- Const Int: 4
            |-- WhileStmt, line: 35
            |   |-- Cond:
            |   |   `-- BinaryExpr And
            |   |       |-- LeftValueExpr i0
            |   |       `-- LeftValueExpr i1
            |   `-- Body:
            |       `-- ExprStmt line: 35
            |           `-- FuncCallExpr putch
            |               `-- Arg0 = Const Int: 32
            |-- IfStmt, line: 36
            |   |-- Condition:
            |   |   `-- BinaryExpr Or
            |   |       |-- LeftValueExpr i0
            |   |       `-- LeftValueExpr i1
            |   |-- Thenbody:
            |   |   `-- ExprStmt line: 36
            |   |       `-- FuncCallExpr putch
            |   |           `-- Arg0 = Const Int: 67
            |   `-- Elsebody:
            |       `-- None
            |-- IfStmt, line: 37
            |   |-- Condition:
            |   |   `-- BinaryExpr Or
            |   |       |-- BinaryExpr Ge
            |   |       |   |-- LeftValueExpr i0
            |   |       |   `-- LeftValueExpr i1
            |   |       `-- BinaryExpr Le
            |   |           |-- LeftValueExpr i1
            |   |           `-- LeftValueExpr i0
            |   |-- Thenbody:
            |   |   `-- ExprStmt line: 37
            |   |       `-- FuncCallExpr putch
            |   |           `-- Arg0 = Const Int: 72
            |   `-- Elsebody:
            |       `-- None
            |-- IfStmt, line: 38
            |   |-- Condition:
            |   |   `-- BinaryExpr And
            |   |       |-- BinaryExpr Ge
            |   |       |   |-- LeftValueExpr i2
            |   |       |   `-- LeftValueExpr i1
            |   |       `-- BinaryExpr Neq
            |   |           |-- LeftValueExpr i4
            |   |           `-- LeftValueExpr i3
            |   |-- Thenbody:
            |   |   `-- BlockStmt, line: 38
            |   |       `-- ExprStmt line: 38
            |   |           `-- FuncCallExpr putch
            |   |               `-- Arg0 = Const Int: 73
            |   `-- Elsebody:
            |       `-- None
            |-- IfStmt, line: 39
            |   |-- Condition:
            |   |   `-- BinaryExpr Or
            |   |       |-- BinaryExpr And
            |   |       |   |-- BinaryExpr Eq
            |   |       |   |   |-- LeftValueExpr i0
            |   |       |   |   `-- UnaryExpr Not
            |   |       |   |       `-- LeftValueExpr i1
            |   |       |   `-- BinaryExpr Lt
            |   |       |       |-- LeftValueExpr i3
            |   |       |       `-- LeftValueExpr i3
            |   |       `-- BinaryExpr Ge
            |   |           |-- LeftValueExpr i4
            |   |           `-- LeftValueExpr i4
            |   |-- Thenbody:
            |   |   `-- BlockStmt, line: 39
            |   |       `-- ExprStmt line: 39
            |   |           `-- FuncCallExpr putch
            |   |               `-- Arg0 = Const Int: 74
            |   `-- Elsebody:
            |       `-- None
            |-- IfStmt, line: 40
            |   |-- Condition:
            |   |   `-- BinaryExpr Or
            |   |       |-- BinaryExpr Eq
            |   |       |   |-- LeftValueExpr i0
            |   |       |   `-- UnaryExpr Not
            |   |       |       `-- LeftValueExpr i1
            |   |       `-- BinaryExpr And
            |   |           |-- BinaryExpr Lt
            |   |           |   |-- LeftValueExpr i3
            |   |           |   `-- LeftValueExpr i3
            |   |           `-- BinaryExpr Ge
            |   |               |-- LeftValueExpr i4
            |   |               `-- LeftValueExpr i4
            |   |-- Thenbody:
            |   |   `-- ExprStmt line: 40
            |   |       `-- FuncCallExpr putch
            |   |           `-- Arg0 = Const Int: 75
            |   `-- Elsebody:
            |       `-- None
            |-- ExprStmt line: 41
            |   `-- FuncCallExpr putch
            |       `-- Arg0 = Const Int: 10
            `-- ReturnStmt, line: 43
                `-- Const Int: 0
