ASTree
|-- FuncDecl @Name: quick_read -> @RetType: Int, line: 1
|   |-- Params:
|   |       None
|   `-- Body:
|       `-- BlockStmt, line: 1
|           |-- VarDecl, BaseType: Int, line: 2
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr ch
|           |       `-- Init: InitSingle
|           |           `-- FuncCallExpr getch
|           |               `-- No args
|           |-- VarDecl, BaseType: Int, line: 2
|           |   |-- DefNode
|           |   |   `-- Var: LeftValueExpr x
|           |   |   `-- Init: InitSingle
|           |   |       `-- Const Int: 0
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr f
|           |       `-- Init: InitSingle
|           |           `-- Const Int: 0
|           |-- WhileStmt, line: 3
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Or
|           |   |       |-- BinaryExpr Lt
|           |   |       |   |-- LeftValueExpr ch
|           |   |       |   `-- Const Int: 48
|           |   |       `-- BinaryExpr Gt
|           |   |           |-- LeftValueExpr ch
|           |   |           `-- Const Int: 57
|           |   `-- Body:
|           |       `-- BlockStmt, line: 3
|           |           |-- IfStmt, line: 4
|           |           |   |-- Condition:
|           |           |   |   `-- BinaryExpr Eq
|           |           |   |       |-- LeftValueExpr ch
|           |           |   |       `-- Const Int: 45
|           |           |   |-- Thenbody:
|           |           |   |   `-- ExprStmt line: 4
|           |           |   |       `-- BinaryExpr Assign
|           |           |   |           |-- LeftValueExpr f
|           |           |   |           `-- Const Int: 1
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           `-- ExprStmt line: 5
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr ch
|           |                   `-- FuncCallExpr getch
|           |                       `-- No args
|           |-- WhileStmt, line: 7
|           |   |-- Cond:
|           |   |   `-- BinaryExpr And
|           |   |       |-- BinaryExpr Ge
|           |   |       |   |-- LeftValueExpr ch
|           |   |       |   `-- Const Int: 48
|           |   |       `-- BinaryExpr Le
|           |   |           |-- LeftValueExpr ch
|           |   |           `-- Const Int: 57
|           |   `-- Body:
|           |       `-- BlockStmt, line: 7
|           |           |-- ExprStmt line: 8
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr x
|           |           |       `-- BinaryExpr Sub
|           |           |           |-- BinaryExpr Add
|           |           |           |   |-- BinaryExpr Mul
|           |           |           |   |   |-- LeftValueExpr x
|           |           |           |   |   `-- Const Int: 10
|           |           |           |   `-- LeftValueExpr ch
|           |           |           `-- Const Int: 48
|           |           `-- ExprStmt line: 9
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr ch
|           |                   `-- FuncCallExpr getch
|           |                       `-- No args
|           `-- IfStmt, line: 11
|               |-- Condition:
|               |   `-- LeftValueExpr f
|               |-- Thenbody:
|               |   `-- ReturnStmt, line: 11
|               |       `-- UnaryExpr Sub
|               |           `-- LeftValueExpr x
|               `-- Elsebody:
|                   `-- ReturnStmt, line: 12
|                       `-- LeftValueExpr x
|-- VarDecl, BaseType: Int, line: 14
|   |-- DefNode
|   |   |-- Var: LeftValueExpr n
|   |   `-- Init: no initializer
|   `-- DefNode
|       |-- Var: LeftValueExpr m
|       `-- Init: no initializer
|-- VarDecl, BaseType: const Int, line: 15
|   `-- DefNode
|       `-- Var: LeftValueExpr maxn
|       `-- Init: InitSingle
|           `-- Const Int: 1005
|-- VarDecl, BaseType: const Int, line: 16
|   `-- DefNode
|       `-- Var: LeftValueExpr maxm
|       `-- Init: InitSingle
|           `-- Const Int: 5005
|-- VarDecl, BaseType: Int, line: 17
|   |-- DefNode
|   |   |-- Var: LeftValueExpr to[Dim0]
|   |   |   Var: `-- Dim0 = LeftValueExpr maxm
|   |   `-- Init: no initializer
|   |-- DefNode
|   |   |-- Var: LeftValueExpr next[Dim0]
|   |   |   Var: `-- Dim0 = LeftValueExpr maxm
|   |   `-- Init: no initializer
|   |-- DefNode
|   |   |-- Var: LeftValueExpr head[Dim0]
|   |   |   Var: `-- Dim0 = LeftValueExpr maxn
|   |   `-- Init: no initializer
|   `-- DefNode
|       `-- Var: LeftValueExpr cnt
|       `-- Init: InitSingle
|           `-- Const Int: 0
|-- VarDecl, BaseType: Int, line: 18
|   |-- DefNode
|   |   |-- Var: LeftValueExpr que[Dim0]
|   |   |   Var: `-- Dim0 = LeftValueExpr maxn
|   |   `-- Init: no initializer
|   |-- DefNode
|   |   |-- Var: LeftValueExpr h
|   |   `-- Init: no initializer
|   |-- DefNode
|   |   |-- Var: LeftValueExpr tail
|   |   `-- Init: no initializer
|   `-- DefNode
|       |-- Var: LeftValueExpr inq[Dim0]
|       |   Var: `-- Dim0 = LeftValueExpr maxn
|       `-- Init: no initializer
|-- FuncDecl @Name: add_edge -> @RetType: Void, line: 19
|   |-- Params:
|   |   |-- Int from
|   |   `-- Int To
|   `-- Body:
|       `-- BlockStmt, line: 19
|           |-- ExprStmt line: 20
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr to[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr cnt
|           |       `-- LeftValueExpr To
|           |-- ExprStmt line: 21
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr next[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr cnt
|           |       `-- LeftValueExpr head[Dim0]
|           |           `-- Dim0 = LeftValueExpr from
|           |-- ExprStmt line: 22
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr head[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr from
|           |       `-- LeftValueExpr cnt
|           |-- ExprStmt line: 23
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr cnt
|           |       `-- BinaryExpr Add
|           |           |-- LeftValueExpr cnt
|           |           `-- Const Int: 1
|           |-- ExprStmt line: 24
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr to[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr cnt
|           |       `-- LeftValueExpr from
|           |-- ExprStmt line: 25
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr next[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr cnt
|           |       `-- LeftValueExpr head[Dim0]
|           |           `-- Dim0 = LeftValueExpr To
|           |-- ExprStmt line: 26
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr head[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr To
|           |       `-- LeftValueExpr cnt
|           `-- ExprStmt line: 27
|               `-- BinaryExpr Assign
|                   |-- LeftValueExpr cnt
|                   `-- BinaryExpr Add
|                       |-- LeftValueExpr cnt
|                       `-- Const Int: 1
|-- FuncDecl @Name: init -> @RetType: Void, line: 29
|   |-- Params:
|   |       None
|   `-- Body:
|       `-- BlockStmt, line: 29
|           |-- VarDecl, BaseType: Int, line: 30
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr i
|           |       `-- Init: InitSingle
|           |           `-- Const Int: 0
|           `-- WhileStmt, line: 31
|               |-- Cond:
|               |   `-- BinaryExpr Lt
|               |       |-- LeftValueExpr i
|               |       `-- LeftValueExpr maxn
|               `-- Body:
|                   `-- BlockStmt, line: 31
|                       |-- ExprStmt line: 32
|                       |   `-- BinaryExpr Assign
|                       |       |-- LeftValueExpr head[Dim0]
|                       |       |   `-- Dim0 = LeftValueExpr i
|                       |       `-- UnaryExpr Sub
|                       |           `-- Const Int: 1
|                       `-- ExprStmt line: 33
|                           `-- BinaryExpr Assign
|                               |-- LeftValueExpr i
|                               `-- BinaryExpr Add
|                                   |-- LeftValueExpr i
|                                   `-- Const Int: 1
|-- FuncDecl @Name: inqueue -> @RetType: Void, line: 36
|   |-- Params:
|   |   `-- Int x
|   `-- Body:
|       `-- BlockStmt, line: 36
|           |-- ExprStmt line: 37
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr inq[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr x
|           |       `-- Const Int: 1
|           |-- ExprStmt line: 38
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr tail
|           |       `-- BinaryExpr Add
|           |           |-- LeftValueExpr tail
|           |           `-- Const Int: 1
|           `-- ExprStmt line: 39
|               `-- BinaryExpr Assign
|                   |-- LeftValueExpr que[Dim0]
|                   |   `-- Dim0 = LeftValueExpr tail
|                   `-- LeftValueExpr x
|-- FuncDecl @Name: pop_queue -> @RetType: Int, line: 41
|   |-- Params:
|   |       None
|   `-- Body:
|       `-- BlockStmt, line: 41
|           |-- ExprStmt line: 42
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr h
|           |       `-- BinaryExpr Add
|           |           |-- LeftValueExpr h
|           |           `-- Const Int: 1
|           |-- VarDecl, BaseType: Int, line: 43
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr res
|           |       `-- Init: InitSingle
|           |           `-- LeftValueExpr que[Dim0]
|           |               `-- Dim0 = LeftValueExpr h
|           `-- ReturnStmt, line: 44
|               `-- LeftValueExpr que[Dim0]
|                   `-- Dim0 = LeftValueExpr h
|-- FuncDecl @Name: same -> @RetType: Int, line: 46
|   |-- Params:
|   |   |-- Int s
|   |   `-- Int t
|   `-- Body:
|       `-- BlockStmt, line: 46
|           |-- ExprStmt line: 47
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr h
|           |       `-- Const Int: 0
|           |-- ExprStmt line: 48
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr tail
|           |       `-- Const Int: 0
|           |-- ExprStmt line: 49
|           |   `-- FuncCallExpr inqueue
|           |       `-- Arg0 = LeftValueExpr s
|           |-- VarDecl, BaseType: Int, line: 50
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr res
|           |       `-- Init: InitSingle
|           |           `-- Const Int: 0
|           |-- WhileStmt, line: 51
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr h
|           |   |       `-- LeftValueExpr tail
|           |   `-- Body:
|           |       `-- BlockStmt, line: 51
|           |           |-- VarDecl, BaseType: Int, line: 52
|           |           |   `-- DefNode
|           |           |       `-- Var: LeftValueExpr x
|           |           |       `-- Init: InitSingle
|           |           |           `-- FuncCallExpr pop_queue
|           |           |               `-- No args
|           |           |-- IfStmt, line: 53
|           |           |   |-- Condition:
|           |           |   |   `-- BinaryExpr Eq
|           |           |   |       |-- LeftValueExpr x
|           |           |   |       `-- LeftValueExpr t
|           |           |   |-- Thenbody:
|           |           |   |   `-- ExprStmt line: 53
|           |           |   |       `-- BinaryExpr Assign
|           |           |   |           |-- LeftValueExpr res
|           |           |   |           `-- Const Int: 1
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           |-- VarDecl, BaseType: Int, line: 54
|           |           |   `-- DefNode
|           |           |       `-- Var: LeftValueExpr i
|           |           |       `-- Init: InitSingle
|           |           |           `-- LeftValueExpr head[Dim0]
|           |           |               `-- Dim0 = LeftValueExpr x
|           |           `-- WhileStmt, line: 55
|           |               |-- Cond:
|           |               |   `-- BinaryExpr Neq
|           |               |       |-- LeftValueExpr i
|           |               |       `-- UnaryExpr Sub
|           |               |           `-- Const Int: 1
|           |               `-- Body:
|           |                   `-- BlockStmt, line: 55
|           |                       |-- IfStmt, line: 56
|           |                       |   |-- Condition:
|           |                       |   |   `-- UnaryExpr Not
|           |                       |   |       `-- LeftValueExpr inq[Dim0]
|           |                       |   |           `-- Dim0 = LeftValueExpr to[Dim0]
|           |                       |   |               `-- Dim0 = LeftValueExpr i
|           |                       |   |-- Thenbody:
|           |                       |   |   `-- ExprStmt line: 56
|           |                       |   |       `-- FuncCallExpr inqueue
|           |                       |   |           `-- Arg0 = LeftValueExpr to[Dim0]
|           |                       |   |               `-- Dim0 = LeftValueExpr i
|           |                       |   `-- Elsebody:
|           |                       |       `-- None
|           |                       `-- ExprStmt line: 57
|           |                           `-- BinaryExpr Assign
|           |                               |-- LeftValueExpr i
|           |                               `-- LeftValueExpr next[Dim0]
|           |                                   `-- Dim0 = LeftValueExpr i
|           |-- VarDecl, BaseType: Int, line: 60
|           |   `-- DefNode
|           |       `-- Var: LeftValueExpr i
|           |       `-- Init: InitSingle
|           |           `-- Const Int: 0
|           |-- WhileStmt, line: 61
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Le
|           |   |       |-- LeftValueExpr i
|           |   |       `-- LeftValueExpr tail
|           |   `-- Body:
|           |       `-- BlockStmt, line: 61
|           |           |-- ExprStmt line: 62
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr inq[Dim0]
|           |           |       |   `-- Dim0 = LeftValueExpr que[Dim0]
|           |           |       |       `-- Dim0 = LeftValueExpr i
|           |           |       `-- Const Int: 0
|           |           `-- ExprStmt line: 63
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Add
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           `-- ReturnStmt, line: 65
|               `-- LeftValueExpr res
`-- FuncDecl @Name: main -> @RetType: Int, line: 67
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 67
            |-- ExprStmt line: 68
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr n
            |       `-- FuncCallExpr quick_read
            |           `-- No args
            |-- ExprStmt line: 68
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr m
            |       `-- FuncCallExpr quick_read
            |           `-- No args
            |-- ExprStmt line: 69
            |   `-- FuncCallExpr init
            |       `-- No args
            |-- WhileStmt, line: 70
            |   |-- Cond:
            |   |   `-- LeftValueExpr m
            |   `-- Body:
            |       `-- BlockStmt, line: 70
            |           |-- VarDecl, BaseType: Int, line: 71
            |           |   `-- DefNode
            |           |       `-- Var: LeftValueExpr ch
            |           |       `-- Init: InitSingle
            |           |           `-- FuncCallExpr getch
            |           |               `-- No args
            |           |-- WhileStmt, line: 72
            |           |   |-- Cond:
            |           |   |   `-- BinaryExpr And
            |           |   |       |-- BinaryExpr Neq
            |           |   |       |   |-- LeftValueExpr ch
            |           |   |       |   `-- Const Int: 81
            |           |   |       `-- BinaryExpr Neq
            |           |   |           |-- LeftValueExpr ch
            |           |   |           `-- Const Int: 85
            |           |   `-- Body:
            |           |       `-- BlockStmt, line: 72
            |           |           `-- ExprStmt line: 73
            |           |               `-- BinaryExpr Assign
            |           |                   |-- LeftValueExpr ch
            |           |                   `-- FuncCallExpr getch
            |           |                       `-- No args
            |           |-- IfStmt, line: 75
            |           |   |-- Condition:
            |           |   |   `-- BinaryExpr Eq
            |           |   |       |-- LeftValueExpr ch
            |           |   |       `-- Const Int: 81
            |           |   |-- Thenbody:
            |           |   |   `-- BlockStmt, line: 75
            |           |   |       |-- VarDecl, BaseType: Int, line: 76
            |           |   |       |   |-- DefNode
            |           |   |       |   |   `-- Var: LeftValueExpr x
            |           |   |       |   |   `-- Init: InitSingle
            |           |   |       |   |       `-- FuncCallExpr quick_read
            |           |   |       |   |           `-- No args
            |           |   |       |   `-- DefNode
            |           |   |       |       `-- Var: LeftValueExpr y
            |           |   |       |       `-- Init: InitSingle
            |           |   |       |           `-- FuncCallExpr quick_read
            |           |   |       |               `-- No args
            |           |   |       |-- ExprStmt line: 77
            |           |   |       |   `-- FuncCallExpr putint
            |           |   |       |       `-- Arg0 = FuncCallExpr same
            |           |   |       |           |-- Arg0 = LeftValueExpr x
            |           |   |       |           `-- Arg1 = LeftValueExpr y
            |           |   |       `-- ExprStmt line: 78
            |           |   |           `-- FuncCallExpr putch
            |           |   |               `-- Arg0 = Const Int: 10
            |           |   `-- Elsebody:
            |           |       `-- BlockStmt, line: 79
            |           |           |-- VarDecl, BaseType: Int, line: 80
            |           |           |   |-- DefNode
            |           |           |   |   `-- Var: LeftValueExpr x
            |           |           |   |   `-- Init: InitSingle
            |           |           |   |       `-- FuncCallExpr quick_read
            |           |           |   |           `-- No args
            |           |           |   `-- DefNode
            |           |           |       `-- Var: LeftValueExpr y
            |           |           |       `-- Init: InitSingle
            |           |           |           `-- FuncCallExpr quick_read
            |           |           |               `-- No args
            |           |           `-- ExprStmt line: 81
            |           |               `-- FuncCallExpr add_edge
            |           |                   |-- Arg0 = LeftValueExpr x
            |           |                   `-- Arg1 = LeftValueExpr y
            |           `-- ExprStmt line: 83
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr m
            |                   `-- BinaryExpr Sub
            |                       |-- LeftValueExpr m
            |                       `-- Const Int: 1
            `-- ReturnStmt, line: 85
                `-- Const Int: 0
