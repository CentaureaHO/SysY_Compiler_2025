ASTree
|-- VarDecl, BaseType: Int, line: 1
|   `-- DefNode
|       |-- Var: LeftValueExpr n
|       `-- Init: no initializer
|-- FuncDecl @Name: swap -> @RetType: Int, line: 2
|   |-- Params:
|   |   |-- Int array[Dim0]
|   |   |   `-- Dim0 = Const Int: -1
|   |   |-- Int i
|   |   `-- Int j
|   `-- Body:
|       `-- BlockStmt, line: 2
|           |-- VarDecl, BaseType: Int, line: 3
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr temp
|           |       `-- Init: no initializer
|           |-- ExprStmt line: 4
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr temp
|           |       `-- LeftValueExpr array[Dim0]
|           |           `-- Dim0 = LeftValueExpr i
|           |-- ExprStmt line: 5
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr array[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr i
|           |       `-- LeftValueExpr array[Dim0]
|           |           `-- Dim0 = LeftValueExpr j
|           |-- ExprStmt line: 6
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr array[Dim0]
|           |       |   `-- Dim0 = LeftValueExpr j
|           |       `-- LeftValueExpr temp
|           `-- ReturnStmt, line: 7
|               `-- Const Int: 0
|-- FuncDecl @Name: heap_ajust -> @RetType: Int, line: 9
|   |-- Params:
|   |   |-- Int arr[Dim0]
|   |   |   `-- Dim0 = Const Int: -1
|   |   |-- Int start
|   |   `-- Int end
|   `-- Body:
|       `-- BlockStmt, line: 9
|           |-- VarDecl, BaseType: Int, line: 10
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr dad
|           |       `-- Init: no initializer
|           |-- ExprStmt line: 11
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr dad
|           |       `-- LeftValueExpr start
|           |-- VarDecl, BaseType: Int, line: 12
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr son
|           |       `-- Init: no initializer
|           |-- ExprStmt line: 13
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr son
|           |       `-- BinaryExpr Add
|           |           |-- BinaryExpr Mul
|           |           |   |-- LeftValueExpr dad
|           |           |   `-- Const Int: 2
|           |           `-- Const Int: 1
|           |-- WhileStmt, line: 14
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Lt
|           |   |       |-- LeftValueExpr son
|           |   |       `-- BinaryExpr Add
|           |   |           |-- LeftValueExpr end
|           |   |           `-- Const Int: 1
|           |   `-- Body:
|           |       `-- BlockStmt, line: 14
|           |           |-- IfStmt, line: 15
|           |           |   |-- Condition:
|           |           |   |   `-- BinaryExpr And
|           |           |   |       |-- BinaryExpr Lt
|           |           |   |       |   |-- LeftValueExpr son
|           |           |   |       |   `-- LeftValueExpr end
|           |           |   |       `-- BinaryExpr Lt
|           |           |   |           |-- LeftValueExpr arr[Dim0]
|           |           |   |           |   `-- Dim0 = LeftValueExpr son
|           |           |   |           `-- LeftValueExpr arr[Dim0]
|           |           |   |               `-- Dim0 = BinaryExpr Add
|           |           |   |                   |-- LeftValueExpr son
|           |           |   |                   `-- Const Int: 1
|           |           |   |-- Thenbody:
|           |           |   |   `-- ExprStmt line: 16
|           |           |   |       `-- BinaryExpr Assign
|           |           |   |           |-- LeftValueExpr son
|           |           |   |           `-- BinaryExpr Add
|           |           |   |               |-- LeftValueExpr son
|           |           |   |               `-- Const Int: 1
|           |           |   `-- Elsebody:
|           |           |       `-- None
|           |           `-- IfStmt, line: 17
|           |               |-- Condition:
|           |               |   `-- BinaryExpr Gt
|           |               |       |-- LeftValueExpr arr[Dim0]
|           |               |       |   `-- Dim0 = LeftValueExpr dad
|           |               |       `-- LeftValueExpr arr[Dim0]
|           |               |           `-- Dim0 = LeftValueExpr son
|           |               |-- Thenbody:
|           |               |   `-- ReturnStmt, line: 18
|           |               |       `-- Const Int: 0
|           |               `-- Elsebody:
|           |                   `-- BlockStmt, line: 19
|           |                       |-- ExprStmt line: 20
|           |                       |   `-- BinaryExpr Assign
|           |                       |       |-- LeftValueExpr dad
|           |                       |       `-- FuncCallExpr swap
|           |                       |           |-- Arg0 = LeftValueExpr arr
|           |                       |           |-- Arg1 = LeftValueExpr dad
|           |                       |           `-- Arg2 = LeftValueExpr son
|           |                       |-- ExprStmt line: 21
|           |                       |   `-- BinaryExpr Assign
|           |                       |       |-- LeftValueExpr dad
|           |                       |       `-- LeftValueExpr son
|           |                       `-- ExprStmt line: 22
|           |                           `-- BinaryExpr Assign
|           |                               |-- LeftValueExpr son
|           |                               `-- BinaryExpr Add
|           |                                   |-- BinaryExpr Mul
|           |                                   |   |-- LeftValueExpr dad
|           |                                   |   `-- Const Int: 2
|           |                                   `-- Const Int: 1
|           `-- ReturnStmt, line: 25
|               `-- Const Int: 0
|-- FuncDecl @Name: heap_sort -> @RetType: Int, line: 27
|   |-- Params:
|   |   |-- Int arr[Dim0]
|   |   |   `-- Dim0 = Const Int: -1
|   |   `-- Int len
|   `-- Body:
|       `-- BlockStmt, line: 27
|           |-- VarDecl, BaseType: Int, line: 28
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr i
|           |       `-- Init: no initializer
|           |-- VarDecl, BaseType: Int, line: 29
|           |   `-- DefNode
|           |       |-- Var: LeftValueExpr tmp
|           |       `-- Init: no initializer
|           |-- ExprStmt line: 30
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr i
|           |       `-- BinaryExpr Sub
|           |           |-- BinaryExpr Div
|           |           |   |-- LeftValueExpr len
|           |           |   `-- Const Int: 2
|           |           `-- Const Int: 1
|           |-- WhileStmt, line: 31
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Gt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- UnaryExpr Sub
|           |   |           `-- Const Int: 1
|           |   `-- Body:
|           |       `-- BlockStmt, line: 31
|           |           |-- ExprStmt line: 32
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr tmp
|           |           |       `-- BinaryExpr Sub
|           |           |           |-- LeftValueExpr len
|           |           |           `-- Const Int: 1
|           |           |-- ExprStmt line: 33
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr tmp
|           |           |       `-- FuncCallExpr heap_ajust
|           |           |           |-- Arg0 = LeftValueExpr arr
|           |           |           |-- Arg1 = LeftValueExpr i
|           |           |           `-- Arg2 = LeftValueExpr tmp
|           |           `-- ExprStmt line: 34
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Sub
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           |-- ExprStmt line: 36
|           |   `-- BinaryExpr Assign
|           |       |-- LeftValueExpr i
|           |       `-- BinaryExpr Sub
|           |           |-- LeftValueExpr len
|           |           `-- Const Int: 1
|           |-- WhileStmt, line: 37
|           |   |-- Cond:
|           |   |   `-- BinaryExpr Gt
|           |   |       |-- LeftValueExpr i
|           |   |       `-- Const Int: 0
|           |   `-- Body:
|           |       `-- BlockStmt, line: 37
|           |           |-- VarDecl, BaseType: Int, line: 38
|           |           |   `-- DefNode
|           |           |       |-- Var: LeftValueExpr tmp0
|           |           |       `-- Init: no initializer
|           |           |-- ExprStmt line: 39
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr tmp0
|           |           |       `-- Const Int: 0
|           |           |-- ExprStmt line: 40
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr tmp
|           |           |       `-- FuncCallExpr swap
|           |           |           |-- Arg0 = LeftValueExpr arr
|           |           |           |-- Arg1 = LeftValueExpr tmp0
|           |           |           `-- Arg2 = LeftValueExpr i
|           |           |-- ExprStmt line: 41
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr tmp
|           |           |       `-- BinaryExpr Sub
|           |           |           |-- LeftValueExpr i
|           |           |           `-- Const Int: 1
|           |           |-- ExprStmt line: 42
|           |           |   `-- BinaryExpr Assign
|           |           |       |-- LeftValueExpr tmp
|           |           |       `-- FuncCallExpr heap_ajust
|           |           |           |-- Arg0 = LeftValueExpr arr
|           |           |           |-- Arg1 = LeftValueExpr tmp0
|           |           |           `-- Arg2 = LeftValueExpr tmp
|           |           `-- ExprStmt line: 43
|           |               `-- BinaryExpr Assign
|           |                   |-- LeftValueExpr i
|           |                   `-- BinaryExpr Sub
|           |                       |-- LeftValueExpr i
|           |                       `-- Const Int: 1
|           `-- ReturnStmt, line: 45
|               `-- Const Int: 0
`-- FuncDecl @Name: main -> @RetType: Int, line: 48
    |-- Params:
    |       None
    `-- Body:
        `-- BlockStmt, line: 48
            |-- ExprStmt line: 49
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr n
            |       `-- Const Int: 10
            |-- VarDecl, BaseType: Int, line: 50
            |   `-- DefNode
            |       |-- Var: LeftValueExpr a[Dim0]
            |       |   Var: `-- Dim0 = Const Int: 10
            |       `-- Init: no initializer
            |-- ExprStmt line: 51
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 0
            |       `-- Const Int: 4
            |-- ExprStmt line: 51
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 1
            |       `-- Const Int: 3
            |-- ExprStmt line: 51
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 2
            |       `-- Const Int: 9
            |-- ExprStmt line: 51
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 3
            |       `-- Const Int: 2
            |-- ExprStmt line: 51
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 4
            |       `-- Const Int: 0
            |-- ExprStmt line: 52
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 5
            |       `-- Const Int: 1
            |-- ExprStmt line: 52
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 6
            |       `-- Const Int: 6
            |-- ExprStmt line: 52
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 7
            |       `-- Const Int: 5
            |-- ExprStmt line: 52
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 8
            |       `-- Const Int: 7
            |-- ExprStmt line: 52
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr a[Dim0]
            |       |   `-- Dim0 = Const Int: 9
            |       `-- Const Int: 8
            |-- VarDecl, BaseType: Int, line: 53
            |   `-- DefNode
            |       |-- Var: LeftValueExpr i
            |       `-- Init: no initializer
            |-- ExprStmt line: 54
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr i
            |       `-- Const Int: 0
            |-- ExprStmt line: 55
            |   `-- BinaryExpr Assign
            |       |-- LeftValueExpr i
            |       `-- FuncCallExpr heap_sort
            |           |-- Arg0 = LeftValueExpr a
            |           `-- Arg1 = LeftValueExpr n
            |-- WhileStmt, line: 56
            |   |-- Cond:
            |   |   `-- BinaryExpr Lt
            |   |       |-- LeftValueExpr i
            |   |       `-- LeftValueExpr n
            |   `-- Body:
            |       `-- BlockStmt, line: 56
            |           |-- VarDecl, BaseType: Int, line: 57
            |           |   `-- DefNode
            |           |       |-- Var: LeftValueExpr tmp
            |           |       `-- Init: no initializer
            |           |-- ExprStmt line: 58
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr tmp
            |           |       `-- LeftValueExpr a[Dim0]
            |           |           `-- Dim0 = LeftValueExpr i
            |           |-- ExprStmt line: 59
            |           |   `-- FuncCallExpr putint
            |           |       `-- Arg0 = LeftValueExpr tmp
            |           |-- ExprStmt line: 60
            |           |   `-- BinaryExpr Assign
            |           |       |-- LeftValueExpr tmp
            |           |       `-- Const Int: 10
            |           |-- ExprStmt line: 61
            |           |   `-- FuncCallExpr putch
            |           |       `-- Arg0 = LeftValueExpr tmp
            |           `-- ExprStmt line: 62
            |               `-- BinaryExpr Assign
            |                   |-- LeftValueExpr i
            |                   `-- BinaryExpr Add
            |                       |-- LeftValueExpr i
            |                       `-- Const Int: 1
            `-- ReturnStmt, line: 64
                `-- Const Int: 0
