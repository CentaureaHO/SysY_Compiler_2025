// 全局数据
int DATA_TABLE[4][5] = {
    {1, 2, 3, 4, 5},
    {6, 7, 8, 9, 10},
    {11, 12, 13, 14, 15},
    {16, 17, 18, 19, 20}
};

int INDEX_MAP[10] = {0, 1, 2, 3, 0, 1, 2, 3, 0, 1};  // 只读索引映射
int COLUMN_SUMS[5] = {0, 0, 0, 0, 0};  // 会被修改
int ACCESS_PATTERN[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};  // 记录访问模式

// 根据索引映射访问数据
void accessByIndirection(int pattern_idx) {
    int row = INDEX_MAP[pattern_idx];
    int col = 0;
    
    for (col = 0; col < 5; col = col + 1) {
        // 记录访问模式
        ACCESS_PATTERN[pattern_idx] = ACCESS_PATTERN[pattern_idx] + 1;
        
        // 更新列总和
        COLUMN_SUMS[col] = COLUMN_SUMS[col] + DATA_TABLE[row][col];
    }
}

int main() {
    int i = 0;
    
    // 通过间接索引访问数据
    for (i = 0; i < 5; i = i + 1) {
        accessByIndirection(i);
    }
    
    // 输出结果
    putint(COLUMN_SUMS[0]);
    putint(COLUMN_SUMS[4]);
    
    return 0;
}

// DATA_TABLE - 只被读取的二维数组
// ✅ INDEX_MAP - 只用于索引查找的数组